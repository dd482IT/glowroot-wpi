// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Trace.proto
package org.glowroot.wire.api.model;

// @@protoc_insertion_point(outer_class_scope)
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.tainting.TaintingChecker")
public final class TraceOuterClass {

    @org.checkerframework.dataflow.qual.SideEffectFree
    private TraceOuterClass() {
    }

    @org.checkerframework.dataflow.qual.Pure
    public static void registerAllExtensions(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite registry) {
    }

    @org.checkerframework.dataflow.qual.Pure
    public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
    }

    public interface TraceOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Trace)
    com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * this is a uuid
         * </pre>
         *
         * <code>string id = 1;</code>
         * @return The id.
         */
        @org.checkerframework.dataflow.qual.Pure
        java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getId();

        /**
         * <pre>
         * this is a uuid
         * </pre>
         *
         * <code>string id = 1;</code>
         * @return The bytes for id.
         */
        @org.checkerframework.dataflow.qual.Pure
        com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getIdBytes();

        /**
         * <code>.org_glowroot_wire_api_model.Trace.Header header = 2;</code>
         * @return Whether the header field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted boolean hasHeader();

        /**
         * <code>.org_glowroot_wire_api_model.Trace.Header header = 2;</code>
         * @return The header.
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header getHeader();

        /**
         * <code>.org_glowroot_wire_api_model.Trace.Header header = 2;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted HeaderOrBuilder getHeaderOrBuilder();

        /**
         * <pre>
         * entry ordering is pre-order depth-first
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry> getEntryList();

        /**
         * <pre>
         * entry ordering is pre-order depth-first
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry getEntry(int index);

        /**
         * <pre>
         * entry ordering is pre-order depth-first
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted int getEntryCount();

        /**
         * <pre>
         * entry ordering is pre-order depth-first
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.EntryOrBuilder> getEntryOrBuilderList();

        /**
         * <pre>
         * entry ordering is pre-order depth-first
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted EntryOrBuilder getEntryOrBuilder(int index);

        /**
         * <pre>
         * there are typically multiple "root" nodes (with depth=0)
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query> getQueryList();

        /**
         * <pre>
         * there are typically multiple "root" nodes (with depth=0)
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query getQuery(int index);

        /**
         * <pre>
         * there are typically multiple "root" nodes (with depth=0)
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted int getQueryCount();

        /**
         * <pre>
         * there are typically multiple "root" nodes (with depth=0)
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.QueryOrBuilder> getQueryOrBuilderList();

        /**
         * <pre>
         * there are typically multiple "root" nodes (with depth=0)
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted QueryOrBuilder getQueryOrBuilder(int index);

        /**
         * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 4;</code>
         * @return Whether the mainThreadProfile field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted boolean hasMainThreadProfile();

        /**
         * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 4;</code>
         * @return The mainThreadProfile.
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile getMainThreadProfile();

        /**
         * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 4;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted ProfileOrBuilder getMainThreadProfileOrBuilder();

        /**
         * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 5;</code>
         * @return Whether the auxThreadProfile field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted boolean hasAuxThreadProfile();

        /**
         * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 5;</code>
         * @return The auxThreadProfile.
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile getAuxThreadProfile();

        /**
         * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 5;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted ProfileOrBuilder getAuxThreadProfileOrBuilder();

        /**
         * <pre>
         * optimization so the central collector does not need to check for prior partial
         * </pre>
         *
         * <code>bool update = 6;</code>
         * @return The update.
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted boolean getUpdate();

        /**
         * <pre>
         * trace in common case where this is not an update
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText> getSharedQueryTextList();

        /**
         * <pre>
         * trace in common case where this is not an update
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText getSharedQueryText(int index);

        /**
         * <pre>
         * trace in common case where this is not an update
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted int getSharedQueryTextCount();

        /**
         * <pre>
         * trace in common case where this is not an update
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryTextOrBuilder> getSharedQueryTextOrBuilderList();

        /**
         * <pre>
         * trace in common case where this is not an update
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryTextOrBuilder getSharedQueryTextOrBuilder(int index);
    }

    /**
     * Protobuf type {@code org_glowroot_wire_api_model.Trace}
     */
    public static final class Trace extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Trace)
    TraceOrBuilder {

        private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

        // Use Trace.newBuilder() to construct.
        private Trace(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
            super(builder);
        }

        @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.id_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
        private Trace() {
            id_ = "";
            entry_ = java.util.Collections.emptyList();
            query_ = java.util.Collections.emptyList();
            sharedQueryText_ = java.util.Collections.emptyList();
        }

        @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.id_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
        protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted Trace this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
            return new Trace();
        }

        @org.checkerframework.dataflow.qual.Pure
        public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return this.unknownFields;
        }

        private Trace(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch(tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            {
                                java.lang.String s = input.readStringRequireUtf8();
                                id_ = s;
                                break;
                            }
                        case 18:
                            {
                                org.glowroot.wire.api.model.TraceOuterClass.Trace.Header.Builder subBuilder = null;
                                if (header_ != null) {
                                    subBuilder = header_.toBuilder();
                                }
                                header_ = input.readMessage(org.glowroot.wire.api.model.TraceOuterClass.Trace.Header.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(header_);
                                    header_ = subBuilder.buildPartial();
                                }
                                break;
                            }
                        case 26:
                            {
                                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                    entry_ = new java.util.ArrayList<org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry>();
                                    mutable_bitField0_ |= 0x00000001;
                                }
                                entry_.add(input.readMessage(org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry.parser(), extensionRegistry));
                                break;
                            }
                        case 34:
                            {
                                org.glowroot.wire.api.model.ProfileOuterClass.Profile.Builder subBuilder = null;
                                if (mainThreadProfile_ != null) {
                                    subBuilder = mainThreadProfile_.toBuilder();
                                }
                                mainThreadProfile_ = input.readMessage(org.glowroot.wire.api.model.ProfileOuterClass.Profile.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(mainThreadProfile_);
                                    mainThreadProfile_ = subBuilder.buildPartial();
                                }
                                break;
                            }
                        case 42:
                            {
                                org.glowroot.wire.api.model.ProfileOuterClass.Profile.Builder subBuilder = null;
                                if (auxThreadProfile_ != null) {
                                    subBuilder = auxThreadProfile_.toBuilder();
                                }
                                auxThreadProfile_ = input.readMessage(org.glowroot.wire.api.model.ProfileOuterClass.Profile.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(auxThreadProfile_);
                                    auxThreadProfile_ = subBuilder.buildPartial();
                                }
                                break;
                            }
                        case 48:
                            {
                                update_ = input.readBool();
                                break;
                            }
                        case 66:
                            {
                                if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                                    sharedQueryText_ = new java.util.ArrayList<org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText>();
                                    mutable_bitField0_ |= 0x00000004;
                                }
                                sharedQueryText_.add(input.readMessage(org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText.parser(), extensionRegistry));
                                break;
                            }
                        case 74:
                            {
                                if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                                    query_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query>();
                                    mutable_bitField0_ |= 0x00000002;
                                }
                                query_.add(input.readMessage(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.parser(), extensionRegistry));
                                break;
                            }
                        default:
                            {
                                if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) != 0)) {
                    entry_ = java.util.Collections.unmodifiableList(entry_);
                }
                if (((mutable_bitField0_ & 0x00000004) != 0)) {
                    sharedQueryText_ = java.util.Collections.unmodifiableList(sharedQueryText_);
                }
                if (((mutable_bitField0_ & 0x00000002) != 0)) {
                    query_ = java.util.Collections.unmodifiableList(query_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        @org.checkerframework.dataflow.qual.Pure
        public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
            return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.Builder.class);
        }

        public interface HeaderOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Trace.Header)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <code>bool partial = 1;</code>
             * @return The partial.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean getPartial();

            /**
             * <code>bool slow = 2;</code>
             * @return The slow.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean getSlow();

            /**
             * <code>bool async = 3;</code>
             * @return The async.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean getAsync();

            /**
             * <code>int64 start_time = 4;</code>
             * @return The startTime.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted long getStartTime();

            /**
             * <code>int64 capture_time = 5;</code>
             * @return The captureTime.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted long getCaptureTime();

            /**
             * <code>int64 duration_nanos = 6;</code>
             * @return The durationNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted long getDurationNanos();

            /**
             * <code>string transaction_type = 7;</code>
             * @return The transactionType.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getTransactionType();

            /**
             * <code>string transaction_type = 7;</code>
             * @return The bytes for transactionType.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTransactionTypeBytes();

            /**
             * <code>string transaction_name = 8;</code>
             * @return The transactionName.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getTransactionName();

            /**
             * <code>string transaction_name = 8;</code>
             * @return The bytes for transactionName.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTransactionNameBytes();

            /**
             * <code>string headline = 9;</code>
             * @return The headline.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getHeadline();

            /**
             * <code>string headline = 9;</code>
             * @return The bytes for headline.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getHeadlineBytes();

            /**
             * <code>string user = 10;</code>
             * @return The user.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getUser();

            /**
             * <code>string user = 10;</code>
             * @return The bytes for user.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getUserBytes();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute> getAttributeList();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute getAttribute(int index);

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted int getAttributeCount();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.AttributeOrBuilder> getAttributeOrBuilderList();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted AttributeOrBuilder getAttributeOrBuilder(int index);

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry> getDetailEntryList();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry getDetailEntry(int index);

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted int getDetailEntryCount();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntryOrBuilder> getDetailEntryOrBuilderList();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntryOrBuilder getDetailEntryOrBuilder(int index);

            /**
             * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.Proto.StackTraceElement> getLocationStackTraceElementList();

            /**
             * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted StackTraceElement getLocationStackTraceElement(int index);

            /**
             * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted int getLocationStackTraceElementCount();

            /**
             * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.Proto.StackTraceElementOrBuilder> getLocationStackTraceElementOrBuilderList();

            /**
             * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted StackTraceElementOrBuilder getLocationStackTraceElementOrBuilder(int index);

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Error error = 13;</code>
             * @return Whether the error field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasError();

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Error error = 13;</code>
             * @return The error.
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error getError();

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Error error = 13;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ErrorOrBuilder getErrorOrBuilder();

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Timer main_thread_root_timer = 14;</code>
             * @return Whether the mainThreadRootTimer field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasMainThreadRootTimer();

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Timer main_thread_root_timer = 14;</code>
             * @return The mainThreadRootTimer.
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer getMainThreadRootTimer();

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Timer main_thread_root_timer = 14;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getMainThreadRootTimerOrBuilder();

            /**
             * <pre>
             * aux thread root timer is always "auxiliary thread"
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Trace.Timer aux_thread_root_timer = 15;</code>
             * @return Whether the auxThreadRootTimer field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasAuxThreadRootTimer();

            /**
             * <pre>
             * aux thread root timer is always "auxiliary thread"
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Trace.Timer aux_thread_root_timer = 15;</code>
             * @return The auxThreadRootTimer.
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer getAuxThreadRootTimer();

            /**
             * <pre>
             * aux thread root timer is always "auxiliary thread"
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Trace.Timer aux_thread_root_timer = 15;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getAuxThreadRootTimerOrBuilder();

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer> getAsyncTimerList();

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer getAsyncTimer(int index);

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted int getAsyncTimerCount();

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.TimerOrBuilder> getAsyncTimerOrBuilderList();

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getAsyncTimerOrBuilder(int index);

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_main_thread_stats = 17;</code>
             * @return Whether the oldMainThreadStats field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasOldMainThreadStats();

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_main_thread_stats = 17;</code>
             * @return The oldMainThreadStats.
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats getOldMainThreadStats();

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_main_thread_stats = 17;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStatsOrBuilder getOldMainThreadStatsOrBuilder();

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_aux_thread_stats = 18;</code>
             * @return Whether the oldAuxThreadStats field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasOldAuxThreadStats();

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_aux_thread_stats = 18;</code>
             * @return The oldAuxThreadStats.
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats getOldAuxThreadStats();

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_aux_thread_stats = 18;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStatsOrBuilder getOldAuxThreadStatsOrBuilder();

            /**
             * <code>.org_glowroot_wire_api_model.Trace.ThreadStats main_thread_stats = 27;</code>
             * @return Whether the mainThreadStats field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasMainThreadStats();

            /**
             * <code>.org_glowroot_wire_api_model.Trace.ThreadStats main_thread_stats = 27;</code>
             * @return The mainThreadStats.
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats getMainThreadStats();

            /**
             * <code>.org_glowroot_wire_api_model.Trace.ThreadStats main_thread_stats = 27;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStatsOrBuilder getMainThreadStatsOrBuilder();

            /**
             * <code>.org_glowroot_wire_api_model.Trace.ThreadStats aux_thread_stats = 28;</code>
             * @return Whether the auxThreadStats field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasAuxThreadStats();

            /**
             * <code>.org_glowroot_wire_api_model.Trace.ThreadStats aux_thread_stats = 28;</code>
             * @return The auxThreadStats.
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats getAuxThreadStats();

            /**
             * <code>.org_glowroot_wire_api_model.Trace.ThreadStats aux_thread_stats = 28;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStatsOrBuilder getAuxThreadStatsOrBuilder();

            /**
             * <code>int32 entry_count = 19;</code>
             * @return The entryCount.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted int getEntryCount();

            /**
             * <code>bool entry_limit_exceeded = 20;</code>
             * @return The entryLimitExceeded.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean getEntryLimitExceeded();

            /**
             * <code>int32 query_count = 25;</code>
             * @return The queryCount.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted int getQueryCount();

            /**
             * <code>bool query_limit_exceeded = 26;</code>
             * @return The queryLimitExceeded.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean getQueryLimitExceeded();

            /**
             * <code>int64 main_thread_profile_sample_count = 21;</code>
             * @return The mainThreadProfileSampleCount.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted long getMainThreadProfileSampleCount();

            /**
             * <code>bool main_thread_profile_sample_limit_exceeded = 22;</code>
             * @return The mainThreadProfileSampleLimitExceeded.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean getMainThreadProfileSampleLimitExceeded();

            /**
             * <code>int64 aux_thread_profile_sample_count = 23;</code>
             * @return The auxThreadProfileSampleCount.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted long getAuxThreadProfileSampleCount();

            /**
             * <code>bool aux_thread_profile_sample_limit_exceeded = 24;</code>
             * @return The auxThreadProfileSampleLimitExceeded.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean getAuxThreadProfileSampleLimitExceeded();

            /**
             * <pre>
             * introduced in 0.13.1, but only populated and used by the central collector
             * </pre>
             *
             * <code>int64 capture_time_partial_rollup = 30;</code>
             * @return The captureTimePartialRollup.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted long getCaptureTimePartialRollup();
        }

        /**
         * Protobuf type {@code org_glowroot_wire_api_model.Trace.Header}
         */
        public static final class Header extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Trace.Header)
        HeaderOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use Header.newBuilder() to construct.
            private Header(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.headline_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.transactionName_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.transactionType_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.user_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private Header() {
                transactionType_ = "";
                transactionName_ = "";
                headline_ = "";
                user_ = "";
                attribute_ = java.util.Collections.emptyList();
                detailEntry_ = java.util.Collections.emptyList();
                locationStackTraceElement_ = java.util.Collections.emptyList();
                asyncTimer_ = java.util.Collections.emptyList();
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.headline_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted Header this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new Header();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return this.unknownFields;
            }

            private Header(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 8:
                                {
                                    partial_ = input.readBool();
                                    break;
                                }
                            case 16:
                                {
                                    slow_ = input.readBool();
                                    break;
                                }
                            case 24:
                                {
                                    async_ = input.readBool();
                                    break;
                                }
                            case 32:
                                {
                                    startTime_ = input.readInt64();
                                    break;
                                }
                            case 40:
                                {
                                    captureTime_ = input.readInt64();
                                    break;
                                }
                            case 48:
                                {
                                    durationNanos_ = input.readInt64();
                                    break;
                                }
                            case 58:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    transactionType_ = s;
                                    break;
                                }
                            case 66:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    transactionName_ = s;
                                    break;
                                }
                            case 74:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    headline_ = s;
                                    break;
                                }
                            case 82:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    user_ = s;
                                    break;
                                }
                            case 90:
                                {
                                    if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                        attribute_ = new java.util.ArrayList<org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute>();
                                        mutable_bitField0_ |= 0x00000001;
                                    }
                                    attribute_.add(input.readMessage(org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute.parser(), extensionRegistry));
                                    break;
                                }
                            case 98:
                                {
                                    if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                                        detailEntry_ = new java.util.ArrayList<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry>();
                                        mutable_bitField0_ |= 0x00000002;
                                    }
                                    detailEntry_.add(input.readMessage(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.parser(), extensionRegistry));
                                    break;
                                }
                            case 106:
                                {
                                    org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.Builder subBuilder = null;
                                    if (error_ != null) {
                                        subBuilder = error_.toBuilder();
                                    }
                                    error_ = input.readMessage(org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom(error_);
                                        error_ = subBuilder.buildPartial();
                                    }
                                    break;
                                }
                            case 114:
                                {
                                    org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder subBuilder = null;
                                    if (mainThreadRootTimer_ != null) {
                                        subBuilder = mainThreadRootTimer_.toBuilder();
                                    }
                                    mainThreadRootTimer_ = input.readMessage(org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom(mainThreadRootTimer_);
                                        mainThreadRootTimer_ = subBuilder.buildPartial();
                                    }
                                    break;
                                }
                            case 122:
                                {
                                    org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder subBuilder = null;
                                    if (auxThreadRootTimer_ != null) {
                                        subBuilder = auxThreadRootTimer_.toBuilder();
                                    }
                                    auxThreadRootTimer_ = input.readMessage(org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom(auxThreadRootTimer_);
                                        auxThreadRootTimer_ = subBuilder.buildPartial();
                                    }
                                    break;
                                }
                            case 130:
                                {
                                    if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                                        asyncTimer_ = new java.util.ArrayList<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer>();
                                        mutable_bitField0_ |= 0x00000008;
                                    }
                                    asyncTimer_.add(input.readMessage(org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.parser(), extensionRegistry));
                                    break;
                                }
                            case 138:
                                {
                                    org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.Builder subBuilder = null;
                                    if (oldMainThreadStats_ != null) {
                                        subBuilder = oldMainThreadStats_.toBuilder();
                                    }
                                    oldMainThreadStats_ = input.readMessage(org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom(oldMainThreadStats_);
                                        oldMainThreadStats_ = subBuilder.buildPartial();
                                    }
                                    break;
                                }
                            case 146:
                                {
                                    org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.Builder subBuilder = null;
                                    if (oldAuxThreadStats_ != null) {
                                        subBuilder = oldAuxThreadStats_.toBuilder();
                                    }
                                    oldAuxThreadStats_ = input.readMessage(org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom(oldAuxThreadStats_);
                                        oldAuxThreadStats_ = subBuilder.buildPartial();
                                    }
                                    break;
                                }
                            case 152:
                                {
                                    entryCount_ = input.readInt32();
                                    break;
                                }
                            case 160:
                                {
                                    entryLimitExceeded_ = input.readBool();
                                    break;
                                }
                            case 168:
                                {
                                    mainThreadProfileSampleCount_ = input.readInt64();
                                    break;
                                }
                            case 176:
                                {
                                    mainThreadProfileSampleLimitExceeded_ = input.readBool();
                                    break;
                                }
                            case 184:
                                {
                                    auxThreadProfileSampleCount_ = input.readInt64();
                                    break;
                                }
                            case 192:
                                {
                                    auxThreadProfileSampleLimitExceeded_ = input.readBool();
                                    break;
                                }
                            case 200:
                                {
                                    queryCount_ = input.readInt32();
                                    break;
                                }
                            case 208:
                                {
                                    queryLimitExceeded_ = input.readBool();
                                    break;
                                }
                            case 218:
                                {
                                    org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.Builder subBuilder = null;
                                    if (mainThreadStats_ != null) {
                                        subBuilder = mainThreadStats_.toBuilder();
                                    }
                                    mainThreadStats_ = input.readMessage(org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom(mainThreadStats_);
                                        mainThreadStats_ = subBuilder.buildPartial();
                                    }
                                    break;
                                }
                            case 226:
                                {
                                    org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.Builder subBuilder = null;
                                    if (auxThreadStats_ != null) {
                                        subBuilder = auxThreadStats_.toBuilder();
                                    }
                                    auxThreadStats_ = input.readMessage(org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom(auxThreadStats_);
                                        auxThreadStats_ = subBuilder.buildPartial();
                                    }
                                    break;
                                }
                            case 234:
                                {
                                    if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                                        locationStackTraceElement_ = new java.util.ArrayList<org.glowroot.wire.api.model.Proto.StackTraceElement>();
                                        mutable_bitField0_ |= 0x00000004;
                                    }
                                    locationStackTraceElement_.add(input.readMessage(org.glowroot.wire.api.model.Proto.StackTraceElement.parser(), extensionRegistry));
                                    break;
                                }
                            case 240:
                                {
                                    captureTimePartialRollup_ = input.readInt64();
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    if (((mutable_bitField0_ & 0x00000001) != 0)) {
                        attribute_ = java.util.Collections.unmodifiableList(attribute_);
                    }
                    if (((mutable_bitField0_ & 0x00000002) != 0)) {
                        detailEntry_ = java.util.Collections.unmodifiableList(detailEntry_);
                    }
                    if (((mutable_bitField0_ & 0x00000008) != 0)) {
                        asyncTimer_ = java.util.Collections.unmodifiableList(asyncTimer_);
                    }
                    if (((mutable_bitField0_ & 0x00000004) != 0)) {
                        locationStackTraceElement_ = java.util.Collections.unmodifiableList(locationStackTraceElement_);
                    }
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Header_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Header_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.Header.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.Header.Builder.class);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int PARTIAL_FIELD_NUMBER = 1;

            private  @org.checkerframework.checker.tainting.qual.Tainted boolean partial_;

            /**
             * <code>bool partial = 1;</code>
             * @return The partial.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean getPartial(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return partial_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int SLOW_FIELD_NUMBER = 2;

            private  @org.checkerframework.checker.tainting.qual.Tainted boolean slow_;

            /**
             * <code>bool slow = 2;</code>
             * @return The slow.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean getSlow(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return slow_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int ASYNC_FIELD_NUMBER = 3;

            private  @org.checkerframework.checker.tainting.qual.Tainted boolean async_;

            /**
             * <code>bool async = 3;</code>
             * @return The async.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean getAsync(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return async_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int START_TIME_FIELD_NUMBER = 4;

            private  @org.checkerframework.checker.tainting.qual.Tainted long startTime_;

            /**
             * <code>int64 start_time = 4;</code>
             * @return The startTime.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getStartTime(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return startTime_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int CAPTURE_TIME_FIELD_NUMBER = 5;

            private  @org.checkerframework.checker.tainting.qual.Tainted long captureTime_;

            /**
             * <code>int64 capture_time = 5;</code>
             * @return The captureTime.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getCaptureTime(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return captureTime_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int DURATION_NANOS_FIELD_NUMBER = 6;

            private  @org.checkerframework.checker.tainting.qual.Tainted long durationNanos_;

            /**
             * <code>int64 duration_nanos = 6;</code>
             * @return The durationNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getDurationNanos(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return durationNanos_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TRANSACTION_TYPE_FIELD_NUMBER = 7;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object transactionType_;

            /**
             * <code>string transaction_type = 7;</code>
             * @return The transactionType.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getTransactionType(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                java.lang.Object ref = transactionType_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    transactionType_ = s;
                    return s;
                }
            }

            /**
             * <code>string transaction_type = 7;</code>
             * @return The bytes for transactionType.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTransactionTypeBytes(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                java.lang.Object ref = transactionType_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    transactionType_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TRANSACTION_NAME_FIELD_NUMBER = 8;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object transactionName_;

            /**
             * <code>string transaction_name = 8;</code>
             * @return The transactionName.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getTransactionName(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                java.lang.Object ref = transactionName_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    transactionName_ = s;
                    return s;
                }
            }

            /**
             * <code>string transaction_name = 8;</code>
             * @return The bytes for transactionName.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTransactionNameBytes(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                java.lang.Object ref = transactionName_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    transactionName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int HEADLINE_FIELD_NUMBER = 9;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object headline_;

            /**
             * <code>string headline = 9;</code>
             * @return The headline.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getHeadline(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                java.lang.Object ref = headline_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    headline_ = s;
                    return s;
                }
            }

            /**
             * <code>string headline = 9;</code>
             * @return The bytes for headline.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getHeadlineBytes(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                java.lang.Object ref = headline_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    headline_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int USER_FIELD_NUMBER = 10;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object user_;

            /**
             * <code>string user = 10;</code>
             * @return The user.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getUser(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                java.lang.Object ref = user_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    user_ = s;
                    return s;
                }
            }

            /**
             * <code>string user = 10;</code>
             * @return The bytes for user.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getUserBytes(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                java.lang.Object ref = user_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    user_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int ATTRIBUTE_FIELD_NUMBER = 11;

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute> attribute_;

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute> getAttributeList(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return attribute_;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.AttributeOrBuilder> getAttributeOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return attribute_;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted int getAttributeCount(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return attribute_.size();
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute getAttribute(@org.checkerframework.checker.tainting.qual.Tainted Header this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return attribute_.get(index);
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted AttributeOrBuilder getAttributeOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Header this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return attribute_.get(index);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int DETAIL_ENTRY_FIELD_NUMBER = 12;

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry> detailEntry_;

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry> getDetailEntryList(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return detailEntry_;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntryOrBuilder> getDetailEntryOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return detailEntry_;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted int getDetailEntryCount(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return detailEntry_.size();
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry getDetailEntry(@org.checkerframework.checker.tainting.qual.Tainted Header this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return detailEntry_.get(index);
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntryOrBuilder getDetailEntryOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Header this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return detailEntry_.get(index);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int LOCATION_STACK_TRACE_ELEMENT_FIELD_NUMBER = 29;

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.Proto.StackTraceElement> locationStackTraceElement_;

            /**
             * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.Proto.StackTraceElement> getLocationStackTraceElementList(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return locationStackTraceElement_;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.Proto.StackTraceElementOrBuilder> getLocationStackTraceElementOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return locationStackTraceElement_;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted int getLocationStackTraceElementCount(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return locationStackTraceElement_.size();
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted StackTraceElement getLocationStackTraceElement(@org.checkerframework.checker.tainting.qual.Tainted Header this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return locationStackTraceElement_.get(index);
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted StackTraceElementOrBuilder getLocationStackTraceElementOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Header this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return locationStackTraceElement_.get(index);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int ERROR_FIELD_NUMBER = 13;

            private org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error error_;

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Error error = 13;</code>
             * @return Whether the error field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasError(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return error_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Error error = 13;</code>
             * @return The error.
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error getError(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return error_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.getDefaultInstance() : error_;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Error error = 13;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ErrorOrBuilder getErrorOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return getError();
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int MAIN_THREAD_ROOT_TIMER_FIELD_NUMBER = 14;

            private org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer mainThreadRootTimer_;

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Timer main_thread_root_timer = 14;</code>
             * @return Whether the mainThreadRootTimer field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasMainThreadRootTimer(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return mainThreadRootTimer_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Timer main_thread_root_timer = 14;</code>
             * @return The mainThreadRootTimer.
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer getMainThreadRootTimer(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return mainThreadRootTimer_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.getDefaultInstance() : mainThreadRootTimer_;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Timer main_thread_root_timer = 14;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getMainThreadRootTimerOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return getMainThreadRootTimer();
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int AUX_THREAD_ROOT_TIMER_FIELD_NUMBER = 15;

            private org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer auxThreadRootTimer_;

            /**
             * <pre>
             * aux thread root timer is always "auxiliary thread"
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Trace.Timer aux_thread_root_timer = 15;</code>
             * @return Whether the auxThreadRootTimer field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasAuxThreadRootTimer(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return auxThreadRootTimer_ != null;
            }

            /**
             * <pre>
             * aux thread root timer is always "auxiliary thread"
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Trace.Timer aux_thread_root_timer = 15;</code>
             * @return The auxThreadRootTimer.
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer getAuxThreadRootTimer(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return auxThreadRootTimer_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.getDefaultInstance() : auxThreadRootTimer_;
            }

            /**
             * <pre>
             * aux thread root timer is always "auxiliary thread"
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Trace.Timer aux_thread_root_timer = 15;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getAuxThreadRootTimerOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return getAuxThreadRootTimer();
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int ASYNC_TIMER_FIELD_NUMBER = 16;

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer> asyncTimer_;

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer> getAsyncTimerList(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return asyncTimer_;
            }

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.TimerOrBuilder> getAsyncTimerOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return asyncTimer_;
            }

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted int getAsyncTimerCount(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return asyncTimer_.size();
            }

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer getAsyncTimer(@org.checkerframework.checker.tainting.qual.Tainted Header this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return asyncTimer_.get(index);
            }

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getAsyncTimerOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Header this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return asyncTimer_.get(index);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int OLD_MAIN_THREAD_STATS_FIELD_NUMBER = 17;

            private org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats oldMainThreadStats_;

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_main_thread_stats = 17;</code>
             * @return Whether the oldMainThreadStats field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasOldMainThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return oldMainThreadStats_ != null;
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_main_thread_stats = 17;</code>
             * @return The oldMainThreadStats.
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats getOldMainThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return oldMainThreadStats_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.getDefaultInstance() : oldMainThreadStats_;
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_main_thread_stats = 17;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStatsOrBuilder getOldMainThreadStatsOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return getOldMainThreadStats();
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int OLD_AUX_THREAD_STATS_FIELD_NUMBER = 18;

            private org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats oldAuxThreadStats_;

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_aux_thread_stats = 18;</code>
             * @return Whether the oldAuxThreadStats field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasOldAuxThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return oldAuxThreadStats_ != null;
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_aux_thread_stats = 18;</code>
             * @return The oldAuxThreadStats.
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats getOldAuxThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return oldAuxThreadStats_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.getDefaultInstance() : oldAuxThreadStats_;
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_aux_thread_stats = 18;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStatsOrBuilder getOldAuxThreadStatsOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return getOldAuxThreadStats();
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int MAIN_THREAD_STATS_FIELD_NUMBER = 27;

            private org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats mainThreadStats_;

            /**
             * <code>.org_glowroot_wire_api_model.Trace.ThreadStats main_thread_stats = 27;</code>
             * @return Whether the mainThreadStats field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasMainThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return mainThreadStats_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Trace.ThreadStats main_thread_stats = 27;</code>
             * @return The mainThreadStats.
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats getMainThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return mainThreadStats_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.getDefaultInstance() : mainThreadStats_;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Trace.ThreadStats main_thread_stats = 27;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStatsOrBuilder getMainThreadStatsOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return getMainThreadStats();
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int AUX_THREAD_STATS_FIELD_NUMBER = 28;

            private org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats auxThreadStats_;

            /**
             * <code>.org_glowroot_wire_api_model.Trace.ThreadStats aux_thread_stats = 28;</code>
             * @return Whether the auxThreadStats field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasAuxThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return auxThreadStats_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Trace.ThreadStats aux_thread_stats = 28;</code>
             * @return The auxThreadStats.
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats getAuxThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return auxThreadStats_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.getDefaultInstance() : auxThreadStats_;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Trace.ThreadStats aux_thread_stats = 28;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStatsOrBuilder getAuxThreadStatsOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return getAuxThreadStats();
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int ENTRY_COUNT_FIELD_NUMBER = 19;

            private  @org.checkerframework.checker.tainting.qual.Tainted int entryCount_;

            /**
             * <code>int32 entry_count = 19;</code>
             * @return The entryCount.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted int getEntryCount(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return entryCount_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int ENTRY_LIMIT_EXCEEDED_FIELD_NUMBER = 20;

            private  @org.checkerframework.checker.tainting.qual.Tainted boolean entryLimitExceeded_;

            /**
             * <code>bool entry_limit_exceeded = 20;</code>
             * @return The entryLimitExceeded.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean getEntryLimitExceeded(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return entryLimitExceeded_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int QUERY_COUNT_FIELD_NUMBER = 25;

            private  @org.checkerframework.checker.tainting.qual.Tainted int queryCount_;

            /**
             * <code>int32 query_count = 25;</code>
             * @return The queryCount.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted int getQueryCount(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return queryCount_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int QUERY_LIMIT_EXCEEDED_FIELD_NUMBER = 26;

            private  @org.checkerframework.checker.tainting.qual.Tainted boolean queryLimitExceeded_;

            /**
             * <code>bool query_limit_exceeded = 26;</code>
             * @return The queryLimitExceeded.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean getQueryLimitExceeded(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return queryLimitExceeded_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int MAIN_THREAD_PROFILE_SAMPLE_COUNT_FIELD_NUMBER = 21;

            private  @org.checkerframework.checker.tainting.qual.Tainted long mainThreadProfileSampleCount_;

            /**
             * <code>int64 main_thread_profile_sample_count = 21;</code>
             * @return The mainThreadProfileSampleCount.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getMainThreadProfileSampleCount(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return mainThreadProfileSampleCount_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int MAIN_THREAD_PROFILE_SAMPLE_LIMIT_EXCEEDED_FIELD_NUMBER = 22;

            private  @org.checkerframework.checker.tainting.qual.Tainted boolean mainThreadProfileSampleLimitExceeded_;

            /**
             * <code>bool main_thread_profile_sample_limit_exceeded = 22;</code>
             * @return The mainThreadProfileSampleLimitExceeded.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean getMainThreadProfileSampleLimitExceeded(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return mainThreadProfileSampleLimitExceeded_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int AUX_THREAD_PROFILE_SAMPLE_COUNT_FIELD_NUMBER = 23;

            private  @org.checkerframework.checker.tainting.qual.Tainted long auxThreadProfileSampleCount_;

            /**
             * <code>int64 aux_thread_profile_sample_count = 23;</code>
             * @return The auxThreadProfileSampleCount.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getAuxThreadProfileSampleCount(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return auxThreadProfileSampleCount_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int AUX_THREAD_PROFILE_SAMPLE_LIMIT_EXCEEDED_FIELD_NUMBER = 24;

            private  @org.checkerframework.checker.tainting.qual.Tainted boolean auxThreadProfileSampleLimitExceeded_;

            /**
             * <code>bool aux_thread_profile_sample_limit_exceeded = 24;</code>
             * @return The auxThreadProfileSampleLimitExceeded.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean getAuxThreadProfileSampleLimitExceeded(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return auxThreadProfileSampleLimitExceeded_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int CAPTURE_TIME_PARTIAL_ROLLUP_FIELD_NUMBER = 30;

            private  @org.checkerframework.checker.tainting.qual.Tainted long captureTimePartialRollup_;

            /**
             * <pre>
             * introduced in 0.13.1, but only populated and used by the central collector
             * </pre>
             *
             * <code>int64 capture_time_partial_rollup = 30;</code>
             * @return The captureTimePartialRollup.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getCaptureTimePartialRollup(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return captureTimePartialRollup_;
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted Header this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                if (partial_ != false) {
                    output.writeBool(1, partial_);
                }
                if (slow_ != false) {
                    output.writeBool(2, slow_);
                }
                if (async_ != false) {
                    output.writeBool(3, async_);
                }
                if (startTime_ != 0L) {
                    output.writeInt64(4, startTime_);
                }
                if (captureTime_ != 0L) {
                    output.writeInt64(5, captureTime_);
                }
                if (durationNanos_ != 0L) {
                    output.writeInt64(6, durationNanos_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transactionType_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 7, transactionType_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transactionName_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 8, transactionName_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(headline_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 9, headline_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 10, user_);
                }
                for (int i = 0; i < attribute_.size(); i++) {
                    output.writeMessage(11, attribute_.get(i));
                }
                for (int i = 0; i < detailEntry_.size(); i++) {
                    output.writeMessage(12, detailEntry_.get(i));
                }
                if (error_ != null) {
                    output.writeMessage(13, getError());
                }
                if (mainThreadRootTimer_ != null) {
                    output.writeMessage(14, getMainThreadRootTimer());
                }
                if (auxThreadRootTimer_ != null) {
                    output.writeMessage(15, getAuxThreadRootTimer());
                }
                for (int i = 0; i < asyncTimer_.size(); i++) {
                    output.writeMessage(16, asyncTimer_.get(i));
                }
                if (oldMainThreadStats_ != null) {
                    output.writeMessage(17, getOldMainThreadStats());
                }
                if (oldAuxThreadStats_ != null) {
                    output.writeMessage(18, getOldAuxThreadStats());
                }
                if (entryCount_ != 0) {
                    output.writeInt32(19, entryCount_);
                }
                if (entryLimitExceeded_ != false) {
                    output.writeBool(20, entryLimitExceeded_);
                }
                if (mainThreadProfileSampleCount_ != 0L) {
                    output.writeInt64(21, mainThreadProfileSampleCount_);
                }
                if (mainThreadProfileSampleLimitExceeded_ != false) {
                    output.writeBool(22, mainThreadProfileSampleLimitExceeded_);
                }
                if (auxThreadProfileSampleCount_ != 0L) {
                    output.writeInt64(23, auxThreadProfileSampleCount_);
                }
                if (auxThreadProfileSampleLimitExceeded_ != false) {
                    output.writeBool(24, auxThreadProfileSampleLimitExceeded_);
                }
                if (queryCount_ != 0) {
                    output.writeInt32(25, queryCount_);
                }
                if (queryLimitExceeded_ != false) {
                    output.writeBool(26, queryLimitExceeded_);
                }
                if (mainThreadStats_ != null) {
                    output.writeMessage(27, getMainThreadStats());
                }
                if (auxThreadStats_ != null) {
                    output.writeMessage(28, getAuxThreadStats());
                }
                for (int i = 0; i < locationStackTraceElement_.size(); i++) {
                    output.writeMessage(29, locationStackTraceElement_.get(i));
                }
                if (captureTimePartialRollup_ != 0L) {
                    output.writeInt64(30, captureTimePartialRollup_);
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if (partial_ != false) {
                    size += com.google.protobuf.CodedOutputStream.computeBoolSize(1, partial_);
                }
                if (slow_ != false) {
                    size += com.google.protobuf.CodedOutputStream.computeBoolSize(2, slow_);
                }
                if (async_ != false) {
                    size += com.google.protobuf.CodedOutputStream.computeBoolSize(3, async_);
                }
                if (startTime_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream.computeInt64Size(4, startTime_);
                }
                if (captureTime_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream.computeInt64Size(5, captureTime_);
                }
                if (durationNanos_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream.computeInt64Size(6, durationNanos_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transactionType_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, transactionType_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transactionName_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, transactionName_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(headline_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, headline_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, user_);
                }
                for (int i = 0; i < attribute_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(11, attribute_.get(i));
                }
                for (int i = 0; i < detailEntry_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(12, detailEntry_.get(i));
                }
                if (error_ != null) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(13, getError());
                }
                if (mainThreadRootTimer_ != null) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(14, getMainThreadRootTimer());
                }
                if (auxThreadRootTimer_ != null) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(15, getAuxThreadRootTimer());
                }
                for (int i = 0; i < asyncTimer_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(16, asyncTimer_.get(i));
                }
                if (oldMainThreadStats_ != null) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(17, getOldMainThreadStats());
                }
                if (oldAuxThreadStats_ != null) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(18, getOldAuxThreadStats());
                }
                if (entryCount_ != 0) {
                    size += com.google.protobuf.CodedOutputStream.computeInt32Size(19, entryCount_);
                }
                if (entryLimitExceeded_ != false) {
                    size += com.google.protobuf.CodedOutputStream.computeBoolSize(20, entryLimitExceeded_);
                }
                if (mainThreadProfileSampleCount_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream.computeInt64Size(21, mainThreadProfileSampleCount_);
                }
                if (mainThreadProfileSampleLimitExceeded_ != false) {
                    size += com.google.protobuf.CodedOutputStream.computeBoolSize(22, mainThreadProfileSampleLimitExceeded_);
                }
                if (auxThreadProfileSampleCount_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream.computeInt64Size(23, auxThreadProfileSampleCount_);
                }
                if (auxThreadProfileSampleLimitExceeded_ != false) {
                    size += com.google.protobuf.CodedOutputStream.computeBoolSize(24, auxThreadProfileSampleLimitExceeded_);
                }
                if (queryCount_ != 0) {
                    size += com.google.protobuf.CodedOutputStream.computeInt32Size(25, queryCount_);
                }
                if (queryLimitExceeded_ != false) {
                    size += com.google.protobuf.CodedOutputStream.computeBoolSize(26, queryLimitExceeded_);
                }
                if (mainThreadStats_ != null) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(27, getMainThreadStats());
                }
                if (auxThreadStats_ != null) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(28, getAuxThreadStats());
                }
                for (int i = 0; i < locationStackTraceElement_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(29, locationStackTraceElement_.get(i));
                }
                if (captureTimePartialRollup_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream.computeInt64Size(30, captureTimePartialRollup_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted Header this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.Header)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.TraceOuterClass.Trace.Header other = (org.glowroot.wire.api.model.TraceOuterClass.Trace.Header) obj;
                if (getPartial() != other.getPartial())
                    return false;
                if (getSlow() != other.getSlow())
                    return false;
                if (getAsync() != other.getAsync())
                    return false;
                if (getStartTime() != other.getStartTime())
                    return false;
                if (getCaptureTime() != other.getCaptureTime())
                    return false;
                if (getDurationNanos() != other.getDurationNanos())
                    return false;
                if (!getTransactionType().equals(other.getTransactionType()))
                    return false;
                if (!getTransactionName().equals(other.getTransactionName()))
                    return false;
                if (!getHeadline().equals(other.getHeadline()))
                    return false;
                if (!getUser().equals(other.getUser()))
                    return false;
                if (!getAttributeList().equals(other.getAttributeList()))
                    return false;
                if (!getDetailEntryList().equals(other.getDetailEntryList()))
                    return false;
                if (!getLocationStackTraceElementList().equals(other.getLocationStackTraceElementList()))
                    return false;
                if (hasError() != other.hasError())
                    return false;
                if (hasError()) {
                    if (!getError().equals(other.getError()))
                        return false;
                }
                if (hasMainThreadRootTimer() != other.hasMainThreadRootTimer())
                    return false;
                if (hasMainThreadRootTimer()) {
                    if (!getMainThreadRootTimer().equals(other.getMainThreadRootTimer()))
                        return false;
                }
                if (hasAuxThreadRootTimer() != other.hasAuxThreadRootTimer())
                    return false;
                if (hasAuxThreadRootTimer()) {
                    if (!getAuxThreadRootTimer().equals(other.getAuxThreadRootTimer()))
                        return false;
                }
                if (!getAsyncTimerList().equals(other.getAsyncTimerList()))
                    return false;
                if (hasOldMainThreadStats() != other.hasOldMainThreadStats())
                    return false;
                if (hasOldMainThreadStats()) {
                    if (!getOldMainThreadStats().equals(other.getOldMainThreadStats()))
                        return false;
                }
                if (hasOldAuxThreadStats() != other.hasOldAuxThreadStats())
                    return false;
                if (hasOldAuxThreadStats()) {
                    if (!getOldAuxThreadStats().equals(other.getOldAuxThreadStats()))
                        return false;
                }
                if (hasMainThreadStats() != other.hasMainThreadStats())
                    return false;
                if (hasMainThreadStats()) {
                    if (!getMainThreadStats().equals(other.getMainThreadStats()))
                        return false;
                }
                if (hasAuxThreadStats() != other.hasAuxThreadStats())
                    return false;
                if (hasAuxThreadStats()) {
                    if (!getAuxThreadStats().equals(other.getAuxThreadStats()))
                        return false;
                }
                if (getEntryCount() != other.getEntryCount())
                    return false;
                if (getEntryLimitExceeded() != other.getEntryLimitExceeded())
                    return false;
                if (getQueryCount() != other.getQueryCount())
                    return false;
                if (getQueryLimitExceeded() != other.getQueryLimitExceeded())
                    return false;
                if (getMainThreadProfileSampleCount() != other.getMainThreadProfileSampleCount())
                    return false;
                if (getMainThreadProfileSampleLimitExceeded() != other.getMainThreadProfileSampleLimitExceeded())
                    return false;
                if (getAuxThreadProfileSampleCount() != other.getAuxThreadProfileSampleCount())
                    return false;
                if (getAuxThreadProfileSampleLimitExceeded() != other.getAuxThreadProfileSampleLimitExceeded())
                    return false;
                if (getCaptureTimePartialRollup() != other.getCaptureTimePartialRollup())
                    return false;
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + PARTIAL_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getPartial());
                hash = (37 * hash) + SLOW_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getSlow());
                hash = (37 * hash) + ASYNC_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getAsync());
                hash = (37 * hash) + START_TIME_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getStartTime());
                hash = (37 * hash) + CAPTURE_TIME_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getCaptureTime());
                hash = (37 * hash) + DURATION_NANOS_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getDurationNanos());
                hash = (37 * hash) + TRANSACTION_TYPE_FIELD_NUMBER;
                hash = (53 * hash) + getTransactionType().hashCode();
                hash = (37 * hash) + TRANSACTION_NAME_FIELD_NUMBER;
                hash = (53 * hash) + getTransactionName().hashCode();
                hash = (37 * hash) + HEADLINE_FIELD_NUMBER;
                hash = (53 * hash) + getHeadline().hashCode();
                hash = (37 * hash) + USER_FIELD_NUMBER;
                hash = (53 * hash) + getUser().hashCode();
                if (getAttributeCount() > 0) {
                    hash = (37 * hash) + ATTRIBUTE_FIELD_NUMBER;
                    hash = (53 * hash) + getAttributeList().hashCode();
                }
                if (getDetailEntryCount() > 0) {
                    hash = (37 * hash) + DETAIL_ENTRY_FIELD_NUMBER;
                    hash = (53 * hash) + getDetailEntryList().hashCode();
                }
                if (getLocationStackTraceElementCount() > 0) {
                    hash = (37 * hash) + LOCATION_STACK_TRACE_ELEMENT_FIELD_NUMBER;
                    hash = (53 * hash) + getLocationStackTraceElementList().hashCode();
                }
                if (hasError()) {
                    hash = (37 * hash) + ERROR_FIELD_NUMBER;
                    hash = (53 * hash) + getError().hashCode();
                }
                if (hasMainThreadRootTimer()) {
                    hash = (37 * hash) + MAIN_THREAD_ROOT_TIMER_FIELD_NUMBER;
                    hash = (53 * hash) + getMainThreadRootTimer().hashCode();
                }
                if (hasAuxThreadRootTimer()) {
                    hash = (37 * hash) + AUX_THREAD_ROOT_TIMER_FIELD_NUMBER;
                    hash = (53 * hash) + getAuxThreadRootTimer().hashCode();
                }
                if (getAsyncTimerCount() > 0) {
                    hash = (37 * hash) + ASYNC_TIMER_FIELD_NUMBER;
                    hash = (53 * hash) + getAsyncTimerList().hashCode();
                }
                if (hasOldMainThreadStats()) {
                    hash = (37 * hash) + OLD_MAIN_THREAD_STATS_FIELD_NUMBER;
                    hash = (53 * hash) + getOldMainThreadStats().hashCode();
                }
                if (hasOldAuxThreadStats()) {
                    hash = (37 * hash) + OLD_AUX_THREAD_STATS_FIELD_NUMBER;
                    hash = (53 * hash) + getOldAuxThreadStats().hashCode();
                }
                if (hasMainThreadStats()) {
                    hash = (37 * hash) + MAIN_THREAD_STATS_FIELD_NUMBER;
                    hash = (53 * hash) + getMainThreadStats().hashCode();
                }
                if (hasAuxThreadStats()) {
                    hash = (37 * hash) + AUX_THREAD_STATS_FIELD_NUMBER;
                    hash = (53 * hash) + getAuxThreadStats().hashCode();
                }
                hash = (37 * hash) + ENTRY_COUNT_FIELD_NUMBER;
                hash = (53 * hash) + getEntryCount();
                hash = (37 * hash) + ENTRY_LIMIT_EXCEEDED_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getEntryLimitExceeded());
                hash = (37 * hash) + QUERY_COUNT_FIELD_NUMBER;
                hash = (53 * hash) + getQueryCount();
                hash = (37 * hash) + QUERY_LIMIT_EXCEEDED_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getQueryLimitExceeded());
                hash = (37 * hash) + MAIN_THREAD_PROFILE_SAMPLE_COUNT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getMainThreadProfileSampleCount());
                hash = (37 * hash) + MAIN_THREAD_PROFILE_SAMPLE_LIMIT_EXCEEDED_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getMainThreadProfileSampleLimitExceeded());
                hash = (37 * hash) + AUX_THREAD_PROFILE_SAMPLE_COUNT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getAuxThreadProfileSampleCount());
                hash = (37 * hash) + AUX_THREAD_PROFILE_SAMPLE_LIMIT_EXCEEDED_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getAuxThreadProfileSampleLimitExceeded());
                hash = (37 * hash) + CAPTURE_TIME_PARTIAL_ROLLUP_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getCaptureTimePartialRollup());
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted Header this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code org_glowroot_wire_api_model.Trace.Header}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Trace.Header)
            org.glowroot.wire.api.model.TraceOuterClass.Trace.HeaderOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Header_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Header_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.Header.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.Header.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.TraceOuterClass.Trace.Header.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                        getAttributeFieldBuilder();
                        getDetailEntryFieldBuilder();
                        getLocationStackTraceElementFieldBuilder();
                        getAsyncTimerFieldBuilder();
                    }
                }

                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.auxThreadStatsBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.auxThreadStats_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.mainThreadStatsBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.mainThreadStats_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.oldAuxThreadStatsBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.oldAuxThreadStats_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.oldMainThreadStatsBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.oldMainThreadStats_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    partial_ = false;
                    slow_ = false;
                    async_ = false;
                    startTime_ = 0L;
                    captureTime_ = 0L;
                    durationNanos_ = 0L;
                    transactionType_ = "";
                    transactionName_ = "";
                    headline_ = "";
                    user_ = "";
                    if (attributeBuilder_ == null) {
                        attribute_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        attributeBuilder_.clear();
                    }
                    if (detailEntryBuilder_ == null) {
                        detailEntry_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        detailEntryBuilder_.clear();
                    }
                    if (locationStackTraceElementBuilder_ == null) {
                        locationStackTraceElement_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                        locationStackTraceElementBuilder_.clear();
                    }
                    if (errorBuilder_ == null) {
                        error_ = null;
                    } else {
                        error_ = null;
                        errorBuilder_ = null;
                    }
                    if (mainThreadRootTimerBuilder_ == null) {
                        mainThreadRootTimer_ = null;
                    } else {
                        mainThreadRootTimer_ = null;
                        mainThreadRootTimerBuilder_ = null;
                    }
                    if (auxThreadRootTimerBuilder_ == null) {
                        auxThreadRootTimer_ = null;
                    } else {
                        auxThreadRootTimer_ = null;
                        auxThreadRootTimerBuilder_ = null;
                    }
                    if (asyncTimerBuilder_ == null) {
                        asyncTimer_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000008);
                    } else {
                        asyncTimerBuilder_.clear();
                    }
                    if (oldMainThreadStatsBuilder_ == null) {
                        oldMainThreadStats_ = null;
                    } else {
                        oldMainThreadStats_ = null;
                        oldMainThreadStatsBuilder_ = null;
                    }
                    if (oldAuxThreadStatsBuilder_ == null) {
                        oldAuxThreadStats_ = null;
                    } else {
                        oldAuxThreadStats_ = null;
                        oldAuxThreadStatsBuilder_ = null;
                    }
                    if (mainThreadStatsBuilder_ == null) {
                        mainThreadStats_ = null;
                    } else {
                        mainThreadStats_ = null;
                        mainThreadStatsBuilder_ = null;
                    }
                    if (auxThreadStatsBuilder_ == null) {
                        auxThreadStats_ = null;
                    } else {
                        auxThreadStats_ = null;
                        auxThreadStatsBuilder_ = null;
                    }
                    entryCount_ = 0;
                    entryLimitExceeded_ = false;
                    queryCount_ = 0;
                    queryLimitExceeded_ = false;
                    mainThreadProfileSampleCount_ = 0L;
                    mainThreadProfileSampleLimitExceeded_ = false;
                    auxThreadProfileSampleCount_ = 0L;
                    auxThreadProfileSampleLimitExceeded_ = false;
                    captureTimePartialRollup_ = 0L;
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Header_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.Trace.Header.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.Header result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.Header result = new org.glowroot.wire.api.model.TraceOuterClass.Trace.Header(this);
                    int from_bitField0_ = bitField0_;
                    result.partial_ = partial_;
                    result.slow_ = slow_;
                    result.async_ = async_;
                    result.startTime_ = startTime_;
                    result.captureTime_ = captureTime_;
                    result.durationNanos_ = durationNanos_;
                    result.transactionType_ = transactionType_;
                    result.transactionName_ = transactionName_;
                    result.headline_ = headline_;
                    result.user_ = user_;
                    if (attributeBuilder_ == null) {
                        if (((bitField0_ & 0x00000001) != 0)) {
                            attribute_ = java.util.Collections.unmodifiableList(attribute_);
                            bitField0_ = (bitField0_ & ~0x00000001);
                        }
                        result.attribute_ = attribute_;
                    } else {
                        result.attribute_ = attributeBuilder_.build();
                    }
                    if (detailEntryBuilder_ == null) {
                        if (((bitField0_ & 0x00000002) != 0)) {
                            detailEntry_ = java.util.Collections.unmodifiableList(detailEntry_);
                            bitField0_ = (bitField0_ & ~0x00000002);
                        }
                        result.detailEntry_ = detailEntry_;
                    } else {
                        result.detailEntry_ = detailEntryBuilder_.build();
                    }
                    if (locationStackTraceElementBuilder_ == null) {
                        if (((bitField0_ & 0x00000004) != 0)) {
                            locationStackTraceElement_ = java.util.Collections.unmodifiableList(locationStackTraceElement_);
                            bitField0_ = (bitField0_ & ~0x00000004);
                        }
                        result.locationStackTraceElement_ = locationStackTraceElement_;
                    } else {
                        result.locationStackTraceElement_ = locationStackTraceElementBuilder_.build();
                    }
                    if (errorBuilder_ == null) {
                        result.error_ = error_;
                    } else {
                        result.error_ = errorBuilder_.build();
                    }
                    if (mainThreadRootTimerBuilder_ == null) {
                        result.mainThreadRootTimer_ = mainThreadRootTimer_;
                    } else {
                        result.mainThreadRootTimer_ = mainThreadRootTimerBuilder_.build();
                    }
                    if (auxThreadRootTimerBuilder_ == null) {
                        result.auxThreadRootTimer_ = auxThreadRootTimer_;
                    } else {
                        result.auxThreadRootTimer_ = auxThreadRootTimerBuilder_.build();
                    }
                    if (asyncTimerBuilder_ == null) {
                        if (((bitField0_ & 0x00000008) != 0)) {
                            asyncTimer_ = java.util.Collections.unmodifiableList(asyncTimer_);
                            bitField0_ = (bitField0_ & ~0x00000008);
                        }
                        result.asyncTimer_ = asyncTimer_;
                    } else {
                        result.asyncTimer_ = asyncTimerBuilder_.build();
                    }
                    if (oldMainThreadStatsBuilder_ == null) {
                        result.oldMainThreadStats_ = oldMainThreadStats_;
                    } else {
                        result.oldMainThreadStats_ = oldMainThreadStatsBuilder_.build();
                    }
                    if (oldAuxThreadStatsBuilder_ == null) {
                        result.oldAuxThreadStats_ = oldAuxThreadStats_;
                    } else {
                        result.oldAuxThreadStats_ = oldAuxThreadStatsBuilder_.build();
                    }
                    if (mainThreadStatsBuilder_ == null) {
                        result.mainThreadStats_ = mainThreadStats_;
                    } else {
                        result.mainThreadStats_ = mainThreadStatsBuilder_.build();
                    }
                    if (auxThreadStatsBuilder_ == null) {
                        result.auxThreadStats_ = auxThreadStats_;
                    } else {
                        result.auxThreadStats_ = auxThreadStatsBuilder_.build();
                    }
                    result.entryCount_ = entryCount_;
                    result.entryLimitExceeded_ = entryLimitExceeded_;
                    result.queryCount_ = queryCount_;
                    result.queryLimitExceeded_ = queryLimitExceeded_;
                    result.mainThreadProfileSampleCount_ = mainThreadProfileSampleCount_;
                    result.mainThreadProfileSampleLimitExceeded_ = mainThreadProfileSampleLimitExceeded_;
                    result.auxThreadProfileSampleCount_ = auxThreadProfileSampleCount_;
                    result.auxThreadProfileSampleLimitExceeded_ = auxThreadProfileSampleLimitExceeded_;
                    result.captureTimePartialRollup_ = captureTimePartialRollup_;
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.Header) {
                        return mergeFrom((org.glowroot.wire.api.model.TraceOuterClass.Trace.Header) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header other) {
                    if (other == org.glowroot.wire.api.model.TraceOuterClass.Trace.Header.getDefaultInstance())
                        return this;
                    if (other.getPartial() != false) {
                        setPartial(other.getPartial());
                    }
                    if (other.getSlow() != false) {
                        setSlow(other.getSlow());
                    }
                    if (other.getAsync() != false) {
                        setAsync(other.getAsync());
                    }
                    if (other.getStartTime() != 0L) {
                        setStartTime(other.getStartTime());
                    }
                    if (other.getCaptureTime() != 0L) {
                        setCaptureTime(other.getCaptureTime());
                    }
                    if (other.getDurationNanos() != 0L) {
                        setDurationNanos(other.getDurationNanos());
                    }
                    if (!other.getTransactionType().isEmpty()) {
                        transactionType_ = other.transactionType_;
                        onChanged();
                    }
                    if (!other.getTransactionName().isEmpty()) {
                        transactionName_ = other.transactionName_;
                        onChanged();
                    }
                    if (!other.getHeadline().isEmpty()) {
                        headline_ = other.headline_;
                        onChanged();
                    }
                    if (!other.getUser().isEmpty()) {
                        user_ = other.user_;
                        onChanged();
                    }
                    if (attributeBuilder_ == null) {
                        if (!other.attribute_.isEmpty()) {
                            if (attribute_.isEmpty()) {
                                attribute_ = other.attribute_;
                                bitField0_ = (bitField0_ & ~0x00000001);
                            } else {
                                ensureAttributeIsMutable();
                                attribute_.addAll(other.attribute_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.attribute_.isEmpty()) {
                            if (attributeBuilder_.isEmpty()) {
                                attributeBuilder_.dispose();
                                attributeBuilder_ = null;
                                attribute_ = other.attribute_;
                                bitField0_ = (bitField0_ & ~0x00000001);
                                attributeBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getAttributeFieldBuilder() : null;
                            } else {
                                attributeBuilder_.addAllMessages(other.attribute_);
                            }
                        }
                    }
                    if (detailEntryBuilder_ == null) {
                        if (!other.detailEntry_.isEmpty()) {
                            if (detailEntry_.isEmpty()) {
                                detailEntry_ = other.detailEntry_;
                                bitField0_ = (bitField0_ & ~0x00000002);
                            } else {
                                ensureDetailEntryIsMutable();
                                detailEntry_.addAll(other.detailEntry_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.detailEntry_.isEmpty()) {
                            if (detailEntryBuilder_.isEmpty()) {
                                detailEntryBuilder_.dispose();
                                detailEntryBuilder_ = null;
                                detailEntry_ = other.detailEntry_;
                                bitField0_ = (bitField0_ & ~0x00000002);
                                detailEntryBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getDetailEntryFieldBuilder() : null;
                            } else {
                                detailEntryBuilder_.addAllMessages(other.detailEntry_);
                            }
                        }
                    }
                    if (locationStackTraceElementBuilder_ == null) {
                        if (!other.locationStackTraceElement_.isEmpty()) {
                            if (locationStackTraceElement_.isEmpty()) {
                                locationStackTraceElement_ = other.locationStackTraceElement_;
                                bitField0_ = (bitField0_ & ~0x00000004);
                            } else {
                                ensureLocationStackTraceElementIsMutable();
                                locationStackTraceElement_.addAll(other.locationStackTraceElement_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.locationStackTraceElement_.isEmpty()) {
                            if (locationStackTraceElementBuilder_.isEmpty()) {
                                locationStackTraceElementBuilder_.dispose();
                                locationStackTraceElementBuilder_ = null;
                                locationStackTraceElement_ = other.locationStackTraceElement_;
                                bitField0_ = (bitField0_ & ~0x00000004);
                                locationStackTraceElementBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getLocationStackTraceElementFieldBuilder() : null;
                            } else {
                                locationStackTraceElementBuilder_.addAllMessages(other.locationStackTraceElement_);
                            }
                        }
                    }
                    if (other.hasError()) {
                        mergeError(other.getError());
                    }
                    if (other.hasMainThreadRootTimer()) {
                        mergeMainThreadRootTimer(other.getMainThreadRootTimer());
                    }
                    if (other.hasAuxThreadRootTimer()) {
                        mergeAuxThreadRootTimer(other.getAuxThreadRootTimer());
                    }
                    if (asyncTimerBuilder_ == null) {
                        if (!other.asyncTimer_.isEmpty()) {
                            if (asyncTimer_.isEmpty()) {
                                asyncTimer_ = other.asyncTimer_;
                                bitField0_ = (bitField0_ & ~0x00000008);
                            } else {
                                ensureAsyncTimerIsMutable();
                                asyncTimer_.addAll(other.asyncTimer_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.asyncTimer_.isEmpty()) {
                            if (asyncTimerBuilder_.isEmpty()) {
                                asyncTimerBuilder_.dispose();
                                asyncTimerBuilder_ = null;
                                asyncTimer_ = other.asyncTimer_;
                                bitField0_ = (bitField0_ & ~0x00000008);
                                asyncTimerBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getAsyncTimerFieldBuilder() : null;
                            } else {
                                asyncTimerBuilder_.addAllMessages(other.asyncTimer_);
                            }
                        }
                    }
                    if (other.hasOldMainThreadStats()) {
                        mergeOldMainThreadStats(other.getOldMainThreadStats());
                    }
                    if (other.hasOldAuxThreadStats()) {
                        mergeOldAuxThreadStats(other.getOldAuxThreadStats());
                    }
                    if (other.hasMainThreadStats()) {
                        mergeMainThreadStats(other.getMainThreadStats());
                    }
                    if (other.hasAuxThreadStats()) {
                        mergeAuxThreadStats(other.getAuxThreadStats());
                    }
                    if (other.getEntryCount() != 0) {
                        setEntryCount(other.getEntryCount());
                    }
                    if (other.getEntryLimitExceeded() != false) {
                        setEntryLimitExceeded(other.getEntryLimitExceeded());
                    }
                    if (other.getQueryCount() != 0) {
                        setQueryCount(other.getQueryCount());
                    }
                    if (other.getQueryLimitExceeded() != false) {
                        setQueryLimitExceeded(other.getQueryLimitExceeded());
                    }
                    if (other.getMainThreadProfileSampleCount() != 0L) {
                        setMainThreadProfileSampleCount(other.getMainThreadProfileSampleCount());
                    }
                    if (other.getMainThreadProfileSampleLimitExceeded() != false) {
                        setMainThreadProfileSampleLimitExceeded(other.getMainThreadProfileSampleLimitExceeded());
                    }
                    if (other.getAuxThreadProfileSampleCount() != 0L) {
                        setAuxThreadProfileSampleCount(other.getAuxThreadProfileSampleCount());
                    }
                    if (other.getAuxThreadProfileSampleLimitExceeded() != false) {
                        setAuxThreadProfileSampleLimitExceeded(other.getAuxThreadProfileSampleLimitExceeded());
                    }
                    if (other.getCaptureTimePartialRollup() != 0L) {
                        setCaptureTimePartialRollup(other.getCaptureTimePartialRollup());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.Header parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.TraceOuterClass.Trace.Header) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted int bitField0_;

                private  @org.checkerframework.checker.tainting.qual.Tainted boolean partial_;

                /**
                 * <code>bool partial = 1;</code>
                 * @return The partial.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean getPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return partial_;
                }

                /**
                 * <code>bool partial = 1;</code>
                 * @param value The partial to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted boolean value) {
                    partial_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>bool partial = 1;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearPartial() {
                    partial_ = false;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted boolean slow_;

                /**
                 * <code>bool slow = 2;</code>
                 * @return The slow.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean getSlow(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return slow_;
                }

                /**
                 * <code>bool slow = 2;</code>
                 * @param value The slow to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setSlow(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted boolean value) {
                    slow_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>bool slow = 2;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearSlow() {
                    slow_ = false;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted boolean async_;

                /**
                 * <code>bool async = 3;</code>
                 * @return The async.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean getAsync(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return async_;
                }

                /**
                 * <code>bool async = 3;</code>
                 * @param value The async to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setAsync(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted boolean value) {
                    async_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>bool async = 3;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearAsync() {
                    async_ = false;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted long startTime_;

                /**
                 * <code>int64 start_time = 4;</code>
                 * @return The startTime.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted long getStartTime(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return startTime_;
                }

                /**
                 * <code>int64 start_time = 4;</code>
                 * @param value The startTime to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setStartTime(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                    startTime_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>int64 start_time = 4;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearStartTime() {
                    startTime_ = 0L;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted long captureTime_;

                /**
                 * <code>int64 capture_time = 5;</code>
                 * @return The captureTime.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted long getCaptureTime(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return captureTime_;
                }

                /**
                 * <code>int64 capture_time = 5;</code>
                 * @param value The captureTime to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setCaptureTime(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                    captureTime_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>int64 capture_time = 5;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearCaptureTime() {
                    captureTime_ = 0L;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted long durationNanos_;

                /**
                 * <code>int64 duration_nanos = 6;</code>
                 * @return The durationNanos.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted long getDurationNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return durationNanos_;
                }

                /**
                 * <code>int64 duration_nanos = 6;</code>
                 * @param value The durationNanos to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setDurationNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                    durationNanos_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>int64 duration_nanos = 6;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearDurationNanos() {
                    durationNanos_ = 0L;
                    onChanged();
                    return this;
                }

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object transactionType_ = "";

                /**
                 * <code>string transaction_type = 7;</code>
                 * @return The transactionType.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getTransactionType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = transactionType_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        transactionType_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <code>string transaction_type = 7;</code>
                 * @return The bytes for transactionType.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTransactionTypeBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = transactionType_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        transactionType_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>string transaction_type = 7;</code>
                 * @param value The transactionType to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTransactionType(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    transactionType_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>string transaction_type = 7;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTransactionType() {
                    transactionType_ = getDefaultInstance().getTransactionType();
                    onChanged();
                    return this;
                }

                /**
                 * <code>string transaction_type = 7;</code>
                 * @param value The bytes for transactionType to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTransactionTypeBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    transactionType_ = value;
                    onChanged();
                    return this;
                }

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object transactionName_ = "";

                /**
                 * <code>string transaction_name = 8;</code>
                 * @return The transactionName.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getTransactionName(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = transactionName_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        transactionName_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <code>string transaction_name = 8;</code>
                 * @return The bytes for transactionName.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTransactionNameBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = transactionName_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        transactionName_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>string transaction_name = 8;</code>
                 * @param value The transactionName to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTransactionName(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    transactionName_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>string transaction_name = 8;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTransactionName() {
                    transactionName_ = getDefaultInstance().getTransactionName();
                    onChanged();
                    return this;
                }

                /**
                 * <code>string transaction_name = 8;</code>
                 * @param value The bytes for transactionName to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTransactionNameBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    transactionName_ = value;
                    onChanged();
                    return this;
                }

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object headline_ = "";

                /**
                 * <code>string headline = 9;</code>
                 * @return The headline.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getHeadline(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = headline_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        headline_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <code>string headline = 9;</code>
                 * @return The bytes for headline.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getHeadlineBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = headline_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        headline_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>string headline = 9;</code>
                 * @param value The headline to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setHeadline(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    headline_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>string headline = 9;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearHeadline() {
                    headline_ = getDefaultInstance().getHeadline();
                    onChanged();
                    return this;
                }

                /**
                 * <code>string headline = 9;</code>
                 * @param value The bytes for headline to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setHeadlineBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    headline_ = value;
                    onChanged();
                    return this;
                }

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object user_ = "";

                /**
                 * <code>string user = 10;</code>
                 * @return The user.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getUser(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = user_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        user_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <code>string user = 10;</code>
                 * @return The bytes for user.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getUserBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = user_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        user_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>string user = 10;</code>
                 * @param value The user to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setUser(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    user_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>string user = 10;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearUser() {
                    user_ = getDefaultInstance().getUser();
                    onChanged();
                    return this;
                }

                /**
                 * <code>string user = 10;</code>
                 * @param value The bytes for user to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setUserBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    user_ = value;
                    onChanged();
                    return this;
                }

                private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute> attribute_ = java.util.Collections.emptyList();

                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.attributeBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                private void ensureAttributeIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (!((bitField0_ & 0x00000001) != 0)) {
                        attribute_ = new java.util.ArrayList<org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute>(attribute_);
                        bitField0_ |= 0x00000001;
                    }
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute, org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.AttributeOrBuilder> attributeBuilder_;

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute> getAttributeList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (attributeBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(attribute_);
                    } else {
                        return attributeBuilder_.getMessageList();
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
                 */
                public  @org.checkerframework.checker.tainting.qual.Tainted int getAttributeCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (attributeBuilder_ == null) {
                        return attribute_.size();
                    } else {
                        return attributeBuilder_.getCount();
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute getAttribute(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (attributeBuilder_ == null) {
                        return attribute_.get(index);
                    } else {
                        return attributeBuilder_.getMessage(index);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setAttribute(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute value) {
                    if (attributeBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureAttributeIsMutable();
                        attribute_.set(index, value);
                        onChanged();
                    } else {
                        attributeBuilder_.setMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setAttribute(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute.Builder builderForValue) {
                    if (attributeBuilder_ == null) {
                        ensureAttributeIsMutable();
                        attribute_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        attributeBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAttribute(org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute value) {
                    if (attributeBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureAttributeIsMutable();
                        attribute_.add(value);
                        onChanged();
                    } else {
                        attributeBuilder_.addMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAttribute(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute value) {
                    if (attributeBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureAttributeIsMutable();
                        attribute_.add(index, value);
                        onChanged();
                    } else {
                        attributeBuilder_.addMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAttribute(org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute.Builder builderForValue) {
                    if (attributeBuilder_ == null) {
                        ensureAttributeIsMutable();
                        attribute_.add(builderForValue.build());
                        onChanged();
                    } else {
                        attributeBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAttribute(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute.Builder builderForValue) {
                    if (attributeBuilder_ == null) {
                        ensureAttributeIsMutable();
                        attribute_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        attributeBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllAttribute(java.lang.Iterable<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute> values) {
                    if (attributeBuilder_ == null) {
                        ensureAttributeIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, attribute_);
                        onChanged();
                    } else {
                        attributeBuilder_.addAllMessages(values);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearAttribute() {
                    if (attributeBuilder_ == null) {
                        attribute_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000001);
                        onChanged();
                    } else {
                        attributeBuilder_.clear();
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder removeAttribute(int index) {
                    if (attributeBuilder_ == null) {
                        ensureAttributeIsMutable();
                        attribute_.remove(index);
                        onChanged();
                    } else {
                        attributeBuilder_.remove(index);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute.@org.checkerframework.checker.tainting.qual.Tainted Builder getAttributeBuilder(int index) {
                    return getAttributeFieldBuilder().getBuilder(index);
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted AttributeOrBuilder getAttributeOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (attributeBuilder_ == null) {
                        return attribute_.get(index);
                    } else {
                        return attributeBuilder_.getMessageOrBuilder(index);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.AttributeOrBuilder> getAttributeOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (attributeBuilder_ != null) {
                        return attributeBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(attribute_);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute.@org.checkerframework.checker.tainting.qual.Tainted Builder addAttributeBuilder() {
                    return getAttributeFieldBuilder().addBuilder(org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute.getDefaultInstance());
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute.@org.checkerframework.checker.tainting.qual.Tainted Builder addAttributeBuilder(int index) {
                    return getAttributeFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute.getDefaultInstance());
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Attribute attribute = 11;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute.Builder> getAttributeBuilderList() {
                    return getAttributeFieldBuilder().getBuilderList();
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute, org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.AttributeOrBuilder> getAttributeFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (attributeBuilder_ == null) {
                        attributeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute, org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.AttributeOrBuilder>(attribute_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
                        attribute_ = null;
                    }
                    return attributeBuilder_;
                }

                private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry> detailEntry_ = java.util.Collections.emptyList();

                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.detailEntryBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                private void ensureDetailEntryIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (!((bitField0_ & 0x00000002) != 0)) {
                        detailEntry_ = new java.util.ArrayList<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry>(detailEntry_);
                        bitField0_ |= 0x00000002;
                    }
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntryOrBuilder> detailEntryBuilder_;

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry> getDetailEntryList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (detailEntryBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(detailEntry_);
                    } else {
                        return detailEntryBuilder_.getMessageList();
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
                 */
                public  @org.checkerframework.checker.tainting.qual.Tainted int getDetailEntryCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (detailEntryBuilder_ == null) {
                        return detailEntry_.size();
                    } else {
                        return detailEntryBuilder_.getCount();
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry getDetailEntry(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (detailEntryBuilder_ == null) {
                        return detailEntry_.get(index);
                    } else {
                        return detailEntryBuilder_.getMessage(index);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setDetailEntry(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry value) {
                    if (detailEntryBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureDetailEntryIsMutable();
                        detailEntry_.set(index, value);
                        onChanged();
                    } else {
                        detailEntryBuilder_.setMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setDetailEntry(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder builderForValue) {
                    if (detailEntryBuilder_ == null) {
                        ensureDetailEntryIsMutable();
                        detailEntry_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        detailEntryBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addDetailEntry(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry value) {
                    if (detailEntryBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureDetailEntryIsMutable();
                        detailEntry_.add(value);
                        onChanged();
                    } else {
                        detailEntryBuilder_.addMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addDetailEntry(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry value) {
                    if (detailEntryBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureDetailEntryIsMutable();
                        detailEntry_.add(index, value);
                        onChanged();
                    } else {
                        detailEntryBuilder_.addMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addDetailEntry(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder builderForValue) {
                    if (detailEntryBuilder_ == null) {
                        ensureDetailEntryIsMutable();
                        detailEntry_.add(builderForValue.build());
                        onChanged();
                    } else {
                        detailEntryBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addDetailEntry(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder builderForValue) {
                    if (detailEntryBuilder_ == null) {
                        ensureDetailEntryIsMutable();
                        detailEntry_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        detailEntryBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllDetailEntry(java.lang.Iterable<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry> values) {
                    if (detailEntryBuilder_ == null) {
                        ensureDetailEntryIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, detailEntry_);
                        onChanged();
                    } else {
                        detailEntryBuilder_.addAllMessages(values);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearDetailEntry() {
                    if (detailEntryBuilder_ == null) {
                        detailEntry_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000002);
                        onChanged();
                    } else {
                        detailEntryBuilder_.clear();
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder removeDetailEntry(int index) {
                    if (detailEntryBuilder_ == null) {
                        ensureDetailEntryIsMutable();
                        detailEntry_.remove(index);
                        onChanged();
                    } else {
                        detailEntryBuilder_.remove(index);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.@org.checkerframework.checker.tainting.qual.Tainted Builder getDetailEntryBuilder(int index) {
                    return getDetailEntryFieldBuilder().getBuilder(index);
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntryOrBuilder getDetailEntryOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (detailEntryBuilder_ == null) {
                        return detailEntry_.get(index);
                    } else {
                        return detailEntryBuilder_.getMessageOrBuilder(index);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntryOrBuilder> getDetailEntryOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (detailEntryBuilder_ != null) {
                        return detailEntryBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(detailEntry_);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.@org.checkerframework.checker.tainting.qual.Tainted Builder addDetailEntryBuilder() {
                    return getDetailEntryFieldBuilder().addBuilder(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.getDefaultInstance());
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.@org.checkerframework.checker.tainting.qual.Tainted Builder addDetailEntryBuilder(int index) {
                    return getDetailEntryFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.getDefaultInstance());
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 12;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder> getDetailEntryBuilderList() {
                    return getDetailEntryFieldBuilder().getBuilderList();
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntryOrBuilder> getDetailEntryFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (detailEntryBuilder_ == null) {
                        detailEntryBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntryOrBuilder>(detailEntry_, ((bitField0_ & 0x00000002) != 0), getParentForChildren(), isClean());
                        detailEntry_ = null;
                    }
                    return detailEntryBuilder_;
                }

                private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.Proto.StackTraceElement> locationStackTraceElement_ = java.util.Collections.emptyList();

                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.locationStackTraceElementBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                private void ensureLocationStackTraceElementIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (!((bitField0_ & 0x00000004) != 0)) {
                        locationStackTraceElement_ = new java.util.ArrayList<org.glowroot.wire.api.model.Proto.StackTraceElement>(locationStackTraceElement_);
                        bitField0_ |= 0x00000004;
                    }
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.Proto.StackTraceElement, org.glowroot.wire.api.model.Proto.StackTraceElement.Builder, org.glowroot.wire.api.model.Proto.StackTraceElementOrBuilder> locationStackTraceElementBuilder_;

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.Proto.StackTraceElement> getLocationStackTraceElementList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (locationStackTraceElementBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(locationStackTraceElement_);
                    } else {
                        return locationStackTraceElementBuilder_.getMessageList();
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
                 */
                public  @org.checkerframework.checker.tainting.qual.Tainted int getLocationStackTraceElementCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (locationStackTraceElementBuilder_ == null) {
                        return locationStackTraceElement_.size();
                    } else {
                        return locationStackTraceElementBuilder_.getCount();
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
                 */
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted StackTraceElement getLocationStackTraceElement(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (locationStackTraceElementBuilder_ == null) {
                        return locationStackTraceElement_.get(index);
                    } else {
                        return locationStackTraceElementBuilder_.getMessage(index);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setLocationStackTraceElement(int index, org.glowroot.wire.api.model.Proto.StackTraceElement value) {
                    if (locationStackTraceElementBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureLocationStackTraceElementIsMutable();
                        locationStackTraceElement_.set(index, value);
                        onChanged();
                    } else {
                        locationStackTraceElementBuilder_.setMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setLocationStackTraceElement(int index, org.glowroot.wire.api.model.Proto.StackTraceElement.Builder builderForValue) {
                    if (locationStackTraceElementBuilder_ == null) {
                        ensureLocationStackTraceElementIsMutable();
                        locationStackTraceElement_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        locationStackTraceElementBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addLocationStackTraceElement(org.glowroot.wire.api.model.Proto.StackTraceElement value) {
                    if (locationStackTraceElementBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureLocationStackTraceElementIsMutable();
                        locationStackTraceElement_.add(value);
                        onChanged();
                    } else {
                        locationStackTraceElementBuilder_.addMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addLocationStackTraceElement(int index, org.glowroot.wire.api.model.Proto.StackTraceElement value) {
                    if (locationStackTraceElementBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureLocationStackTraceElementIsMutable();
                        locationStackTraceElement_.add(index, value);
                        onChanged();
                    } else {
                        locationStackTraceElementBuilder_.addMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addLocationStackTraceElement(org.glowroot.wire.api.model.Proto.StackTraceElement.Builder builderForValue) {
                    if (locationStackTraceElementBuilder_ == null) {
                        ensureLocationStackTraceElementIsMutable();
                        locationStackTraceElement_.add(builderForValue.build());
                        onChanged();
                    } else {
                        locationStackTraceElementBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addLocationStackTraceElement(int index, org.glowroot.wire.api.model.Proto.StackTraceElement.Builder builderForValue) {
                    if (locationStackTraceElementBuilder_ == null) {
                        ensureLocationStackTraceElementIsMutable();
                        locationStackTraceElement_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        locationStackTraceElementBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllLocationStackTraceElement(java.lang.Iterable<? extends org.glowroot.wire.api.model.Proto.StackTraceElement> values) {
                    if (locationStackTraceElementBuilder_ == null) {
                        ensureLocationStackTraceElementIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, locationStackTraceElement_);
                        onChanged();
                    } else {
                        locationStackTraceElementBuilder_.addAllMessages(values);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearLocationStackTraceElement() {
                    if (locationStackTraceElementBuilder_ == null) {
                        locationStackTraceElement_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000004);
                        onChanged();
                    } else {
                        locationStackTraceElementBuilder_.clear();
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder removeLocationStackTraceElement(int index) {
                    if (locationStackTraceElementBuilder_ == null) {
                        ensureLocationStackTraceElementIsMutable();
                        locationStackTraceElement_.remove(index);
                        onChanged();
                    } else {
                        locationStackTraceElementBuilder_.remove(index);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
                 */
                public org.glowroot.wire.api.model.Proto.StackTraceElement.@org.checkerframework.checker.tainting.qual.Tainted Builder getLocationStackTraceElementBuilder(int index) {
                    return getLocationStackTraceElementFieldBuilder().getBuilder(index);
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
                 */
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted StackTraceElementOrBuilder getLocationStackTraceElementOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (locationStackTraceElementBuilder_ == null) {
                        return locationStackTraceElement_.get(index);
                    } else {
                        return locationStackTraceElementBuilder_.getMessageOrBuilder(index);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.Proto.StackTraceElementOrBuilder> getLocationStackTraceElementOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (locationStackTraceElementBuilder_ != null) {
                        return locationStackTraceElementBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(locationStackTraceElement_);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
                 */
                public org.glowroot.wire.api.model.Proto.StackTraceElement.@org.checkerframework.checker.tainting.qual.Tainted Builder addLocationStackTraceElementBuilder() {
                    return getLocationStackTraceElementFieldBuilder().addBuilder(org.glowroot.wire.api.model.Proto.StackTraceElement.getDefaultInstance());
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
                 */
                public org.glowroot.wire.api.model.Proto.StackTraceElement.@org.checkerframework.checker.tainting.qual.Tainted Builder addLocationStackTraceElementBuilder(int index) {
                    return getLocationStackTraceElementFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.Proto.StackTraceElement.getDefaultInstance());
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 29;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.Proto.StackTraceElement.Builder> getLocationStackTraceElementBuilderList() {
                    return getLocationStackTraceElementFieldBuilder().getBuilderList();
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.Proto.StackTraceElement, org.glowroot.wire.api.model.Proto.StackTraceElement.Builder, org.glowroot.wire.api.model.Proto.StackTraceElementOrBuilder> getLocationStackTraceElementFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (locationStackTraceElementBuilder_ == null) {
                        locationStackTraceElementBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.Proto.StackTraceElement, org.glowroot.wire.api.model.Proto.StackTraceElement.Builder, org.glowroot.wire.api.model.Proto.StackTraceElementOrBuilder>(locationStackTraceElement_, ((bitField0_ & 0x00000004) != 0), getParentForChildren(), isClean());
                        locationStackTraceElement_ = null;
                    }
                    return locationStackTraceElementBuilder_;
                }

                private org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error error_;

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Error, org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.ErrorOrBuilder> errorBuilder_;

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Error error = 13;</code>
                 * @return Whether the error field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasError(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return errorBuilder_ != null || error_ != null;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Error error = 13;</code>
                 * @return The error.
                 */
                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.errorBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error getError(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (errorBuilder_ == null) {
                        return error_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.getDefaultInstance() : error_;
                    } else {
                        return errorBuilder_.getMessage();
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Error error = 13;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setError(org.glowroot.wire.api.model.TraceOuterClass.Trace.Error value) {
                    if (errorBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        error_ = value;
                        onChanged();
                    } else {
                        errorBuilder_.setMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Error error = 13;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setError(org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.Builder builderForValue) {
                    if (errorBuilder_ == null) {
                        error_ = builderForValue.build();
                        onChanged();
                    } else {
                        errorBuilder_.setMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Error error = 13;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeError(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error value) {
                    if (errorBuilder_ == null) {
                        if (error_ != null) {
                            error_ = org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.newBuilder(error_).mergeFrom(value).buildPartial();
                        } else {
                            error_ = value;
                        }
                        onChanged();
                    } else {
                        errorBuilder_.mergeFrom(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Error error = 13;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearError() {
                    if (errorBuilder_ == null) {
                        error_ = null;
                        onChanged();
                    } else {
                        error_ = null;
                        errorBuilder_ = null;
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Error error = 13;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.@org.checkerframework.checker.tainting.qual.Tainted Builder getErrorBuilder() {
                    onChanged();
                    return getErrorFieldBuilder().getBuilder();
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Error error = 13;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ErrorOrBuilder getErrorOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (errorBuilder_ != null) {
                        return errorBuilder_.getMessageOrBuilder();
                    } else {
                        return error_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.getDefaultInstance() : error_;
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Error error = 13;</code>
                 */
                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Error, org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.ErrorOrBuilder> getErrorFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (errorBuilder_ == null) {
                        errorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Error, org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.ErrorOrBuilder>(getError(), getParentForChildren(), isClean());
                        error_ = null;
                    }
                    return errorBuilder_;
                }

                private org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer mainThreadRootTimer_;

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.TimerOrBuilder> mainThreadRootTimerBuilder_;

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Timer main_thread_root_timer = 14;</code>
                 * @return Whether the mainThreadRootTimer field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasMainThreadRootTimer(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return mainThreadRootTimerBuilder_ != null || mainThreadRootTimer_ != null;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Timer main_thread_root_timer = 14;</code>
                 * @return The mainThreadRootTimer.
                 */
                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.mainThreadRootTimerBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer getMainThreadRootTimer(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (mainThreadRootTimerBuilder_ == null) {
                        return mainThreadRootTimer_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.getDefaultInstance() : mainThreadRootTimer_;
                    } else {
                        return mainThreadRootTimerBuilder_.getMessage();
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Timer main_thread_root_timer = 14;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setMainThreadRootTimer(org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer value) {
                    if (mainThreadRootTimerBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        mainThreadRootTimer_ = value;
                        onChanged();
                    } else {
                        mainThreadRootTimerBuilder_.setMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Timer main_thread_root_timer = 14;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setMainThreadRootTimer(org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder builderForValue) {
                    if (mainThreadRootTimerBuilder_ == null) {
                        mainThreadRootTimer_ = builderForValue.build();
                        onChanged();
                    } else {
                        mainThreadRootTimerBuilder_.setMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Timer main_thread_root_timer = 14;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeMainThreadRootTimer(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer value) {
                    if (mainThreadRootTimerBuilder_ == null) {
                        if (mainThreadRootTimer_ != null) {
                            mainThreadRootTimer_ = org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.newBuilder(mainThreadRootTimer_).mergeFrom(value).buildPartial();
                        } else {
                            mainThreadRootTimer_ = value;
                        }
                        onChanged();
                    } else {
                        mainThreadRootTimerBuilder_.mergeFrom(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Timer main_thread_root_timer = 14;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearMainThreadRootTimer() {
                    if (mainThreadRootTimerBuilder_ == null) {
                        mainThreadRootTimer_ = null;
                        onChanged();
                    } else {
                        mainThreadRootTimer_ = null;
                        mainThreadRootTimerBuilder_ = null;
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Timer main_thread_root_timer = 14;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.@org.checkerframework.checker.tainting.qual.Tainted Builder getMainThreadRootTimerBuilder() {
                    onChanged();
                    return getMainThreadRootTimerFieldBuilder().getBuilder();
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Timer main_thread_root_timer = 14;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getMainThreadRootTimerOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (mainThreadRootTimerBuilder_ != null) {
                        return mainThreadRootTimerBuilder_.getMessageOrBuilder();
                    } else {
                        return mainThreadRootTimer_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.getDefaultInstance() : mainThreadRootTimer_;
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Timer main_thread_root_timer = 14;</code>
                 */
                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.TimerOrBuilder> getMainThreadRootTimerFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (mainThreadRootTimerBuilder_ == null) {
                        mainThreadRootTimerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.TimerOrBuilder>(getMainThreadRootTimer(), getParentForChildren(), isClean());
                        mainThreadRootTimer_ = null;
                    }
                    return mainThreadRootTimerBuilder_;
                }

                private org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer auxThreadRootTimer_;

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.TimerOrBuilder> auxThreadRootTimerBuilder_;

                /**
                 * <pre>
                 * aux thread root timer is always "auxiliary thread"
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.Timer aux_thread_root_timer = 15;</code>
                 * @return Whether the auxThreadRootTimer field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasAuxThreadRootTimer(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return auxThreadRootTimerBuilder_ != null || auxThreadRootTimer_ != null;
                }

                /**
                 * <pre>
                 * aux thread root timer is always "auxiliary thread"
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.Timer aux_thread_root_timer = 15;</code>
                 * @return The auxThreadRootTimer.
                 */
                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.auxThreadRootTimerBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer getAuxThreadRootTimer(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (auxThreadRootTimerBuilder_ == null) {
                        return auxThreadRootTimer_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.getDefaultInstance() : auxThreadRootTimer_;
                    } else {
                        return auxThreadRootTimerBuilder_.getMessage();
                    }
                }

                /**
                 * <pre>
                 * aux thread root timer is always "auxiliary thread"
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.Timer aux_thread_root_timer = 15;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setAuxThreadRootTimer(org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer value) {
                    if (auxThreadRootTimerBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        auxThreadRootTimer_ = value;
                        onChanged();
                    } else {
                        auxThreadRootTimerBuilder_.setMessage(value);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * aux thread root timer is always "auxiliary thread"
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.Timer aux_thread_root_timer = 15;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setAuxThreadRootTimer(org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder builderForValue) {
                    if (auxThreadRootTimerBuilder_ == null) {
                        auxThreadRootTimer_ = builderForValue.build();
                        onChanged();
                    } else {
                        auxThreadRootTimerBuilder_.setMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <pre>
                 * aux thread root timer is always "auxiliary thread"
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.Timer aux_thread_root_timer = 15;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeAuxThreadRootTimer(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer value) {
                    if (auxThreadRootTimerBuilder_ == null) {
                        if (auxThreadRootTimer_ != null) {
                            auxThreadRootTimer_ = org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.newBuilder(auxThreadRootTimer_).mergeFrom(value).buildPartial();
                        } else {
                            auxThreadRootTimer_ = value;
                        }
                        onChanged();
                    } else {
                        auxThreadRootTimerBuilder_.mergeFrom(value);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * aux thread root timer is always "auxiliary thread"
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.Timer aux_thread_root_timer = 15;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearAuxThreadRootTimer() {
                    if (auxThreadRootTimerBuilder_ == null) {
                        auxThreadRootTimer_ = null;
                        onChanged();
                    } else {
                        auxThreadRootTimer_ = null;
                        auxThreadRootTimerBuilder_ = null;
                    }
                    return this;
                }

                /**
                 * <pre>
                 * aux thread root timer is always "auxiliary thread"
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.Timer aux_thread_root_timer = 15;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.@org.checkerframework.checker.tainting.qual.Tainted Builder getAuxThreadRootTimerBuilder() {
                    onChanged();
                    return getAuxThreadRootTimerFieldBuilder().getBuilder();
                }

                /**
                 * <pre>
                 * aux thread root timer is always "auxiliary thread"
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.Timer aux_thread_root_timer = 15;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getAuxThreadRootTimerOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (auxThreadRootTimerBuilder_ != null) {
                        return auxThreadRootTimerBuilder_.getMessageOrBuilder();
                    } else {
                        return auxThreadRootTimer_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.getDefaultInstance() : auxThreadRootTimer_;
                    }
                }

                /**
                 * <pre>
                 * aux thread root timer is always "auxiliary thread"
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.Timer aux_thread_root_timer = 15;</code>
                 */
                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.TimerOrBuilder> getAuxThreadRootTimerFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (auxThreadRootTimerBuilder_ == null) {
                        auxThreadRootTimerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.TimerOrBuilder>(getAuxThreadRootTimer(), getParentForChildren(), isClean());
                        auxThreadRootTimer_ = null;
                    }
                    return auxThreadRootTimerBuilder_;
                }

                private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer> asyncTimer_ = java.util.Collections.emptyList();

                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.asyncTimerBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                private void ensureAsyncTimerIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (!((bitField0_ & 0x00000008) != 0)) {
                        asyncTimer_ = new java.util.ArrayList<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer>(asyncTimer_);
                        bitField0_ |= 0x00000008;
                    }
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.TimerOrBuilder> asyncTimerBuilder_;

                /**
                 * <pre>
                 * async timers have no child timers
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer> getAsyncTimerList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (asyncTimerBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(asyncTimer_);
                    } else {
                        return asyncTimerBuilder_.getMessageList();
                    }
                }

                /**
                 * <pre>
                 * async timers have no child timers
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
                 */
                public  @org.checkerframework.checker.tainting.qual.Tainted int getAsyncTimerCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (asyncTimerBuilder_ == null) {
                        return asyncTimer_.size();
                    } else {
                        return asyncTimerBuilder_.getCount();
                    }
                }

                /**
                 * <pre>
                 * async timers have no child timers
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer getAsyncTimer(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (asyncTimerBuilder_ == null) {
                        return asyncTimer_.get(index);
                    } else {
                        return asyncTimerBuilder_.getMessage(index);
                    }
                }

                /**
                 * <pre>
                 * async timers have no child timers
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setAsyncTimer(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer value) {
                    if (asyncTimerBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureAsyncTimerIsMutable();
                        asyncTimer_.set(index, value);
                        onChanged();
                    } else {
                        asyncTimerBuilder_.setMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * async timers have no child timers
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setAsyncTimer(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder builderForValue) {
                    if (asyncTimerBuilder_ == null) {
                        ensureAsyncTimerIsMutable();
                        asyncTimer_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        asyncTimerBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <pre>
                 * async timers have no child timers
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAsyncTimer(org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer value) {
                    if (asyncTimerBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureAsyncTimerIsMutable();
                        asyncTimer_.add(value);
                        onChanged();
                    } else {
                        asyncTimerBuilder_.addMessage(value);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * async timers have no child timers
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAsyncTimer(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer value) {
                    if (asyncTimerBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureAsyncTimerIsMutable();
                        asyncTimer_.add(index, value);
                        onChanged();
                    } else {
                        asyncTimerBuilder_.addMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * async timers have no child timers
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAsyncTimer(org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder builderForValue) {
                    if (asyncTimerBuilder_ == null) {
                        ensureAsyncTimerIsMutable();
                        asyncTimer_.add(builderForValue.build());
                        onChanged();
                    } else {
                        asyncTimerBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <pre>
                 * async timers have no child timers
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAsyncTimer(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder builderForValue) {
                    if (asyncTimerBuilder_ == null) {
                        ensureAsyncTimerIsMutable();
                        asyncTimer_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        asyncTimerBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <pre>
                 * async timers have no child timers
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllAsyncTimer(java.lang.Iterable<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer> values) {
                    if (asyncTimerBuilder_ == null) {
                        ensureAsyncTimerIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, asyncTimer_);
                        onChanged();
                    } else {
                        asyncTimerBuilder_.addAllMessages(values);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * async timers have no child timers
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearAsyncTimer() {
                    if (asyncTimerBuilder_ == null) {
                        asyncTimer_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000008);
                        onChanged();
                    } else {
                        asyncTimerBuilder_.clear();
                    }
                    return this;
                }

                /**
                 * <pre>
                 * async timers have no child timers
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder removeAsyncTimer(int index) {
                    if (asyncTimerBuilder_ == null) {
                        ensureAsyncTimerIsMutable();
                        asyncTimer_.remove(index);
                        onChanged();
                    } else {
                        asyncTimerBuilder_.remove(index);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * async timers have no child timers
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.@org.checkerframework.checker.tainting.qual.Tainted Builder getAsyncTimerBuilder(int index) {
                    return getAsyncTimerFieldBuilder().getBuilder(index);
                }

                /**
                 * <pre>
                 * async timers have no child timers
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getAsyncTimerOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (asyncTimerBuilder_ == null) {
                        return asyncTimer_.get(index);
                    } else {
                        return asyncTimerBuilder_.getMessageOrBuilder(index);
                    }
                }

                /**
                 * <pre>
                 * async timers have no child timers
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.TimerOrBuilder> getAsyncTimerOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (asyncTimerBuilder_ != null) {
                        return asyncTimerBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(asyncTimer_);
                    }
                }

                /**
                 * <pre>
                 * async timers have no child timers
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.@org.checkerframework.checker.tainting.qual.Tainted Builder addAsyncTimerBuilder() {
                    return getAsyncTimerFieldBuilder().addBuilder(org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.getDefaultInstance());
                }

                /**
                 * <pre>
                 * async timers have no child timers
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.@org.checkerframework.checker.tainting.qual.Tainted Builder addAsyncTimerBuilder(int index) {
                    return getAsyncTimerFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.getDefaultInstance());
                }

                /**
                 * <pre>
                 * async timers have no child timers
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer async_timer = 16;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder> getAsyncTimerBuilderList() {
                    return getAsyncTimerFieldBuilder().getBuilderList();
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.TimerOrBuilder> getAsyncTimerFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (asyncTimerBuilder_ == null) {
                        asyncTimerBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.TimerOrBuilder>(asyncTimer_, ((bitField0_ & 0x00000008) != 0), getParentForChildren(), isClean());
                        asyncTimer_ = null;
                    }
                    return asyncTimerBuilder_;
                }

                private org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats oldMainThreadStats_;

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats, org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStatsOrBuilder> oldMainThreadStatsBuilder_;

                /**
                 * <pre>
                 * deprecated in 0.10.9
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_main_thread_stats = 17;</code>
                 * @return Whether the oldMainThreadStats field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasOldMainThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return oldMainThreadStatsBuilder_ != null || oldMainThreadStats_ != null;
                }

                /**
                 * <pre>
                 * deprecated in 0.10.9
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_main_thread_stats = 17;</code>
                 * @return The oldMainThreadStats.
                 */
                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.oldMainThreadStatsBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats getOldMainThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (oldMainThreadStatsBuilder_ == null) {
                        return oldMainThreadStats_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.getDefaultInstance() : oldMainThreadStats_;
                    } else {
                        return oldMainThreadStatsBuilder_.getMessage();
                    }
                }

                /**
                 * <pre>
                 * deprecated in 0.10.9
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_main_thread_stats = 17;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setOldMainThreadStats(org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats value) {
                    if (oldMainThreadStatsBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        oldMainThreadStats_ = value;
                        onChanged();
                    } else {
                        oldMainThreadStatsBuilder_.setMessage(value);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * deprecated in 0.10.9
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_main_thread_stats = 17;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setOldMainThreadStats(org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.Builder builderForValue) {
                    if (oldMainThreadStatsBuilder_ == null) {
                        oldMainThreadStats_ = builderForValue.build();
                        onChanged();
                    } else {
                        oldMainThreadStatsBuilder_.setMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <pre>
                 * deprecated in 0.10.9
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_main_thread_stats = 17;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeOldMainThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats value) {
                    if (oldMainThreadStatsBuilder_ == null) {
                        if (oldMainThreadStats_ != null) {
                            oldMainThreadStats_ = org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.newBuilder(oldMainThreadStats_).mergeFrom(value).buildPartial();
                        } else {
                            oldMainThreadStats_ = value;
                        }
                        onChanged();
                    } else {
                        oldMainThreadStatsBuilder_.mergeFrom(value);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * deprecated in 0.10.9
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_main_thread_stats = 17;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOldMainThreadStats() {
                    if (oldMainThreadStatsBuilder_ == null) {
                        oldMainThreadStats_ = null;
                        onChanged();
                    } else {
                        oldMainThreadStats_ = null;
                        oldMainThreadStatsBuilder_ = null;
                    }
                    return this;
                }

                /**
                 * <pre>
                 * deprecated in 0.10.9
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_main_thread_stats = 17;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.@org.checkerframework.checker.tainting.qual.Tainted Builder getOldMainThreadStatsBuilder() {
                    onChanged();
                    return getOldMainThreadStatsFieldBuilder().getBuilder();
                }

                /**
                 * <pre>
                 * deprecated in 0.10.9
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_main_thread_stats = 17;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStatsOrBuilder getOldMainThreadStatsOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (oldMainThreadStatsBuilder_ != null) {
                        return oldMainThreadStatsBuilder_.getMessageOrBuilder();
                    } else {
                        return oldMainThreadStats_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.getDefaultInstance() : oldMainThreadStats_;
                    }
                }

                /**
                 * <pre>
                 * deprecated in 0.10.9
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_main_thread_stats = 17;</code>
                 */
                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats, org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStatsOrBuilder> getOldMainThreadStatsFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (oldMainThreadStatsBuilder_ == null) {
                        oldMainThreadStatsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats, org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStatsOrBuilder>(getOldMainThreadStats(), getParentForChildren(), isClean());
                        oldMainThreadStats_ = null;
                    }
                    return oldMainThreadStatsBuilder_;
                }

                private org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats oldAuxThreadStats_;

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats, org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStatsOrBuilder> oldAuxThreadStatsBuilder_;

                /**
                 * <pre>
                 * deprecated in 0.10.9
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_aux_thread_stats = 18;</code>
                 * @return Whether the oldAuxThreadStats field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasOldAuxThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return oldAuxThreadStatsBuilder_ != null || oldAuxThreadStats_ != null;
                }

                /**
                 * <pre>
                 * deprecated in 0.10.9
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_aux_thread_stats = 18;</code>
                 * @return The oldAuxThreadStats.
                 */
                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.oldAuxThreadStatsBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats getOldAuxThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (oldAuxThreadStatsBuilder_ == null) {
                        return oldAuxThreadStats_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.getDefaultInstance() : oldAuxThreadStats_;
                    } else {
                        return oldAuxThreadStatsBuilder_.getMessage();
                    }
                }

                /**
                 * <pre>
                 * deprecated in 0.10.9
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_aux_thread_stats = 18;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setOldAuxThreadStats(org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats value) {
                    if (oldAuxThreadStatsBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        oldAuxThreadStats_ = value;
                        onChanged();
                    } else {
                        oldAuxThreadStatsBuilder_.setMessage(value);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * deprecated in 0.10.9
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_aux_thread_stats = 18;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setOldAuxThreadStats(org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.Builder builderForValue) {
                    if (oldAuxThreadStatsBuilder_ == null) {
                        oldAuxThreadStats_ = builderForValue.build();
                        onChanged();
                    } else {
                        oldAuxThreadStatsBuilder_.setMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <pre>
                 * deprecated in 0.10.9
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_aux_thread_stats = 18;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeOldAuxThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats value) {
                    if (oldAuxThreadStatsBuilder_ == null) {
                        if (oldAuxThreadStats_ != null) {
                            oldAuxThreadStats_ = org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.newBuilder(oldAuxThreadStats_).mergeFrom(value).buildPartial();
                        } else {
                            oldAuxThreadStats_ = value;
                        }
                        onChanged();
                    } else {
                        oldAuxThreadStatsBuilder_.mergeFrom(value);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * deprecated in 0.10.9
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_aux_thread_stats = 18;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOldAuxThreadStats() {
                    if (oldAuxThreadStatsBuilder_ == null) {
                        oldAuxThreadStats_ = null;
                        onChanged();
                    } else {
                        oldAuxThreadStats_ = null;
                        oldAuxThreadStatsBuilder_ = null;
                    }
                    return this;
                }

                /**
                 * <pre>
                 * deprecated in 0.10.9
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_aux_thread_stats = 18;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.@org.checkerframework.checker.tainting.qual.Tainted Builder getOldAuxThreadStatsBuilder() {
                    onChanged();
                    return getOldAuxThreadStatsFieldBuilder().getBuilder();
                }

                /**
                 * <pre>
                 * deprecated in 0.10.9
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_aux_thread_stats = 18;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStatsOrBuilder getOldAuxThreadStatsOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (oldAuxThreadStatsBuilder_ != null) {
                        return oldAuxThreadStatsBuilder_.getMessageOrBuilder();
                    } else {
                        return oldAuxThreadStats_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.getDefaultInstance() : oldAuxThreadStats_;
                    }
                }

                /**
                 * <pre>
                 * deprecated in 0.10.9
                 * </pre>
                 *
                 * <code>.org_glowroot_wire_api_model.Trace.OldThreadStats old_aux_thread_stats = 18;</code>
                 */
                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats, org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStatsOrBuilder> getOldAuxThreadStatsFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (oldAuxThreadStatsBuilder_ == null) {
                        oldAuxThreadStatsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats, org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStatsOrBuilder>(getOldAuxThreadStats(), getParentForChildren(), isClean());
                        oldAuxThreadStats_ = null;
                    }
                    return oldAuxThreadStatsBuilder_;
                }

                private org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats mainThreadStats_;

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats, org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStatsOrBuilder> mainThreadStatsBuilder_;

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.ThreadStats main_thread_stats = 27;</code>
                 * @return Whether the mainThreadStats field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasMainThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return mainThreadStatsBuilder_ != null || mainThreadStats_ != null;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.ThreadStats main_thread_stats = 27;</code>
                 * @return The mainThreadStats.
                 */
                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.mainThreadStatsBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats getMainThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (mainThreadStatsBuilder_ == null) {
                        return mainThreadStats_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.getDefaultInstance() : mainThreadStats_;
                    } else {
                        return mainThreadStatsBuilder_.getMessage();
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.ThreadStats main_thread_stats = 27;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setMainThreadStats(org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats value) {
                    if (mainThreadStatsBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        mainThreadStats_ = value;
                        onChanged();
                    } else {
                        mainThreadStatsBuilder_.setMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.ThreadStats main_thread_stats = 27;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setMainThreadStats(org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.Builder builderForValue) {
                    if (mainThreadStatsBuilder_ == null) {
                        mainThreadStats_ = builderForValue.build();
                        onChanged();
                    } else {
                        mainThreadStatsBuilder_.setMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.ThreadStats main_thread_stats = 27;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeMainThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats value) {
                    if (mainThreadStatsBuilder_ == null) {
                        if (mainThreadStats_ != null) {
                            mainThreadStats_ = org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.newBuilder(mainThreadStats_).mergeFrom(value).buildPartial();
                        } else {
                            mainThreadStats_ = value;
                        }
                        onChanged();
                    } else {
                        mainThreadStatsBuilder_.mergeFrom(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.ThreadStats main_thread_stats = 27;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearMainThreadStats() {
                    if (mainThreadStatsBuilder_ == null) {
                        mainThreadStats_ = null;
                        onChanged();
                    } else {
                        mainThreadStats_ = null;
                        mainThreadStatsBuilder_ = null;
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.ThreadStats main_thread_stats = 27;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.@org.checkerframework.checker.tainting.qual.Tainted Builder getMainThreadStatsBuilder() {
                    onChanged();
                    return getMainThreadStatsFieldBuilder().getBuilder();
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.ThreadStats main_thread_stats = 27;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStatsOrBuilder getMainThreadStatsOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (mainThreadStatsBuilder_ != null) {
                        return mainThreadStatsBuilder_.getMessageOrBuilder();
                    } else {
                        return mainThreadStats_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.getDefaultInstance() : mainThreadStats_;
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.ThreadStats main_thread_stats = 27;</code>
                 */
                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats, org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStatsOrBuilder> getMainThreadStatsFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (mainThreadStatsBuilder_ == null) {
                        mainThreadStatsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats, org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStatsOrBuilder>(getMainThreadStats(), getParentForChildren(), isClean());
                        mainThreadStats_ = null;
                    }
                    return mainThreadStatsBuilder_;
                }

                private org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats auxThreadStats_;

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats, org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStatsOrBuilder> auxThreadStatsBuilder_;

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.ThreadStats aux_thread_stats = 28;</code>
                 * @return Whether the auxThreadStats field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasAuxThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return auxThreadStatsBuilder_ != null || auxThreadStats_ != null;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.ThreadStats aux_thread_stats = 28;</code>
                 * @return The auxThreadStats.
                 */
                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.auxThreadStatsBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats getAuxThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (auxThreadStatsBuilder_ == null) {
                        return auxThreadStats_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.getDefaultInstance() : auxThreadStats_;
                    } else {
                        return auxThreadStatsBuilder_.getMessage();
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.ThreadStats aux_thread_stats = 28;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setAuxThreadStats(org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats value) {
                    if (auxThreadStatsBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        auxThreadStats_ = value;
                        onChanged();
                    } else {
                        auxThreadStatsBuilder_.setMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.ThreadStats aux_thread_stats = 28;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setAuxThreadStats(org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.Builder builderForValue) {
                    if (auxThreadStatsBuilder_ == null) {
                        auxThreadStats_ = builderForValue.build();
                        onChanged();
                    } else {
                        auxThreadStatsBuilder_.setMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.ThreadStats aux_thread_stats = 28;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeAuxThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats value) {
                    if (auxThreadStatsBuilder_ == null) {
                        if (auxThreadStats_ != null) {
                            auxThreadStats_ = org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.newBuilder(auxThreadStats_).mergeFrom(value).buildPartial();
                        } else {
                            auxThreadStats_ = value;
                        }
                        onChanged();
                    } else {
                        auxThreadStatsBuilder_.mergeFrom(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.ThreadStats aux_thread_stats = 28;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearAuxThreadStats() {
                    if (auxThreadStatsBuilder_ == null) {
                        auxThreadStats_ = null;
                        onChanged();
                    } else {
                        auxThreadStats_ = null;
                        auxThreadStatsBuilder_ = null;
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.ThreadStats aux_thread_stats = 28;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.@org.checkerframework.checker.tainting.qual.Tainted Builder getAuxThreadStatsBuilder() {
                    onChanged();
                    return getAuxThreadStatsFieldBuilder().getBuilder();
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.ThreadStats aux_thread_stats = 28;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStatsOrBuilder getAuxThreadStatsOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (auxThreadStatsBuilder_ != null) {
                        return auxThreadStatsBuilder_.getMessageOrBuilder();
                    } else {
                        return auxThreadStats_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.getDefaultInstance() : auxThreadStats_;
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.ThreadStats aux_thread_stats = 28;</code>
                 */
                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats, org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStatsOrBuilder> getAuxThreadStatsFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (auxThreadStatsBuilder_ == null) {
                        auxThreadStatsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats, org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStatsOrBuilder>(getAuxThreadStats(), getParentForChildren(), isClean());
                        auxThreadStats_ = null;
                    }
                    return auxThreadStatsBuilder_;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted int entryCount_;

                /**
                 * <code>int32 entry_count = 19;</code>
                 * @return The entryCount.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted int getEntryCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return entryCount_;
                }

                /**
                 * <code>int32 entry_count = 19;</code>
                 * @param value The entryCount to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setEntryCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int value) {
                    entryCount_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>int32 entry_count = 19;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearEntryCount() {
                    entryCount_ = 0;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted boolean entryLimitExceeded_;

                /**
                 * <code>bool entry_limit_exceeded = 20;</code>
                 * @return The entryLimitExceeded.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean getEntryLimitExceeded(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return entryLimitExceeded_;
                }

                /**
                 * <code>bool entry_limit_exceeded = 20;</code>
                 * @param value The entryLimitExceeded to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setEntryLimitExceeded(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted boolean value) {
                    entryLimitExceeded_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>bool entry_limit_exceeded = 20;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearEntryLimitExceeded() {
                    entryLimitExceeded_ = false;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted int queryCount_;

                /**
                 * <code>int32 query_count = 25;</code>
                 * @return The queryCount.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted int getQueryCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return queryCount_;
                }

                /**
                 * <code>int32 query_count = 25;</code>
                 * @param value The queryCount to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setQueryCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int value) {
                    queryCount_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>int32 query_count = 25;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearQueryCount() {
                    queryCount_ = 0;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted boolean queryLimitExceeded_;

                /**
                 * <code>bool query_limit_exceeded = 26;</code>
                 * @return The queryLimitExceeded.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean getQueryLimitExceeded(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return queryLimitExceeded_;
                }

                /**
                 * <code>bool query_limit_exceeded = 26;</code>
                 * @param value The queryLimitExceeded to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setQueryLimitExceeded(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted boolean value) {
                    queryLimitExceeded_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>bool query_limit_exceeded = 26;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearQueryLimitExceeded() {
                    queryLimitExceeded_ = false;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted long mainThreadProfileSampleCount_;

                /**
                 * <code>int64 main_thread_profile_sample_count = 21;</code>
                 * @return The mainThreadProfileSampleCount.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted long getMainThreadProfileSampleCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return mainThreadProfileSampleCount_;
                }

                /**
                 * <code>int64 main_thread_profile_sample_count = 21;</code>
                 * @param value The mainThreadProfileSampleCount to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setMainThreadProfileSampleCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                    mainThreadProfileSampleCount_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>int64 main_thread_profile_sample_count = 21;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearMainThreadProfileSampleCount() {
                    mainThreadProfileSampleCount_ = 0L;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted boolean mainThreadProfileSampleLimitExceeded_;

                /**
                 * <code>bool main_thread_profile_sample_limit_exceeded = 22;</code>
                 * @return The mainThreadProfileSampleLimitExceeded.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean getMainThreadProfileSampleLimitExceeded(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return mainThreadProfileSampleLimitExceeded_;
                }

                /**
                 * <code>bool main_thread_profile_sample_limit_exceeded = 22;</code>
                 * @param value The mainThreadProfileSampleLimitExceeded to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setMainThreadProfileSampleLimitExceeded(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted boolean value) {
                    mainThreadProfileSampleLimitExceeded_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>bool main_thread_profile_sample_limit_exceeded = 22;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearMainThreadProfileSampleLimitExceeded() {
                    mainThreadProfileSampleLimitExceeded_ = false;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted long auxThreadProfileSampleCount_;

                /**
                 * <code>int64 aux_thread_profile_sample_count = 23;</code>
                 * @return The auxThreadProfileSampleCount.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted long getAuxThreadProfileSampleCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return auxThreadProfileSampleCount_;
                }

                /**
                 * <code>int64 aux_thread_profile_sample_count = 23;</code>
                 * @param value The auxThreadProfileSampleCount to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setAuxThreadProfileSampleCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                    auxThreadProfileSampleCount_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>int64 aux_thread_profile_sample_count = 23;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearAuxThreadProfileSampleCount() {
                    auxThreadProfileSampleCount_ = 0L;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted boolean auxThreadProfileSampleLimitExceeded_;

                /**
                 * <code>bool aux_thread_profile_sample_limit_exceeded = 24;</code>
                 * @return The auxThreadProfileSampleLimitExceeded.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean getAuxThreadProfileSampleLimitExceeded(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return auxThreadProfileSampleLimitExceeded_;
                }

                /**
                 * <code>bool aux_thread_profile_sample_limit_exceeded = 24;</code>
                 * @param value The auxThreadProfileSampleLimitExceeded to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setAuxThreadProfileSampleLimitExceeded(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted boolean value) {
                    auxThreadProfileSampleLimitExceeded_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>bool aux_thread_profile_sample_limit_exceeded = 24;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearAuxThreadProfileSampleLimitExceeded() {
                    auxThreadProfileSampleLimitExceeded_ = false;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted long captureTimePartialRollup_;

                /**
                 * <pre>
                 * introduced in 0.13.1, but only populated and used by the central collector
                 * </pre>
                 *
                 * <code>int64 capture_time_partial_rollup = 30;</code>
                 * @return The captureTimePartialRollup.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted long getCaptureTimePartialRollup(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return captureTimePartialRollup_;
                }

                /**
                 * <pre>
                 * introduced in 0.13.1, but only populated and used by the central collector
                 * </pre>
                 *
                 * <code>int64 capture_time_partial_rollup = 30;</code>
                 * @param value The captureTimePartialRollup to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setCaptureTimePartialRollup(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                    captureTimePartialRollup_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * introduced in 0.13.1, but only populated and used by the central collector
                 * </pre>
                 *
                 * <code>int64 capture_time_partial_rollup = 30;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearCaptureTimePartialRollup() {
                    captureTimePartialRollup_ = 0L;
                    onChanged();
                    return this;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Trace.Header)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Trace.Header)
            private static final org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.TraceOuterClass.Trace.Header();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Header> PARSER = new com.google.protobuf.AbstractParser<Header>() {

                public Header parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new Header(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Header> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Header> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Header this) {
                return DEFAULT_INSTANCE;
            }
        }

        public interface AttributeOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Trace.Attribute)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <code>string name = 1;</code>
             * @return The name.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getName();

            /**
             * <code>string name = 1;</code>
             * @return The bytes for name.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getNameBytes();

            /**
             * <code>repeated string value = 2;</code>
             * @return A list containing the value.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<java.lang.String> getValueList();

            /**
             * <code>repeated string value = 2;</code>
             * @return The count of value.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted int getValueCount();

            /**
             * <code>repeated string value = 2;</code>
             * @param index The index of the element to return.
             * @return The value at the given index.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getValue(int index);

            /**
             * <code>repeated string value = 2;</code>
             * @param index The index of the value to return.
             * @return The bytes of the value at the given index.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getValueBytes(int index);
        }

        /**
         * Protobuf type {@code org_glowroot_wire_api_model.Trace.Attribute}
         */
        public static final class Attribute extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Trace.Attribute)
        AttributeOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use Attribute.newBuilder() to construct.
            private Attribute(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.name_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private Attribute() {
                name_ = "";
                value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.name_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted Attribute this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new Attribute();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Attribute this) {
                return this.unknownFields;
            }

            private Attribute(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    name_ = s;
                                    break;
                                }
                            case 18:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                        value_ = new com.google.protobuf.LazyStringArrayList();
                                        mutable_bitField0_ |= 0x00000001;
                                    }
                                    value_.add(s);
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    if (((mutable_bitField0_ & 0x00000001) != 0)) {
                        value_ = value_.getUnmodifiableView();
                    }
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Attribute_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Attribute this) {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Attribute_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute.Builder.class);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int NAME_FIELD_NUMBER = 1;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object name_;

            /**
             * <code>string name = 1;</code>
             * @return The name.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getName(@org.checkerframework.checker.tainting.qual.Tainted Attribute this) {
                java.lang.Object ref = name_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    name_ = s;
                    return s;
                }
            }

            /**
             * <code>string name = 1;</code>
             * @return The bytes for name.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getNameBytes(@org.checkerframework.checker.tainting.qual.Tainted Attribute this) {
                java.lang.Object ref = name_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int VALUE_FIELD_NUMBER = 2;

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted LazyStringList value_;

            /**
             * <code>repeated string value = 2;</code>
             * @return A list containing the value.
             */
            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ProtocolStringList getValueList(@org.checkerframework.checker.tainting.qual.Tainted Attribute this) {
                return value_;
            }

            /**
             * <code>repeated string value = 2;</code>
             * @return The count of value.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted int getValueCount(@org.checkerframework.checker.tainting.qual.Tainted Attribute this) {
                return value_.size();
            }

            /**
             * <code>repeated string value = 2;</code>
             * @param index The index of the element to return.
             * @return The value at the given index.
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getValue(@org.checkerframework.checker.tainting.qual.Tainted Attribute this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return value_.get(index);
            }

            /**
             * <code>repeated string value = 2;</code>
             * @param index The index of the value to return.
             * @return The bytes of the value at the given index.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getValueBytes(@org.checkerframework.checker.tainting.qual.Tainted Attribute this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return value_.getByteString(index);
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Attribute this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted Attribute this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
                }
                for (int i = 0; i < value_.size(); i++) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_.getRaw(i));
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted Attribute this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
                }
                {
                    int dataSize = 0;
                    for (int i = 0; i < value_.size(); i++) {
                        dataSize += computeStringSizeNoTag(value_.getRaw(i));
                    }
                    size += dataSize;
                    size += 1 * getValueList().size();
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted Attribute this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute other = (org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute) obj;
                if (!getName().equals(other.getName()))
                    return false;
                if (!getValueList().equals(other.getValueList()))
                    return false;
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted Attribute this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + NAME_FIELD_NUMBER;
                hash = (53 * hash) + getName().hashCode();
                if (getValueCount() > 0) {
                    hash = (37 * hash) + VALUE_FIELD_NUMBER;
                    hash = (53 * hash) + getValueList().hashCode();
                }
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted Attribute this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted Attribute this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted Attribute this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code org_glowroot_wire_api_model.Trace.Attribute}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Trace.Attribute)
            org.glowroot.wire.api.model.TraceOuterClass.Trace.AttributeOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Attribute_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Attribute_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                @org.checkerframework.dataflow.qual.Pure
                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                    }
                }

                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.name_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    name_ = "";
                    value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                    bitField0_ = (bitField0_ & ~0x00000001);
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Attribute_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute result = new org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute(this);
                    int from_bitField0_ = bitField0_;
                    result.name_ = name_;
                    if (((bitField0_ & 0x00000001) != 0)) {
                        value_ = value_.getUnmodifiableView();
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.value_ = value_;
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute) {
                        return mergeFrom((org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute other) {
                    if (other == org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute.getDefaultInstance())
                        return this;
                    if (!other.getName().isEmpty()) {
                        name_ = other.name_;
                        onChanged();
                    }
                    if (!other.value_.isEmpty()) {
                        if (value_.isEmpty()) {
                            value_ = other.value_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensureValueIsMutable();
                            value_.addAll(other.value_);
                        }
                        onChanged();
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted int bitField0_;

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object name_ = "";

                /**
                 * <code>string name = 1;</code>
                 * @return The name.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getName(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = name_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        name_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <code>string name = 1;</code>
                 * @return The bytes for name.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getNameBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = name_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        name_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>string name = 1;</code>
                 * @param value The name to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setName(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    name_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>string name = 1;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearName() {
                    name_ = getDefaultInstance().getName();
                    onChanged();
                    return this;
                }

                /**
                 * <code>string name = 1;</code>
                 * @param value The bytes for name to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setNameBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    name_ = value;
                    onChanged();
                    return this;
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted LazyStringList value_ = com.google.protobuf.LazyStringArrayList.EMPTY;

                private void ensureValueIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (!((bitField0_ & 0x00000001) != 0)) {
                        value_ = new com.google.protobuf.LazyStringArrayList(value_);
                        bitField0_ |= 0x00000001;
                    }
                }

                /**
                 * <code>repeated string value = 2;</code>
                 * @return A list containing the value.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ProtocolStringList getValueList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return value_.getUnmodifiableView();
                }

                /**
                 * <code>repeated string value = 2;</code>
                 * @return The count of value.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted int getValueCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return value_.size();
                }

                /**
                 * <code>repeated string value = 2;</code>
                 * @param index The index of the element to return.
                 * @return The value at the given index.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getValue(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    return value_.get(index);
                }

                /**
                 * <code>repeated string value = 2;</code>
                 * @param index The index of the value to return.
                 * @return The bytes of the value at the given index.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getValueBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    return value_.getByteString(index);
                }

                /**
                 * <code>repeated string value = 2;</code>
                 * @param index The index to set the value at.
                 * @param value The value to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setValue(int index, java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureValueIsMutable();
                    value_.set(index, value);
                    onChanged();
                    return this;
                }

                /**
                 * <code>repeated string value = 2;</code>
                 * @param value The value to add.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addValue(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureValueIsMutable();
                    value_.add(value);
                    onChanged();
                    return this;
                }

                /**
                 * <code>repeated string value = 2;</code>
                 * @param values The value to add.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllValue(java.lang.Iterable<java.lang.String> values) {
                    ensureValueIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, value_);
                    onChanged();
                    return this;
                }

                /**
                 * <code>repeated string value = 2;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearValue() {
                    value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                    return this;
                }

                /**
                 * <code>repeated string value = 2;</code>
                 * @param value The bytes of the value to add.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addValueBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    ensureValueIsMutable();
                    value_.add(value);
                    onChanged();
                    return this;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Trace.Attribute)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Trace.Attribute)
            private static final org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.TraceOuterClass.Trace.Attribute();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Attribute> PARSER = new com.google.protobuf.AbstractParser<Attribute>() {

                public Attribute parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new Attribute(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Attribute> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Attribute> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted Attribute this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Attribute getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Attribute this) {
                return DEFAULT_INSTANCE;
            }
        }

        public interface DetailEntryOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Trace.DetailEntry)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <code>string name = 1;</code>
             * @return The name.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getName();

            /**
             * <code>string name = 1;</code>
             * @return The bytes for name.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getNameBytes();

            /**
             * <pre>
             * one of these two (or neither for an empty value)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue> getValueList();

            /**
             * <pre>
             * one of these two (or neither for an empty value)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue getValue(int index);

            /**
             * <pre>
             * one of these two (or neither for an empty value)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted int getValueCount();

            /**
             * <pre>
             * one of these two (or neither for an empty value)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValueOrBuilder> getValueOrBuilderList();

            /**
             * <pre>
             * one of these two (or neither for an empty value)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValueOrBuilder getValueOrBuilder(int index);

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry> getChildEntryList();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry getChildEntry(int index);

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted int getChildEntryCount();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntryOrBuilder> getChildEntryOrBuilderList();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntryOrBuilder getChildEntryOrBuilder(int index);
        }

        /**
         * Protobuf type {@code org_glowroot_wire_api_model.Trace.DetailEntry}
         */
        public static final class DetailEntry extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Trace.DetailEntry)
        DetailEntryOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use DetailEntry.newBuilder() to construct.
            private DetailEntry(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.name_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private DetailEntry() {
                name_ = "";
                value_ = java.util.Collections.emptyList();
                childEntry_ = java.util.Collections.emptyList();
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.name_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new DetailEntry();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this) {
                return this.unknownFields;
            }

            private DetailEntry(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    name_ = s;
                                    break;
                                }
                            case 18:
                                {
                                    if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                        value_ = new java.util.ArrayList<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue>();
                                        mutable_bitField0_ |= 0x00000001;
                                    }
                                    value_.add(input.readMessage(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue.parser(), extensionRegistry));
                                    break;
                                }
                            case 26:
                                {
                                    if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                                        childEntry_ = new java.util.ArrayList<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry>();
                                        mutable_bitField0_ |= 0x00000002;
                                    }
                                    childEntry_.add(input.readMessage(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.parser(), extensionRegistry));
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    if (((mutable_bitField0_ & 0x00000001) != 0)) {
                        value_ = java.util.Collections.unmodifiableList(value_);
                    }
                    if (((mutable_bitField0_ & 0x00000002) != 0)) {
                        childEntry_ = java.util.Collections.unmodifiableList(childEntry_);
                    }
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_DetailEntry_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this) {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_DetailEntry_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder.class);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int NAME_FIELD_NUMBER = 1;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object name_;

            /**
             * <code>string name = 1;</code>
             * @return The name.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getName(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this) {
                java.lang.Object ref = name_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    name_ = s;
                    return s;
                }
            }

            /**
             * <code>string name = 1;</code>
             * @return The bytes for name.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getNameBytes(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this) {
                java.lang.Object ref = name_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int VALUE_FIELD_NUMBER = 2;

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue> value_;

            /**
             * <pre>
             * one of these two (or neither for an empty value)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue> getValueList(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this) {
                return value_;
            }

            /**
             * <pre>
             * one of these two (or neither for an empty value)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValueOrBuilder> getValueOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this) {
                return value_;
            }

            /**
             * <pre>
             * one of these two (or neither for an empty value)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted int getValueCount(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this) {
                return value_.size();
            }

            /**
             * <pre>
             * one of these two (or neither for an empty value)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue getValue(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return value_.get(index);
            }

            /**
             * <pre>
             * one of these two (or neither for an empty value)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValueOrBuilder getValueOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return value_.get(index);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int CHILD_ENTRY_FIELD_NUMBER = 3;

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry> childEntry_;

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry> getChildEntryList(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this) {
                return childEntry_;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntryOrBuilder> getChildEntryOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this) {
                return childEntry_;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted int getChildEntryCount(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this) {
                return childEntry_.size();
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry getChildEntry(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return childEntry_.get(index);
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntryOrBuilder getChildEntryOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return childEntry_.get(index);
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
                }
                for (int i = 0; i < value_.size(); i++) {
                    output.writeMessage(2, value_.get(i));
                }
                for (int i = 0; i < childEntry_.size(); i++) {
                    output.writeMessage(3, childEntry_.get(i));
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
                }
                for (int i = 0; i < value_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, value_.get(i));
                }
                for (int i = 0; i < childEntry_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, childEntry_.get(i));
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry other = (org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry) obj;
                if (!getName().equals(other.getName()))
                    return false;
                if (!getValueList().equals(other.getValueList()))
                    return false;
                if (!getChildEntryList().equals(other.getChildEntryList()))
                    return false;
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + NAME_FIELD_NUMBER;
                hash = (53 * hash) + getName().hashCode();
                if (getValueCount() > 0) {
                    hash = (37 * hash) + VALUE_FIELD_NUMBER;
                    hash = (53 * hash) + getValueList().hashCode();
                }
                if (getChildEntryCount() > 0) {
                    hash = (37 * hash) + CHILD_ENTRY_FIELD_NUMBER;
                    hash = (53 * hash) + getChildEntryList().hashCode();
                }
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code org_glowroot_wire_api_model.Trace.DetailEntry}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Trace.DetailEntry)
            org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntryOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_DetailEntry_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_DetailEntry_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                        getValueFieldBuilder();
                        getChildEntryFieldBuilder();
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    name_ = "";
                    if (valueBuilder_ == null) {
                        value_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        valueBuilder_.clear();
                    }
                    if (childEntryBuilder_ == null) {
                        childEntry_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        childEntryBuilder_.clear();
                    }
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_DetailEntry_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry result = new org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry(this);
                    int from_bitField0_ = bitField0_;
                    result.name_ = name_;
                    if (valueBuilder_ == null) {
                        if (((bitField0_ & 0x00000001) != 0)) {
                            value_ = java.util.Collections.unmodifiableList(value_);
                            bitField0_ = (bitField0_ & ~0x00000001);
                        }
                        result.value_ = value_;
                    } else {
                        result.value_ = valueBuilder_.build();
                    }
                    if (childEntryBuilder_ == null) {
                        if (((bitField0_ & 0x00000002) != 0)) {
                            childEntry_ = java.util.Collections.unmodifiableList(childEntry_);
                            bitField0_ = (bitField0_ & ~0x00000002);
                        }
                        result.childEntry_ = childEntry_;
                    } else {
                        result.childEntry_ = childEntryBuilder_.build();
                    }
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry) {
                        return mergeFrom((org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry other) {
                    if (other == org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.getDefaultInstance())
                        return this;
                    if (!other.getName().isEmpty()) {
                        name_ = other.name_;
                        onChanged();
                    }
                    if (valueBuilder_ == null) {
                        if (!other.value_.isEmpty()) {
                            if (value_.isEmpty()) {
                                value_ = other.value_;
                                bitField0_ = (bitField0_ & ~0x00000001);
                            } else {
                                ensureValueIsMutable();
                                value_.addAll(other.value_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.value_.isEmpty()) {
                            if (valueBuilder_.isEmpty()) {
                                valueBuilder_.dispose();
                                valueBuilder_ = null;
                                value_ = other.value_;
                                bitField0_ = (bitField0_ & ~0x00000001);
                                valueBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getValueFieldBuilder() : null;
                            } else {
                                valueBuilder_.addAllMessages(other.value_);
                            }
                        }
                    }
                    if (childEntryBuilder_ == null) {
                        if (!other.childEntry_.isEmpty()) {
                            if (childEntry_.isEmpty()) {
                                childEntry_ = other.childEntry_;
                                bitField0_ = (bitField0_ & ~0x00000002);
                            } else {
                                ensureChildEntryIsMutable();
                                childEntry_.addAll(other.childEntry_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.childEntry_.isEmpty()) {
                            if (childEntryBuilder_.isEmpty()) {
                                childEntryBuilder_.dispose();
                                childEntryBuilder_ = null;
                                childEntry_ = other.childEntry_;
                                bitField0_ = (bitField0_ & ~0x00000002);
                                childEntryBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getChildEntryFieldBuilder() : null;
                            } else {
                                childEntryBuilder_.addAllMessages(other.childEntry_);
                            }
                        }
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted int bitField0_;

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object name_ = "";

                /**
                 * <code>string name = 1;</code>
                 * @return The name.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getName(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = name_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        name_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <code>string name = 1;</code>
                 * @return The bytes for name.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getNameBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = name_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        name_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>string name = 1;</code>
                 * @param value The name to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setName(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    name_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>string name = 1;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearName() {
                    name_ = getDefaultInstance().getName();
                    onChanged();
                    return this;
                }

                /**
                 * <code>string name = 1;</code>
                 * @param value The bytes for name to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setNameBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    name_ = value;
                    onChanged();
                    return this;
                }

                private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue> value_ = java.util.Collections.emptyList();

                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.valueBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                private void ensureValueIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (!((bitField0_ & 0x00000001) != 0)) {
                        value_ = new java.util.ArrayList<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue>(value_);
                        bitField0_ |= 0x00000001;
                    }
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValueOrBuilder> valueBuilder_;

                /**
                 * <pre>
                 * one of these two (or neither for an empty value)
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue> getValueList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (valueBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(value_);
                    } else {
                        return valueBuilder_.getMessageList();
                    }
                }

                /**
                 * <pre>
                 * one of these two (or neither for an empty value)
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
                 */
                public  @org.checkerframework.checker.tainting.qual.Tainted int getValueCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (valueBuilder_ == null) {
                        return value_.size();
                    } else {
                        return valueBuilder_.getCount();
                    }
                }

                /**
                 * <pre>
                 * one of these two (or neither for an empty value)
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue getValue(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (valueBuilder_ == null) {
                        return value_.get(index);
                    } else {
                        return valueBuilder_.getMessage(index);
                    }
                }

                /**
                 * <pre>
                 * one of these two (or neither for an empty value)
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setValue(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue value) {
                    if (valueBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureValueIsMutable();
                        value_.set(index, value);
                        onChanged();
                    } else {
                        valueBuilder_.setMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * one of these two (or neither for an empty value)
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setValue(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue.Builder builderForValue) {
                    if (valueBuilder_ == null) {
                        ensureValueIsMutable();
                        value_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        valueBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <pre>
                 * one of these two (or neither for an empty value)
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addValue(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue value) {
                    if (valueBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureValueIsMutable();
                        value_.add(value);
                        onChanged();
                    } else {
                        valueBuilder_.addMessage(value);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * one of these two (or neither for an empty value)
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addValue(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue value) {
                    if (valueBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureValueIsMutable();
                        value_.add(index, value);
                        onChanged();
                    } else {
                        valueBuilder_.addMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * one of these two (or neither for an empty value)
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addValue(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue.Builder builderForValue) {
                    if (valueBuilder_ == null) {
                        ensureValueIsMutable();
                        value_.add(builderForValue.build());
                        onChanged();
                    } else {
                        valueBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <pre>
                 * one of these two (or neither for an empty value)
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addValue(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue.Builder builderForValue) {
                    if (valueBuilder_ == null) {
                        ensureValueIsMutable();
                        value_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        valueBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <pre>
                 * one of these two (or neither for an empty value)
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllValue(java.lang.Iterable<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue> values) {
                    if (valueBuilder_ == null) {
                        ensureValueIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, value_);
                        onChanged();
                    } else {
                        valueBuilder_.addAllMessages(values);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * one of these two (or neither for an empty value)
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearValue() {
                    if (valueBuilder_ == null) {
                        value_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000001);
                        onChanged();
                    } else {
                        valueBuilder_.clear();
                    }
                    return this;
                }

                /**
                 * <pre>
                 * one of these two (or neither for an empty value)
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder removeValue(int index) {
                    if (valueBuilder_ == null) {
                        ensureValueIsMutable();
                        value_.remove(index);
                        onChanged();
                    } else {
                        valueBuilder_.remove(index);
                    }
                    return this;
                }

                /**
                 * <pre>
                 * one of these two (or neither for an empty value)
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue.@org.checkerframework.checker.tainting.qual.Tainted Builder getValueBuilder(int index) {
                    return getValueFieldBuilder().getBuilder(index);
                }

                /**
                 * <pre>
                 * one of these two (or neither for an empty value)
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValueOrBuilder getValueOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (valueBuilder_ == null) {
                        return value_.get(index);
                    } else {
                        return valueBuilder_.getMessageOrBuilder(index);
                    }
                }

                /**
                 * <pre>
                 * one of these two (or neither for an empty value)
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValueOrBuilder> getValueOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (valueBuilder_ != null) {
                        return valueBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(value_);
                    }
                }

                /**
                 * <pre>
                 * one of these two (or neither for an empty value)
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue.@org.checkerframework.checker.tainting.qual.Tainted Builder addValueBuilder() {
                    return getValueFieldBuilder().addBuilder(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue.getDefaultInstance());
                }

                /**
                 * <pre>
                 * one of these two (or neither for an empty value)
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue.@org.checkerframework.checker.tainting.qual.Tainted Builder addValueBuilder(int index) {
                    return getValueFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue.getDefaultInstance());
                }

                /**
                 * <pre>
                 * one of these two (or neither for an empty value)
                 * </pre>
                 *
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailValue value = 2;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue.Builder> getValueBuilderList() {
                    return getValueFieldBuilder().getBuilderList();
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValueOrBuilder> getValueFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (valueBuilder_ == null) {
                        valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValueOrBuilder>(value_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
                        value_ = null;
                    }
                    return valueBuilder_;
                }

                private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry> childEntry_ = java.util.Collections.emptyList();

                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.childEntryBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                private void ensureChildEntryIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (!((bitField0_ & 0x00000002) != 0)) {
                        childEntry_ = new java.util.ArrayList<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry>(childEntry_);
                        bitField0_ |= 0x00000002;
                    }
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntryOrBuilder> childEntryBuilder_;

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry> getChildEntryList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (childEntryBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(childEntry_);
                    } else {
                        return childEntryBuilder_.getMessageList();
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
                 */
                public  @org.checkerframework.checker.tainting.qual.Tainted int getChildEntryCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (childEntryBuilder_ == null) {
                        return childEntry_.size();
                    } else {
                        return childEntryBuilder_.getCount();
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry getChildEntry(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (childEntryBuilder_ == null) {
                        return childEntry_.get(index);
                    } else {
                        return childEntryBuilder_.getMessage(index);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setChildEntry(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry value) {
                    if (childEntryBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureChildEntryIsMutable();
                        childEntry_.set(index, value);
                        onChanged();
                    } else {
                        childEntryBuilder_.setMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setChildEntry(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder builderForValue) {
                    if (childEntryBuilder_ == null) {
                        ensureChildEntryIsMutable();
                        childEntry_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        childEntryBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addChildEntry(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry value) {
                    if (childEntryBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureChildEntryIsMutable();
                        childEntry_.add(value);
                        onChanged();
                    } else {
                        childEntryBuilder_.addMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addChildEntry(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry value) {
                    if (childEntryBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureChildEntryIsMutable();
                        childEntry_.add(index, value);
                        onChanged();
                    } else {
                        childEntryBuilder_.addMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addChildEntry(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder builderForValue) {
                    if (childEntryBuilder_ == null) {
                        ensureChildEntryIsMutable();
                        childEntry_.add(builderForValue.build());
                        onChanged();
                    } else {
                        childEntryBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addChildEntry(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder builderForValue) {
                    if (childEntryBuilder_ == null) {
                        ensureChildEntryIsMutable();
                        childEntry_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        childEntryBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllChildEntry(java.lang.Iterable<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry> values) {
                    if (childEntryBuilder_ == null) {
                        ensureChildEntryIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, childEntry_);
                        onChanged();
                    } else {
                        childEntryBuilder_.addAllMessages(values);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearChildEntry() {
                    if (childEntryBuilder_ == null) {
                        childEntry_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000002);
                        onChanged();
                    } else {
                        childEntryBuilder_.clear();
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder removeChildEntry(int index) {
                    if (childEntryBuilder_ == null) {
                        ensureChildEntryIsMutable();
                        childEntry_.remove(index);
                        onChanged();
                    } else {
                        childEntryBuilder_.remove(index);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.@org.checkerframework.checker.tainting.qual.Tainted Builder getChildEntryBuilder(int index) {
                    return getChildEntryFieldBuilder().getBuilder(index);
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntryOrBuilder getChildEntryOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (childEntryBuilder_ == null) {
                        return childEntry_.get(index);
                    } else {
                        return childEntryBuilder_.getMessageOrBuilder(index);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntryOrBuilder> getChildEntryOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (childEntryBuilder_ != null) {
                        return childEntryBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(childEntry_);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.@org.checkerframework.checker.tainting.qual.Tainted Builder addChildEntryBuilder() {
                    return getChildEntryFieldBuilder().addBuilder(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.getDefaultInstance());
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.@org.checkerframework.checker.tainting.qual.Tainted Builder addChildEntryBuilder(int index) {
                    return getChildEntryFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.getDefaultInstance());
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry child_entry = 3;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder> getChildEntryBuilderList() {
                    return getChildEntryFieldBuilder().getBuilderList();
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntryOrBuilder> getChildEntryFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (childEntryBuilder_ == null) {
                        childEntryBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntryOrBuilder>(childEntry_, ((bitField0_ & 0x00000002) != 0), getParentForChildren(), isClean());
                        childEntry_ = null;
                    }
                    return childEntryBuilder_;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Trace.DetailEntry)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Trace.DetailEntry)
            private static final org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<DetailEntry> PARSER = new com.google.protobuf.AbstractParser<DetailEntry>() {

                public DetailEntry parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new DetailEntry(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<DetailEntry> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<DetailEntry> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted DetailEntry this) {
                return DEFAULT_INSTANCE;
            }
        }

        public interface DetailValueOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Trace.DetailValue)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <code>string string = 1;</code>
             * @return Whether the string field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasString();

            /**
             * <code>string string = 1;</code>
             * @return The string.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getString();

            /**
             * <code>string string = 1;</code>
             * @return The bytes for string.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getStringBytes();

            /**
             * <code>double double = 2;</code>
             * @return Whether the double field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasDouble();

            /**
             * <code>double double = 2;</code>
             * @return The double.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted double getDouble();

            /**
             * <code>int64 long = 3;</code>
             * @return Whether the long field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasLong();

            /**
             * <code>int64 long = 3;</code>
             * @return The long.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted long getLong();

            /**
             * <code>bool boolean = 4;</code>
             * @return Whether the boolean field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasBoolean();

            /**
             * <code>bool boolean = 4;</code>
             * @return The boolean.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean getBoolean();

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue.@org.checkerframework.checker.tainting.qual.Tainted ValCase getValCase();
        }

        /**
         * Protobuf type {@code org_glowroot_wire_api_model.Trace.DetailValue}
         */
        public static final class DetailValue extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Trace.DetailValue)
        DetailValueOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use DetailValue.newBuilder() to construct.
            private DetailValue(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            private DetailValue() {
            }

            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new DetailValue();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this) {
                return this.unknownFields;
            }

            private DetailValue(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    valCase_ = 1;
                                    val_ = s;
                                    break;
                                }
                            case 17:
                                {
                                    val_ = input.readDouble();
                                    valCase_ = 2;
                                    break;
                                }
                            case 24:
                                {
                                    val_ = input.readInt64();
                                    valCase_ = 3;
                                    break;
                                }
                            case 32:
                                {
                                    val_ = input.readBool();
                                    valCase_ = 4;
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_DetailValue_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this) {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_DetailValue_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue.Builder.class);
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted int valCase_ = 0;

            private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object val_;

            public enum ValCase implements com.google.protobuf.Internal.EnumLite, com.google.protobuf.AbstractMessage.InternalOneOfEnum {

                STRING(1), DOUBLE(2), LONG(3), BOOLEAN(4), VAL_NOT_SET(0);

                private final  @org.checkerframework.checker.tainting.qual.Tainted int value;

                private ValCase( @org.checkerframework.checker.tainting.qual.Tainted int value) {
                    this.value = value;
                }

                /**
                 * @param value The number of the enum to look for.
                 * @return The enum associated with the given number.
                 * @deprecated Use {@link #forNumber(int)} instead.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public static @org.checkerframework.checker.tainting.qual.Tainted ValCase valueOf(int value) {
                    return forNumber(value);
                }

                @org.checkerframework.dataflow.qual.Pure
                public static @org.checkerframework.checker.tainting.qual.Tainted ValCase forNumber( @org.checkerframework.checker.tainting.qual.Tainted int value) {
                    switch(value) {
                        case 1:
                            return STRING;
                        case 2:
                            return DOUBLE;
                        case 3:
                            return LONG;
                        case 4:
                            return BOOLEAN;
                        case 0:
                            return VAL_NOT_SET;
                        default:
                            return null;
                    }
                }

                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted int getNumber(@org.checkerframework.checker.tainting.qual.Tainted ValCase this) {
                    return this.value;
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public @org.checkerframework.checker.tainting.qual.Tainted ValCase getValCase(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this) {
                return ValCase.forNumber(valCase_);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int STRING_FIELD_NUMBER = 1;

            /**
             * <code>string string = 1;</code>
             * @return Whether the string field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasString(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this) {
                return valCase_ == 1;
            }

            /**
             * <code>string string = 1;</code>
             * @return The string.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getString(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this) {
                java.lang.Object ref = "";
                if (valCase_ == 1) {
                    ref = val_;
                }
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (valCase_ == 1) {
                        val_ = s;
                    }
                    return s;
                }
            }

            /**
             * <code>string string = 1;</code>
             * @return The bytes for string.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getStringBytes(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this) {
                java.lang.Object ref = "";
                if (valCase_ == 1) {
                    ref = val_;
                }
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    if (valCase_ == 1) {
                        val_ = b;
                    }
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int DOUBLE_FIELD_NUMBER = 2;

            /**
             * <code>double double = 2;</code>
             * @return Whether the double field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasDouble(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this) {
                return valCase_ == 2;
            }

            /**
             * <code>double double = 2;</code>
             * @return The double.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted double getDouble(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this) {
                if (valCase_ == 2) {
                    return (java.lang.Double) val_;
                }
                return 0D;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int LONG_FIELD_NUMBER = 3;

            /**
             * <code>int64 long = 3;</code>
             * @return Whether the long field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasLong(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this) {
                return valCase_ == 3;
            }

            /**
             * <code>int64 long = 3;</code>
             * @return The long.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getLong(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this) {
                if (valCase_ == 3) {
                    return (java.lang.Long) val_;
                }
                return 0L;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int BOOLEAN_FIELD_NUMBER = 4;

            /**
             * <code>bool boolean = 4;</code>
             * @return Whether the boolean field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasBoolean(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this) {
                return valCase_ == 4;
            }

            /**
             * <code>bool boolean = 4;</code>
             * @return The boolean.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean getBoolean(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this) {
                if (valCase_ == 4) {
                    return (java.lang.Boolean) val_;
                }
                return false;
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                if (valCase_ == 1) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 1, val_);
                }
                if (valCase_ == 2) {
                    output.writeDouble(2, (double) ((java.lang.Double) val_));
                }
                if (valCase_ == 3) {
                    output.writeInt64(3, (long) ((java.lang.Long) val_));
                }
                if (valCase_ == 4) {
                    output.writeBool(4, (boolean) ((java.lang.Boolean) val_));
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if (valCase_ == 1) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, val_);
                }
                if (valCase_ == 2) {
                    size += com.google.protobuf.CodedOutputStream.computeDoubleSize(2, (double) ((java.lang.Double) val_));
                }
                if (valCase_ == 3) {
                    size += com.google.protobuf.CodedOutputStream.computeInt64Size(3, (long) ((java.lang.Long) val_));
                }
                if (valCase_ == 4) {
                    size += com.google.protobuf.CodedOutputStream.computeBoolSize(4, (boolean) ((java.lang.Boolean) val_));
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue other = (org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue) obj;
                if (!getValCase().equals(other.getValCase()))
                    return false;
                switch(valCase_) {
                    case 1:
                        if (!getString().equals(other.getString()))
                            return false;
                        break;
                    case 2:
                        if (java.lang.Double.doubleToLongBits(getDouble()) != java.lang.Double.doubleToLongBits(other.getDouble()))
                            return false;
                        break;
                    case 3:
                        if (getLong() != other.getLong())
                            return false;
                        break;
                    case 4:
                        if (getBoolean() != other.getBoolean())
                            return false;
                        break;
                    case 0:
                    default:
                }
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                switch(valCase_) {
                    case 1:
                        hash = (37 * hash) + STRING_FIELD_NUMBER;
                        hash = (53 * hash) + getString().hashCode();
                        break;
                    case 2:
                        hash = (37 * hash) + DOUBLE_FIELD_NUMBER;
                        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(java.lang.Double.doubleToLongBits(getDouble()));
                        break;
                    case 3:
                        hash = (37 * hash) + LONG_FIELD_NUMBER;
                        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getLong());
                        break;
                    case 4:
                        hash = (37 * hash) + BOOLEAN_FIELD_NUMBER;
                        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getBoolean());
                        break;
                    case 0:
                    default:
                }
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code org_glowroot_wire_api_model.Trace.DetailValue}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Trace.DetailValue)
            org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValueOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_DetailValue_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_DetailValue_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                @org.checkerframework.dataflow.qual.Pure
                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                    }
                }

                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.val_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    valCase_ = 0;
                    val_ = null;
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_DetailValue_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue result = new org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue(this);
                    if (valCase_ == 1) {
                        result.val_ = val_;
                    }
                    if (valCase_ == 2) {
                        result.val_ = val_;
                    }
                    if (valCase_ == 3) {
                        result.val_ = val_;
                    }
                    if (valCase_ == 4) {
                        result.val_ = val_;
                    }
                    result.valCase_ = valCase_;
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue) {
                        return mergeFrom((org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue other) {
                    if (other == org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue.getDefaultInstance())
                        return this;
                    switch(other.getValCase()) {
                        case STRING:
                            {
                                valCase_ = 1;
                                val_ = other.val_;
                                onChanged();
                                break;
                            }
                        case DOUBLE:
                            {
                                setDouble(other.getDouble());
                                break;
                            }
                        case LONG:
                            {
                                setLong(other.getLong());
                                break;
                            }
                        case BOOLEAN:
                            {
                                setBoolean(other.getBoolean());
                                break;
                            }
                        case VAL_NOT_SET:
                            {
                                break;
                            }
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted int valCase_ = 0;

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object val_;

                @org.checkerframework.dataflow.qual.Pure
                public @org.checkerframework.checker.tainting.qual.Tainted ValCase getValCase(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return ValCase.forNumber(valCase_);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearVal() {
                    valCase_ = 0;
                    val_ = null;
                    onChanged();
                    return this;
                }

                /**
                 * <code>string string = 1;</code>
                 * @return Whether the string field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasString(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return valCase_ == 1;
                }

                /**
                 * <code>string string = 1;</code>
                 * @return The string.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getString(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = "";
                    if (valCase_ == 1) {
                        ref = val_;
                    }
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        if (valCase_ == 1) {
                            val_ = s;
                        }
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <code>string string = 1;</code>
                 * @return The bytes for string.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getStringBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = "";
                    if (valCase_ == 1) {
                        ref = val_;
                    }
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        if (valCase_ == 1) {
                            val_ = b;
                        }
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>string string = 1;</code>
                 * @param value The string to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setString(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    valCase_ = 1;
                    val_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>string string = 1;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearString() {
                    if (valCase_ == 1) {
                        valCase_ = 0;
                        val_ = null;
                        onChanged();
                    }
                    return this;
                }

                /**
                 * <code>string string = 1;</code>
                 * @param value The bytes for string to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setStringBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    valCase_ = 1;
                    val_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>double double = 2;</code>
                 * @return Whether the double field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasDouble(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return valCase_ == 2;
                }

                /**
                 * <code>double double = 2;</code>
                 * @return The double.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted double getDouble(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (valCase_ == 2) {
                        return (java.lang.Double) val_;
                    }
                    return 0D;
                }

                /**
                 * <code>double double = 2;</code>
                 * @param value The double to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setDouble(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted double value) {
                    valCase_ = 2;
                    val_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>double double = 2;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearDouble() {
                    if (valCase_ == 2) {
                        valCase_ = 0;
                        val_ = null;
                        onChanged();
                    }
                    return this;
                }

                /**
                 * <code>int64 long = 3;</code>
                 * @return Whether the long field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasLong(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return valCase_ == 3;
                }

                /**
                 * <code>int64 long = 3;</code>
                 * @return The long.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted long getLong(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (valCase_ == 3) {
                        return (java.lang.Long) val_;
                    }
                    return 0L;
                }

                /**
                 * <code>int64 long = 3;</code>
                 * @param value The long to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setLong(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                    valCase_ = 3;
                    val_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>int64 long = 3;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearLong() {
                    if (valCase_ == 3) {
                        valCase_ = 0;
                        val_ = null;
                        onChanged();
                    }
                    return this;
                }

                /**
                 * <code>bool boolean = 4;</code>
                 * @return Whether the boolean field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasBoolean(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return valCase_ == 4;
                }

                /**
                 * <code>bool boolean = 4;</code>
                 * @return The boolean.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean getBoolean(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (valCase_ == 4) {
                        return (java.lang.Boolean) val_;
                    }
                    return false;
                }

                /**
                 * <code>bool boolean = 4;</code>
                 * @param value The boolean to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setBoolean(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted boolean value) {
                    valCase_ = 4;
                    val_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>bool boolean = 4;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearBoolean() {
                    if (valCase_ == 4) {
                        valCase_ = 0;
                        val_ = null;
                        onChanged();
                    }
                    return this;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Trace.DetailValue)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Trace.DetailValue)
            private static final org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailValue();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<DetailValue> PARSER = new com.google.protobuf.AbstractParser<DetailValue>() {

                public DetailValue parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new DetailValue(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<DetailValue> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<DetailValue> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailValue getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted DetailValue this) {
                return DEFAULT_INSTANCE;
            }
        }

        public interface ErrorOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Trace.Error)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <code>string message = 1;</code>
             * @return The message.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getMessage();

            /**
             * <code>string message = 1;</code>
             * @return The bytes for message.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getMessageBytes();

            /**
             * <code>.org_glowroot_wire_api_model.Throwable exception = 2;</code>
             * @return Whether the exception field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasException();

            /**
             * <code>.org_glowroot_wire_api_model.Throwable exception = 2;</code>
             * @return The exception.
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted Throwable getException();

            /**
             * <code>.org_glowroot_wire_api_model.Throwable exception = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted ThrowableOrBuilder getExceptionOrBuilder();
        }

        /**
         * Protobuf type {@code org_glowroot_wire_api_model.Trace.Error}
         */
        public static final class Error extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Trace.Error)
        ErrorOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use Error.newBuilder() to construct.
            private Error(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.message_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private Error() {
                message_ = "";
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.message_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted Error this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new Error();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Error this) {
                return this.unknownFields;
            }

            private Error(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    message_ = s;
                                    break;
                                }
                            case 18:
                                {
                                    org.glowroot.wire.api.model.Proto.Throwable.Builder subBuilder = null;
                                    if (exception_ != null) {
                                        subBuilder = exception_.toBuilder();
                                    }
                                    exception_ = input.readMessage(org.glowroot.wire.api.model.Proto.Throwable.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom(exception_);
                                        exception_ = subBuilder.buildPartial();
                                    }
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Error_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Error this) {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Error_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.Builder.class);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int MESSAGE_FIELD_NUMBER = 1;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object message_;

            /**
             * <code>string message = 1;</code>
             * @return The message.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getMessage(@org.checkerframework.checker.tainting.qual.Tainted Error this) {
                java.lang.Object ref = message_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    message_ = s;
                    return s;
                }
            }

            /**
             * <code>string message = 1;</code>
             * @return The bytes for message.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getMessageBytes(@org.checkerframework.checker.tainting.qual.Tainted Error this) {
                java.lang.Object ref = message_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    message_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int EXCEPTION_FIELD_NUMBER = 2;

            private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted Throwable exception_;

            /**
             * <code>.org_glowroot_wire_api_model.Throwable exception = 2;</code>
             * @return Whether the exception field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasException(@org.checkerframework.checker.tainting.qual.Tainted Error this) {
                return exception_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Throwable exception = 2;</code>
             * @return The exception.
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted Throwable getException(@org.checkerframework.checker.tainting.qual.Tainted Error this) {
                return exception_ == null ? org.glowroot.wire.api.model.Proto.Throwable.getDefaultInstance() : exception_;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Throwable exception = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted ThrowableOrBuilder getExceptionOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Error this) {
                return getException();
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Error this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted Error this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 1, message_);
                }
                if (exception_ != null) {
                    output.writeMessage(2, getException());
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted Error this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, message_);
                }
                if (exception_ != null) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getException());
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted Error this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.Error)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.TraceOuterClass.Trace.Error other = (org.glowroot.wire.api.model.TraceOuterClass.Trace.Error) obj;
                if (!getMessage().equals(other.getMessage()))
                    return false;
                if (hasException() != other.hasException())
                    return false;
                if (hasException()) {
                    if (!getException().equals(other.getException()))
                        return false;
                }
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted Error this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
                hash = (53 * hash) + getMessage().hashCode();
                if (hasException()) {
                    hash = (37 * hash) + EXCEPTION_FIELD_NUMBER;
                    hash = (53 * hash) + getException().hashCode();
                }
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted Error this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted Error this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted Error this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code org_glowroot_wire_api_model.Trace.Error}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Trace.Error)
            org.glowroot.wire.api.model.TraceOuterClass.Trace.ErrorOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Error_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Error_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                @org.checkerframework.dataflow.qual.Pure
                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                    }
                }

                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.exceptionBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.exception_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.message_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    message_ = "";
                    if (exceptionBuilder_ == null) {
                        exception_ = null;
                    } else {
                        exception_ = null;
                        exceptionBuilder_ = null;
                    }
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Error_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.Error result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.Error result = new org.glowroot.wire.api.model.TraceOuterClass.Trace.Error(this);
                    result.message_ = message_;
                    if (exceptionBuilder_ == null) {
                        result.exception_ = exception_;
                    } else {
                        result.exception_ = exceptionBuilder_.build();
                    }
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.Error) {
                        return mergeFrom((org.glowroot.wire.api.model.TraceOuterClass.Trace.Error) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error other) {
                    if (other == org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.getDefaultInstance())
                        return this;
                    if (!other.getMessage().isEmpty()) {
                        message_ = other.message_;
                        onChanged();
                    }
                    if (other.hasException()) {
                        mergeException(other.getException());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.Error parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.TraceOuterClass.Trace.Error) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object message_ = "";

                /**
                 * <code>string message = 1;</code>
                 * @return The message.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getMessage(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = message_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        message_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <code>string message = 1;</code>
                 * @return The bytes for message.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getMessageBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = message_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        message_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>string message = 1;</code>
                 * @param value The message to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setMessage(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    message_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>string message = 1;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearMessage() {
                    message_ = getDefaultInstance().getMessage();
                    onChanged();
                    return this;
                }

                /**
                 * <code>string message = 1;</code>
                 * @param value The bytes for message to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setMessageBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    message_ = value;
                    onChanged();
                    return this;
                }

                private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted Throwable exception_;

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.Throwable, org.glowroot.wire.api.model.Proto.Throwable.Builder, org.glowroot.wire.api.model.Proto.ThrowableOrBuilder> exceptionBuilder_;

                /**
                 * <code>.org_glowroot_wire_api_model.Throwable exception = 2;</code>
                 * @return Whether the exception field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasException(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return exceptionBuilder_ != null || exception_ != null;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Throwable exception = 2;</code>
                 * @return The exception.
                 */
                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.exceptionBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted Throwable getException(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (exceptionBuilder_ == null) {
                        return exception_ == null ? org.glowroot.wire.api.model.Proto.Throwable.getDefaultInstance() : exception_;
                    } else {
                        return exceptionBuilder_.getMessage();
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Throwable exception = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setException(org.glowroot.wire.api.model.Proto.Throwable value) {
                    if (exceptionBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        exception_ = value;
                        onChanged();
                    } else {
                        exceptionBuilder_.setMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Throwable exception = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setException(org.glowroot.wire.api.model.Proto.Throwable.Builder builderForValue) {
                    if (exceptionBuilder_ == null) {
                        exception_ = builderForValue.build();
                        onChanged();
                    } else {
                        exceptionBuilder_.setMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Throwable exception = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeException(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted Throwable value) {
                    if (exceptionBuilder_ == null) {
                        if (exception_ != null) {
                            exception_ = org.glowroot.wire.api.model.Proto.Throwable.newBuilder(exception_).mergeFrom(value).buildPartial();
                        } else {
                            exception_ = value;
                        }
                        onChanged();
                    } else {
                        exceptionBuilder_.mergeFrom(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Throwable exception = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearException() {
                    if (exceptionBuilder_ == null) {
                        exception_ = null;
                        onChanged();
                    } else {
                        exception_ = null;
                        exceptionBuilder_ = null;
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Throwable exception = 2;</code>
                 */
                public org.glowroot.wire.api.model.Proto.Throwable.@org.checkerframework.checker.tainting.qual.Tainted Builder getExceptionBuilder() {
                    onChanged();
                    return getExceptionFieldBuilder().getBuilder();
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Throwable exception = 2;</code>
                 */
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted ThrowableOrBuilder getExceptionOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (exceptionBuilder_ != null) {
                        return exceptionBuilder_.getMessageOrBuilder();
                    } else {
                        return exception_ == null ? org.glowroot.wire.api.model.Proto.Throwable.getDefaultInstance() : exception_;
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Throwable exception = 2;</code>
                 */
                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.Throwable, org.glowroot.wire.api.model.Proto.Throwable.Builder, org.glowroot.wire.api.model.Proto.ThrowableOrBuilder> getExceptionFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (exceptionBuilder_ == null) {
                        exceptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.Throwable, org.glowroot.wire.api.model.Proto.Throwable.Builder, org.glowroot.wire.api.model.Proto.ThrowableOrBuilder>(getException(), getParentForChildren(), isClean());
                        exception_ = null;
                    }
                    return exceptionBuilder_;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Trace.Error)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Trace.Error)
            private static final org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.TraceOuterClass.Trace.Error();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Error> PARSER = new com.google.protobuf.AbstractParser<Error>() {

                public Error parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new Error(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Error> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Error> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted Error this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Error this) {
                return DEFAULT_INSTANCE;
            }
        }

        public interface TimerOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Trace.Timer)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <code>string name = 1;</code>
             * @return The name.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getName();

            /**
             * <code>string name = 1;</code>
             * @return The bytes for name.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getNameBytes();

            /**
             * <code>bool extended = 2;</code>
             * @return The extended.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean getExtended();

            /**
             * <code>int64 total_nanos = 3;</code>
             * @return The totalNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted long getTotalNanos();

            /**
             * <code>int64 count = 4;</code>
             * @return The count.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted long getCount();

            /**
             * <pre>
             * whether timer was active at the time of a partial trace capture
             * </pre>
             *
             * <code>bool active = 5;</code>
             * @return The active.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean getActive();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer> getChildTimerList();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer getChildTimer(int index);

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted int getChildTimerCount();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.TimerOrBuilder> getChildTimerOrBuilderList();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getChildTimerOrBuilder(int index);
        }

        /**
         * Protobuf type {@code org_glowroot_wire_api_model.Trace.Timer}
         */
        public static final class Timer extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Trace.Timer)
        TimerOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use Timer.newBuilder() to construct.
            private Timer(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.name_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private Timer() {
                name_ = "";
                childTimer_ = java.util.Collections.emptyList();
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.name_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted Timer this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new Timer();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return this.unknownFields;
            }

            private Timer(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    name_ = s;
                                    break;
                                }
                            case 16:
                                {
                                    extended_ = input.readBool();
                                    break;
                                }
                            case 24:
                                {
                                    totalNanos_ = input.readInt64();
                                    break;
                                }
                            case 32:
                                {
                                    count_ = input.readInt64();
                                    break;
                                }
                            case 40:
                                {
                                    active_ = input.readBool();
                                    break;
                                }
                            case 50:
                                {
                                    if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                        childTimer_ = new java.util.ArrayList<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer>();
                                        mutable_bitField0_ |= 0x00000001;
                                    }
                                    childTimer_.add(input.readMessage(org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.parser(), extensionRegistry));
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    if (((mutable_bitField0_ & 0x00000001) != 0)) {
                        childTimer_ = java.util.Collections.unmodifiableList(childTimer_);
                    }
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Timer_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Timer_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder.class);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int NAME_FIELD_NUMBER = 1;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object name_;

            /**
             * <code>string name = 1;</code>
             * @return The name.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getName(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                java.lang.Object ref = name_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    name_ = s;
                    return s;
                }
            }

            /**
             * <code>string name = 1;</code>
             * @return The bytes for name.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getNameBytes(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                java.lang.Object ref = name_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int EXTENDED_FIELD_NUMBER = 2;

            private  @org.checkerframework.checker.tainting.qual.Tainted boolean extended_;

            /**
             * <code>bool extended = 2;</code>
             * @return The extended.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean getExtended(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return extended_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TOTAL_NANOS_FIELD_NUMBER = 3;

            private  @org.checkerframework.checker.tainting.qual.Tainted long totalNanos_;

            /**
             * <code>int64 total_nanos = 3;</code>
             * @return The totalNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getTotalNanos(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return totalNanos_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int COUNT_FIELD_NUMBER = 4;

            private  @org.checkerframework.checker.tainting.qual.Tainted long count_;

            /**
             * <code>int64 count = 4;</code>
             * @return The count.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getCount(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return count_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int ACTIVE_FIELD_NUMBER = 5;

            private  @org.checkerframework.checker.tainting.qual.Tainted boolean active_;

            /**
             * <pre>
             * whether timer was active at the time of a partial trace capture
             * </pre>
             *
             * <code>bool active = 5;</code>
             * @return The active.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean getActive(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return active_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int CHILD_TIMER_FIELD_NUMBER = 6;

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer> childTimer_;

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer> getChildTimerList(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return childTimer_;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.TimerOrBuilder> getChildTimerOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return childTimer_;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted int getChildTimerCount(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return childTimer_.size();
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer getChildTimer(@org.checkerframework.checker.tainting.qual.Tainted Timer this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return childTimer_.get(index);
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getChildTimerOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Timer this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return childTimer_.get(index);
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted Timer this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
                }
                if (extended_ != false) {
                    output.writeBool(2, extended_);
                }
                if (totalNanos_ != 0L) {
                    output.writeInt64(3, totalNanos_);
                }
                if (count_ != 0L) {
                    output.writeInt64(4, count_);
                }
                if (active_ != false) {
                    output.writeBool(5, active_);
                }
                for (int i = 0; i < childTimer_.size(); i++) {
                    output.writeMessage(6, childTimer_.get(i));
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
                }
                if (extended_ != false) {
                    size += com.google.protobuf.CodedOutputStream.computeBoolSize(2, extended_);
                }
                if (totalNanos_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream.computeInt64Size(3, totalNanos_);
                }
                if (count_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream.computeInt64Size(4, count_);
                }
                if (active_ != false) {
                    size += com.google.protobuf.CodedOutputStream.computeBoolSize(5, active_);
                }
                for (int i = 0; i < childTimer_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, childTimer_.get(i));
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted Timer this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer other = (org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer) obj;
                if (!getName().equals(other.getName()))
                    return false;
                if (getExtended() != other.getExtended())
                    return false;
                if (getTotalNanos() != other.getTotalNanos())
                    return false;
                if (getCount() != other.getCount())
                    return false;
                if (getActive() != other.getActive())
                    return false;
                if (!getChildTimerList().equals(other.getChildTimerList()))
                    return false;
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + NAME_FIELD_NUMBER;
                hash = (53 * hash) + getName().hashCode();
                hash = (37 * hash) + EXTENDED_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getExtended());
                hash = (37 * hash) + TOTAL_NANOS_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getTotalNanos());
                hash = (37 * hash) + COUNT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getCount());
                hash = (37 * hash) + ACTIVE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getActive());
                if (getChildTimerCount() > 0) {
                    hash = (37 * hash) + CHILD_TIMER_FIELD_NUMBER;
                    hash = (53 * hash) + getChildTimerList().hashCode();
                }
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted Timer this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code org_glowroot_wire_api_model.Trace.Timer}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Trace.Timer)
            org.glowroot.wire.api.model.TraceOuterClass.Trace.TimerOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Timer_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Timer_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                        getChildTimerFieldBuilder();
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    name_ = "";
                    extended_ = false;
                    totalNanos_ = 0L;
                    count_ = 0L;
                    active_ = false;
                    if (childTimerBuilder_ == null) {
                        childTimer_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        childTimerBuilder_.clear();
                    }
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Timer_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer result = new org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer(this);
                    int from_bitField0_ = bitField0_;
                    result.name_ = name_;
                    result.extended_ = extended_;
                    result.totalNanos_ = totalNanos_;
                    result.count_ = count_;
                    result.active_ = active_;
                    if (childTimerBuilder_ == null) {
                        if (((bitField0_ & 0x00000001) != 0)) {
                            childTimer_ = java.util.Collections.unmodifiableList(childTimer_);
                            bitField0_ = (bitField0_ & ~0x00000001);
                        }
                        result.childTimer_ = childTimer_;
                    } else {
                        result.childTimer_ = childTimerBuilder_.build();
                    }
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer) {
                        return mergeFrom((org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer other) {
                    if (other == org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.getDefaultInstance())
                        return this;
                    if (!other.getName().isEmpty()) {
                        name_ = other.name_;
                        onChanged();
                    }
                    if (other.getExtended() != false) {
                        setExtended(other.getExtended());
                    }
                    if (other.getTotalNanos() != 0L) {
                        setTotalNanos(other.getTotalNanos());
                    }
                    if (other.getCount() != 0L) {
                        setCount(other.getCount());
                    }
                    if (other.getActive() != false) {
                        setActive(other.getActive());
                    }
                    if (childTimerBuilder_ == null) {
                        if (!other.childTimer_.isEmpty()) {
                            if (childTimer_.isEmpty()) {
                                childTimer_ = other.childTimer_;
                                bitField0_ = (bitField0_ & ~0x00000001);
                            } else {
                                ensureChildTimerIsMutable();
                                childTimer_.addAll(other.childTimer_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.childTimer_.isEmpty()) {
                            if (childTimerBuilder_.isEmpty()) {
                                childTimerBuilder_.dispose();
                                childTimerBuilder_ = null;
                                childTimer_ = other.childTimer_;
                                bitField0_ = (bitField0_ & ~0x00000001);
                                childTimerBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getChildTimerFieldBuilder() : null;
                            } else {
                                childTimerBuilder_.addAllMessages(other.childTimer_);
                            }
                        }
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted int bitField0_;

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object name_ = "";

                /**
                 * <code>string name = 1;</code>
                 * @return The name.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getName(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = name_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        name_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <code>string name = 1;</code>
                 * @return The bytes for name.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getNameBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = name_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        name_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>string name = 1;</code>
                 * @param value The name to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setName(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    name_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>string name = 1;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearName() {
                    name_ = getDefaultInstance().getName();
                    onChanged();
                    return this;
                }

                /**
                 * <code>string name = 1;</code>
                 * @param value The bytes for name to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setNameBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    name_ = value;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted boolean extended_;

                /**
                 * <code>bool extended = 2;</code>
                 * @return The extended.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean getExtended(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return extended_;
                }

                /**
                 * <code>bool extended = 2;</code>
                 * @param value The extended to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setExtended(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted boolean value) {
                    extended_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>bool extended = 2;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearExtended() {
                    extended_ = false;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted long totalNanos_;

                /**
                 * <code>int64 total_nanos = 3;</code>
                 * @return The totalNanos.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted long getTotalNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return totalNanos_;
                }

                /**
                 * <code>int64 total_nanos = 3;</code>
                 * @param value The totalNanos to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                    totalNanos_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>int64 total_nanos = 3;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTotalNanos() {
                    totalNanos_ = 0L;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted long count_;

                /**
                 * <code>int64 count = 4;</code>
                 * @return The count.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted long getCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return count_;
                }

                /**
                 * <code>int64 count = 4;</code>
                 * @param value The count to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                    count_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>int64 count = 4;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearCount() {
                    count_ = 0L;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted boolean active_;

                /**
                 * <pre>
                 * whether timer was active at the time of a partial trace capture
                 * </pre>
                 *
                 * <code>bool active = 5;</code>
                 * @return The active.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean getActive(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return active_;
                }

                /**
                 * <pre>
                 * whether timer was active at the time of a partial trace capture
                 * </pre>
                 *
                 * <code>bool active = 5;</code>
                 * @param value The active to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setActive(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted boolean value) {
                    active_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * whether timer was active at the time of a partial trace capture
                 * </pre>
                 *
                 * <code>bool active = 5;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearActive() {
                    active_ = false;
                    onChanged();
                    return this;
                }

                private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer> childTimer_ = java.util.Collections.emptyList();

                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.childTimerBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                private void ensureChildTimerIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (!((bitField0_ & 0x00000001) != 0)) {
                        childTimer_ = new java.util.ArrayList<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer>(childTimer_);
                        bitField0_ |= 0x00000001;
                    }
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.TimerOrBuilder> childTimerBuilder_;

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer> getChildTimerList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (childTimerBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(childTimer_);
                    } else {
                        return childTimerBuilder_.getMessageList();
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
                 */
                public  @org.checkerframework.checker.tainting.qual.Tainted int getChildTimerCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (childTimerBuilder_ == null) {
                        return childTimer_.size();
                    } else {
                        return childTimerBuilder_.getCount();
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer getChildTimer(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (childTimerBuilder_ == null) {
                        return childTimer_.get(index);
                    } else {
                        return childTimerBuilder_.getMessage(index);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setChildTimer(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer value) {
                    if (childTimerBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureChildTimerIsMutable();
                        childTimer_.set(index, value);
                        onChanged();
                    } else {
                        childTimerBuilder_.setMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setChildTimer(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder builderForValue) {
                    if (childTimerBuilder_ == null) {
                        ensureChildTimerIsMutable();
                        childTimer_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        childTimerBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addChildTimer(org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer value) {
                    if (childTimerBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureChildTimerIsMutable();
                        childTimer_.add(value);
                        onChanged();
                    } else {
                        childTimerBuilder_.addMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addChildTimer(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer value) {
                    if (childTimerBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureChildTimerIsMutable();
                        childTimer_.add(index, value);
                        onChanged();
                    } else {
                        childTimerBuilder_.addMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addChildTimer(org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder builderForValue) {
                    if (childTimerBuilder_ == null) {
                        ensureChildTimerIsMutable();
                        childTimer_.add(builderForValue.build());
                        onChanged();
                    } else {
                        childTimerBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addChildTimer(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder builderForValue) {
                    if (childTimerBuilder_ == null) {
                        ensureChildTimerIsMutable();
                        childTimer_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        childTimerBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllChildTimer(java.lang.Iterable<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer> values) {
                    if (childTimerBuilder_ == null) {
                        ensureChildTimerIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, childTimer_);
                        onChanged();
                    } else {
                        childTimerBuilder_.addAllMessages(values);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearChildTimer() {
                    if (childTimerBuilder_ == null) {
                        childTimer_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000001);
                        onChanged();
                    } else {
                        childTimerBuilder_.clear();
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder removeChildTimer(int index) {
                    if (childTimerBuilder_ == null) {
                        ensureChildTimerIsMutable();
                        childTimer_.remove(index);
                        onChanged();
                    } else {
                        childTimerBuilder_.remove(index);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.@org.checkerframework.checker.tainting.qual.Tainted Builder getChildTimerBuilder(int index) {
                    return getChildTimerFieldBuilder().getBuilder(index);
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getChildTimerOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (childTimerBuilder_ == null) {
                        return childTimer_.get(index);
                    } else {
                        return childTimerBuilder_.getMessageOrBuilder(index);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.TimerOrBuilder> getChildTimerOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (childTimerBuilder_ != null) {
                        return childTimerBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(childTimer_);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.@org.checkerframework.checker.tainting.qual.Tainted Builder addChildTimerBuilder() {
                    return getChildTimerFieldBuilder().addBuilder(org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.getDefaultInstance());
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.@org.checkerframework.checker.tainting.qual.Tainted Builder addChildTimerBuilder(int index) {
                    return getChildTimerFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.getDefaultInstance());
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.Timer child_timer = 6;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder> getChildTimerBuilderList() {
                    return getChildTimerFieldBuilder().getBuilderList();
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.TimerOrBuilder> getChildTimerFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (childTimerBuilder_ == null) {
                        childTimerBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer, org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.TimerOrBuilder>(childTimer_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
                        childTimer_ = null;
                    }
                    return childTimerBuilder_;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Trace.Timer)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Trace.Timer)
            private static final org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.TraceOuterClass.Trace.Timer();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Timer> PARSER = new com.google.protobuf.AbstractParser<Timer>() {

                public Timer parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new Timer(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Timer> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Timer> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Timer getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return DEFAULT_INSTANCE;
            }
        }

        public interface OldThreadStatsOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Trace.OldThreadStats)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 cpu_nanos = 1;</code>
             * @return Whether the cpuNanos field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasCpuNanos();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 cpu_nanos = 1;</code>
             * @return The cpuNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 getCpuNanos();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 cpu_nanos = 1;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64OrBuilder getCpuNanosOrBuilder();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 blocked_nanos = 2;</code>
             * @return Whether the blockedNanos field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasBlockedNanos();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 blocked_nanos = 2;</code>
             * @return The blockedNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 getBlockedNanos();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 blocked_nanos = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64OrBuilder getBlockedNanosOrBuilder();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 waited_nanos = 3;</code>
             * @return Whether the waitedNanos field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasWaitedNanos();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 waited_nanos = 3;</code>
             * @return The waitedNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 getWaitedNanos();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 waited_nanos = 3;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64OrBuilder getWaitedNanosOrBuilder();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 allocated_bytes = 4;</code>
             * @return Whether the allocatedBytes field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasAllocatedBytes();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 allocated_bytes = 4;</code>
             * @return The allocatedBytes.
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 getAllocatedBytes();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 allocated_bytes = 4;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64OrBuilder getAllocatedBytesOrBuilder();
        }

        /**
         * <pre>
         * deprecated in 0.10.9
         * </pre>
         *
         * Protobuf type {@code org_glowroot_wire_api_model.Trace.OldThreadStats}
         */
        public static final class OldThreadStats extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Trace.OldThreadStats)
        OldThreadStatsOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use OldThreadStats.newBuilder() to construct.
            private OldThreadStats(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            private OldThreadStats() {
            }

            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new OldThreadStats();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return this.unknownFields;
            }

            private OldThreadStats(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    org.glowroot.wire.api.model.Proto.OptionalInt64.Builder subBuilder = null;
                                    if (cpuNanos_ != null) {
                                        subBuilder = cpuNanos_.toBuilder();
                                    }
                                    cpuNanos_ = input.readMessage(org.glowroot.wire.api.model.Proto.OptionalInt64.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom(cpuNanos_);
                                        cpuNanos_ = subBuilder.buildPartial();
                                    }
                                    break;
                                }
                            case 18:
                                {
                                    org.glowroot.wire.api.model.Proto.OptionalInt64.Builder subBuilder = null;
                                    if (blockedNanos_ != null) {
                                        subBuilder = blockedNanos_.toBuilder();
                                    }
                                    blockedNanos_ = input.readMessage(org.glowroot.wire.api.model.Proto.OptionalInt64.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom(blockedNanos_);
                                        blockedNanos_ = subBuilder.buildPartial();
                                    }
                                    break;
                                }
                            case 26:
                                {
                                    org.glowroot.wire.api.model.Proto.OptionalInt64.Builder subBuilder = null;
                                    if (waitedNanos_ != null) {
                                        subBuilder = waitedNanos_.toBuilder();
                                    }
                                    waitedNanos_ = input.readMessage(org.glowroot.wire.api.model.Proto.OptionalInt64.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom(waitedNanos_);
                                        waitedNanos_ = subBuilder.buildPartial();
                                    }
                                    break;
                                }
                            case 34:
                                {
                                    org.glowroot.wire.api.model.Proto.OptionalInt64.Builder subBuilder = null;
                                    if (allocatedBytes_ != null) {
                                        subBuilder = allocatedBytes_.toBuilder();
                                    }
                                    allocatedBytes_ = input.readMessage(org.glowroot.wire.api.model.Proto.OptionalInt64.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom(allocatedBytes_);
                                        allocatedBytes_ = subBuilder.buildPartial();
                                    }
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_OldThreadStats_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_OldThreadStats_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.Builder.class);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int CPU_NANOS_FIELD_NUMBER = 1;

            private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 cpuNanos_;

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 cpu_nanos = 1;</code>
             * @return Whether the cpuNanos field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasCpuNanos(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return cpuNanos_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 cpu_nanos = 1;</code>
             * @return The cpuNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 getCpuNanos(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return cpuNanos_ == null ? org.glowroot.wire.api.model.Proto.OptionalInt64.getDefaultInstance() : cpuNanos_;
            }

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 cpu_nanos = 1;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64OrBuilder getCpuNanosOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return getCpuNanos();
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int BLOCKED_NANOS_FIELD_NUMBER = 2;

            private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 blockedNanos_;

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 blocked_nanos = 2;</code>
             * @return Whether the blockedNanos field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasBlockedNanos(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return blockedNanos_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 blocked_nanos = 2;</code>
             * @return The blockedNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 getBlockedNanos(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return blockedNanos_ == null ? org.glowroot.wire.api.model.Proto.OptionalInt64.getDefaultInstance() : blockedNanos_;
            }

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 blocked_nanos = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64OrBuilder getBlockedNanosOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return getBlockedNanos();
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int WAITED_NANOS_FIELD_NUMBER = 3;

            private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 waitedNanos_;

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 waited_nanos = 3;</code>
             * @return Whether the waitedNanos field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasWaitedNanos(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return waitedNanos_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 waited_nanos = 3;</code>
             * @return The waitedNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 getWaitedNanos(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return waitedNanos_ == null ? org.glowroot.wire.api.model.Proto.OptionalInt64.getDefaultInstance() : waitedNanos_;
            }

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 waited_nanos = 3;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64OrBuilder getWaitedNanosOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return getWaitedNanos();
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int ALLOCATED_BYTES_FIELD_NUMBER = 4;

            private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 allocatedBytes_;

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 allocated_bytes = 4;</code>
             * @return Whether the allocatedBytes field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasAllocatedBytes(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return allocatedBytes_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 allocated_bytes = 4;</code>
             * @return The allocatedBytes.
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 getAllocatedBytes(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return allocatedBytes_ == null ? org.glowroot.wire.api.model.Proto.OptionalInt64.getDefaultInstance() : allocatedBytes_;
            }

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 allocated_bytes = 4;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64OrBuilder getAllocatedBytesOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return getAllocatedBytes();
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                if (cpuNanos_ != null) {
                    output.writeMessage(1, getCpuNanos());
                }
                if (blockedNanos_ != null) {
                    output.writeMessage(2, getBlockedNanos());
                }
                if (waitedNanos_ != null) {
                    output.writeMessage(3, getWaitedNanos());
                }
                if (allocatedBytes_ != null) {
                    output.writeMessage(4, getAllocatedBytes());
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if (cpuNanos_ != null) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getCpuNanos());
                }
                if (blockedNanos_ != null) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getBlockedNanos());
                }
                if (waitedNanos_ != null) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getWaitedNanos());
                }
                if (allocatedBytes_ != null) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, getAllocatedBytes());
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats other = (org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats) obj;
                if (hasCpuNanos() != other.hasCpuNanos())
                    return false;
                if (hasCpuNanos()) {
                    if (!getCpuNanos().equals(other.getCpuNanos()))
                        return false;
                }
                if (hasBlockedNanos() != other.hasBlockedNanos())
                    return false;
                if (hasBlockedNanos()) {
                    if (!getBlockedNanos().equals(other.getBlockedNanos()))
                        return false;
                }
                if (hasWaitedNanos() != other.hasWaitedNanos())
                    return false;
                if (hasWaitedNanos()) {
                    if (!getWaitedNanos().equals(other.getWaitedNanos()))
                        return false;
                }
                if (hasAllocatedBytes() != other.hasAllocatedBytes())
                    return false;
                if (hasAllocatedBytes()) {
                    if (!getAllocatedBytes().equals(other.getAllocatedBytes()))
                        return false;
                }
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                if (hasCpuNanos()) {
                    hash = (37 * hash) + CPU_NANOS_FIELD_NUMBER;
                    hash = (53 * hash) + getCpuNanos().hashCode();
                }
                if (hasBlockedNanos()) {
                    hash = (37 * hash) + BLOCKED_NANOS_FIELD_NUMBER;
                    hash = (53 * hash) + getBlockedNanos().hashCode();
                }
                if (hasWaitedNanos()) {
                    hash = (37 * hash) + WAITED_NANOS_FIELD_NUMBER;
                    hash = (53 * hash) + getWaitedNanos().hashCode();
                }
                if (hasAllocatedBytes()) {
                    hash = (37 * hash) + ALLOCATED_BYTES_FIELD_NUMBER;
                    hash = (53 * hash) + getAllocatedBytes().hashCode();
                }
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * Protobuf type {@code org_glowroot_wire_api_model.Trace.OldThreadStats}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Trace.OldThreadStats)
            org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStatsOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_OldThreadStats_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_OldThreadStats_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                @org.checkerframework.dataflow.qual.Pure
                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                    }
                }

                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.allocatedBytesBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.allocatedBytes_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.blockedNanosBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.blockedNanos_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.cpuNanosBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.cpuNanos_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.waitedNanosBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.waitedNanos_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    if (cpuNanosBuilder_ == null) {
                        cpuNanos_ = null;
                    } else {
                        cpuNanos_ = null;
                        cpuNanosBuilder_ = null;
                    }
                    if (blockedNanosBuilder_ == null) {
                        blockedNanos_ = null;
                    } else {
                        blockedNanos_ = null;
                        blockedNanosBuilder_ = null;
                    }
                    if (waitedNanosBuilder_ == null) {
                        waitedNanos_ = null;
                    } else {
                        waitedNanos_ = null;
                        waitedNanosBuilder_ = null;
                    }
                    if (allocatedBytesBuilder_ == null) {
                        allocatedBytes_ = null;
                    } else {
                        allocatedBytes_ = null;
                        allocatedBytesBuilder_ = null;
                    }
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_OldThreadStats_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats result = new org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats(this);
                    if (cpuNanosBuilder_ == null) {
                        result.cpuNanos_ = cpuNanos_;
                    } else {
                        result.cpuNanos_ = cpuNanosBuilder_.build();
                    }
                    if (blockedNanosBuilder_ == null) {
                        result.blockedNanos_ = blockedNanos_;
                    } else {
                        result.blockedNanos_ = blockedNanosBuilder_.build();
                    }
                    if (waitedNanosBuilder_ == null) {
                        result.waitedNanos_ = waitedNanos_;
                    } else {
                        result.waitedNanos_ = waitedNanosBuilder_.build();
                    }
                    if (allocatedBytesBuilder_ == null) {
                        result.allocatedBytes_ = allocatedBytes_;
                    } else {
                        result.allocatedBytes_ = allocatedBytesBuilder_.build();
                    }
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats) {
                        return mergeFrom((org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats other) {
                    if (other == org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats.getDefaultInstance())
                        return this;
                    if (other.hasCpuNanos()) {
                        mergeCpuNanos(other.getCpuNanos());
                    }
                    if (other.hasBlockedNanos()) {
                        mergeBlockedNanos(other.getBlockedNanos());
                    }
                    if (other.hasWaitedNanos()) {
                        mergeWaitedNanos(other.getWaitedNanos());
                    }
                    if (other.hasAllocatedBytes()) {
                        mergeAllocatedBytes(other.getAllocatedBytes());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 cpuNanos_;

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalInt64, org.glowroot.wire.api.model.Proto.OptionalInt64.Builder, org.glowroot.wire.api.model.Proto.OptionalInt64OrBuilder> cpuNanosBuilder_;

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 cpu_nanos = 1;</code>
                 * @return Whether the cpuNanos field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasCpuNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return cpuNanosBuilder_ != null || cpuNanos_ != null;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 cpu_nanos = 1;</code>
                 * @return The cpuNanos.
                 */
                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.cpuNanosBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 getCpuNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (cpuNanosBuilder_ == null) {
                        return cpuNanos_ == null ? org.glowroot.wire.api.model.Proto.OptionalInt64.getDefaultInstance() : cpuNanos_;
                    } else {
                        return cpuNanosBuilder_.getMessage();
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 cpu_nanos = 1;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setCpuNanos(org.glowroot.wire.api.model.Proto.OptionalInt64 value) {
                    if (cpuNanosBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        cpuNanos_ = value;
                        onChanged();
                    } else {
                        cpuNanosBuilder_.setMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 cpu_nanos = 1;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setCpuNanos(org.glowroot.wire.api.model.Proto.OptionalInt64.Builder builderForValue) {
                    if (cpuNanosBuilder_ == null) {
                        cpuNanos_ = builderForValue.build();
                        onChanged();
                    } else {
                        cpuNanosBuilder_.setMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 cpu_nanos = 1;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeCpuNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 value) {
                    if (cpuNanosBuilder_ == null) {
                        if (cpuNanos_ != null) {
                            cpuNanos_ = org.glowroot.wire.api.model.Proto.OptionalInt64.newBuilder(cpuNanos_).mergeFrom(value).buildPartial();
                        } else {
                            cpuNanos_ = value;
                        }
                        onChanged();
                    } else {
                        cpuNanosBuilder_.mergeFrom(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 cpu_nanos = 1;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearCpuNanos() {
                    if (cpuNanosBuilder_ == null) {
                        cpuNanos_ = null;
                        onChanged();
                    } else {
                        cpuNanos_ = null;
                        cpuNanosBuilder_ = null;
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 cpu_nanos = 1;</code>
                 */
                public org.glowroot.wire.api.model.Proto.OptionalInt64.@org.checkerframework.checker.tainting.qual.Tainted Builder getCpuNanosBuilder() {
                    onChanged();
                    return getCpuNanosFieldBuilder().getBuilder();
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 cpu_nanos = 1;</code>
                 */
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64OrBuilder getCpuNanosOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (cpuNanosBuilder_ != null) {
                        return cpuNanosBuilder_.getMessageOrBuilder();
                    } else {
                        return cpuNanos_ == null ? org.glowroot.wire.api.model.Proto.OptionalInt64.getDefaultInstance() : cpuNanos_;
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 cpu_nanos = 1;</code>
                 */
                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalInt64, org.glowroot.wire.api.model.Proto.OptionalInt64.Builder, org.glowroot.wire.api.model.Proto.OptionalInt64OrBuilder> getCpuNanosFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (cpuNanosBuilder_ == null) {
                        cpuNanosBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalInt64, org.glowroot.wire.api.model.Proto.OptionalInt64.Builder, org.glowroot.wire.api.model.Proto.OptionalInt64OrBuilder>(getCpuNanos(), getParentForChildren(), isClean());
                        cpuNanos_ = null;
                    }
                    return cpuNanosBuilder_;
                }

                private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 blockedNanos_;

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalInt64, org.glowroot.wire.api.model.Proto.OptionalInt64.Builder, org.glowroot.wire.api.model.Proto.OptionalInt64OrBuilder> blockedNanosBuilder_;

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 blocked_nanos = 2;</code>
                 * @return Whether the blockedNanos field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasBlockedNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return blockedNanosBuilder_ != null || blockedNanos_ != null;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 blocked_nanos = 2;</code>
                 * @return The blockedNanos.
                 */
                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.blockedNanosBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 getBlockedNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (blockedNanosBuilder_ == null) {
                        return blockedNanos_ == null ? org.glowroot.wire.api.model.Proto.OptionalInt64.getDefaultInstance() : blockedNanos_;
                    } else {
                        return blockedNanosBuilder_.getMessage();
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 blocked_nanos = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setBlockedNanos(org.glowroot.wire.api.model.Proto.OptionalInt64 value) {
                    if (blockedNanosBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        blockedNanos_ = value;
                        onChanged();
                    } else {
                        blockedNanosBuilder_.setMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 blocked_nanos = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setBlockedNanos(org.glowroot.wire.api.model.Proto.OptionalInt64.Builder builderForValue) {
                    if (blockedNanosBuilder_ == null) {
                        blockedNanos_ = builderForValue.build();
                        onChanged();
                    } else {
                        blockedNanosBuilder_.setMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 blocked_nanos = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeBlockedNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 value) {
                    if (blockedNanosBuilder_ == null) {
                        if (blockedNanos_ != null) {
                            blockedNanos_ = org.glowroot.wire.api.model.Proto.OptionalInt64.newBuilder(blockedNanos_).mergeFrom(value).buildPartial();
                        } else {
                            blockedNanos_ = value;
                        }
                        onChanged();
                    } else {
                        blockedNanosBuilder_.mergeFrom(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 blocked_nanos = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearBlockedNanos() {
                    if (blockedNanosBuilder_ == null) {
                        blockedNanos_ = null;
                        onChanged();
                    } else {
                        blockedNanos_ = null;
                        blockedNanosBuilder_ = null;
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 blocked_nanos = 2;</code>
                 */
                public org.glowroot.wire.api.model.Proto.OptionalInt64.@org.checkerframework.checker.tainting.qual.Tainted Builder getBlockedNanosBuilder() {
                    onChanged();
                    return getBlockedNanosFieldBuilder().getBuilder();
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 blocked_nanos = 2;</code>
                 */
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64OrBuilder getBlockedNanosOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (blockedNanosBuilder_ != null) {
                        return blockedNanosBuilder_.getMessageOrBuilder();
                    } else {
                        return blockedNanos_ == null ? org.glowroot.wire.api.model.Proto.OptionalInt64.getDefaultInstance() : blockedNanos_;
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 blocked_nanos = 2;</code>
                 */
                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalInt64, org.glowroot.wire.api.model.Proto.OptionalInt64.Builder, org.glowroot.wire.api.model.Proto.OptionalInt64OrBuilder> getBlockedNanosFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (blockedNanosBuilder_ == null) {
                        blockedNanosBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalInt64, org.glowroot.wire.api.model.Proto.OptionalInt64.Builder, org.glowroot.wire.api.model.Proto.OptionalInt64OrBuilder>(getBlockedNanos(), getParentForChildren(), isClean());
                        blockedNanos_ = null;
                    }
                    return blockedNanosBuilder_;
                }

                private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 waitedNanos_;

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalInt64, org.glowroot.wire.api.model.Proto.OptionalInt64.Builder, org.glowroot.wire.api.model.Proto.OptionalInt64OrBuilder> waitedNanosBuilder_;

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 waited_nanos = 3;</code>
                 * @return Whether the waitedNanos field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasWaitedNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return waitedNanosBuilder_ != null || waitedNanos_ != null;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 waited_nanos = 3;</code>
                 * @return The waitedNanos.
                 */
                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.waitedNanosBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 getWaitedNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (waitedNanosBuilder_ == null) {
                        return waitedNanos_ == null ? org.glowroot.wire.api.model.Proto.OptionalInt64.getDefaultInstance() : waitedNanos_;
                    } else {
                        return waitedNanosBuilder_.getMessage();
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 waited_nanos = 3;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setWaitedNanos(org.glowroot.wire.api.model.Proto.OptionalInt64 value) {
                    if (waitedNanosBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        waitedNanos_ = value;
                        onChanged();
                    } else {
                        waitedNanosBuilder_.setMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 waited_nanos = 3;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setWaitedNanos(org.glowroot.wire.api.model.Proto.OptionalInt64.Builder builderForValue) {
                    if (waitedNanosBuilder_ == null) {
                        waitedNanos_ = builderForValue.build();
                        onChanged();
                    } else {
                        waitedNanosBuilder_.setMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 waited_nanos = 3;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeWaitedNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 value) {
                    if (waitedNanosBuilder_ == null) {
                        if (waitedNanos_ != null) {
                            waitedNanos_ = org.glowroot.wire.api.model.Proto.OptionalInt64.newBuilder(waitedNanos_).mergeFrom(value).buildPartial();
                        } else {
                            waitedNanos_ = value;
                        }
                        onChanged();
                    } else {
                        waitedNanosBuilder_.mergeFrom(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 waited_nanos = 3;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearWaitedNanos() {
                    if (waitedNanosBuilder_ == null) {
                        waitedNanos_ = null;
                        onChanged();
                    } else {
                        waitedNanos_ = null;
                        waitedNanosBuilder_ = null;
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 waited_nanos = 3;</code>
                 */
                public org.glowroot.wire.api.model.Proto.OptionalInt64.@org.checkerframework.checker.tainting.qual.Tainted Builder getWaitedNanosBuilder() {
                    onChanged();
                    return getWaitedNanosFieldBuilder().getBuilder();
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 waited_nanos = 3;</code>
                 */
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64OrBuilder getWaitedNanosOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (waitedNanosBuilder_ != null) {
                        return waitedNanosBuilder_.getMessageOrBuilder();
                    } else {
                        return waitedNanos_ == null ? org.glowroot.wire.api.model.Proto.OptionalInt64.getDefaultInstance() : waitedNanos_;
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 waited_nanos = 3;</code>
                 */
                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalInt64, org.glowroot.wire.api.model.Proto.OptionalInt64.Builder, org.glowroot.wire.api.model.Proto.OptionalInt64OrBuilder> getWaitedNanosFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (waitedNanosBuilder_ == null) {
                        waitedNanosBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalInt64, org.glowroot.wire.api.model.Proto.OptionalInt64.Builder, org.glowroot.wire.api.model.Proto.OptionalInt64OrBuilder>(getWaitedNanos(), getParentForChildren(), isClean());
                        waitedNanos_ = null;
                    }
                    return waitedNanosBuilder_;
                }

                private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 allocatedBytes_;

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalInt64, org.glowroot.wire.api.model.Proto.OptionalInt64.Builder, org.glowroot.wire.api.model.Proto.OptionalInt64OrBuilder> allocatedBytesBuilder_;

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 allocated_bytes = 4;</code>
                 * @return Whether the allocatedBytes field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasAllocatedBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return allocatedBytesBuilder_ != null || allocatedBytes_ != null;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 allocated_bytes = 4;</code>
                 * @return The allocatedBytes.
                 */
                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.allocatedBytesBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 getAllocatedBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (allocatedBytesBuilder_ == null) {
                        return allocatedBytes_ == null ? org.glowroot.wire.api.model.Proto.OptionalInt64.getDefaultInstance() : allocatedBytes_;
                    } else {
                        return allocatedBytesBuilder_.getMessage();
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 allocated_bytes = 4;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setAllocatedBytes(org.glowroot.wire.api.model.Proto.OptionalInt64 value) {
                    if (allocatedBytesBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        allocatedBytes_ = value;
                        onChanged();
                    } else {
                        allocatedBytesBuilder_.setMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 allocated_bytes = 4;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setAllocatedBytes(org.glowroot.wire.api.model.Proto.OptionalInt64.Builder builderForValue) {
                    if (allocatedBytesBuilder_ == null) {
                        allocatedBytes_ = builderForValue.build();
                        onChanged();
                    } else {
                        allocatedBytesBuilder_.setMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 allocated_bytes = 4;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeAllocatedBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 value) {
                    if (allocatedBytesBuilder_ == null) {
                        if (allocatedBytes_ != null) {
                            allocatedBytes_ = org.glowroot.wire.api.model.Proto.OptionalInt64.newBuilder(allocatedBytes_).mergeFrom(value).buildPartial();
                        } else {
                            allocatedBytes_ = value;
                        }
                        onChanged();
                    } else {
                        allocatedBytesBuilder_.mergeFrom(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 allocated_bytes = 4;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearAllocatedBytes() {
                    if (allocatedBytesBuilder_ == null) {
                        allocatedBytes_ = null;
                        onChanged();
                    } else {
                        allocatedBytes_ = null;
                        allocatedBytesBuilder_ = null;
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 allocated_bytes = 4;</code>
                 */
                public org.glowroot.wire.api.model.Proto.OptionalInt64.@org.checkerframework.checker.tainting.qual.Tainted Builder getAllocatedBytesBuilder() {
                    onChanged();
                    return getAllocatedBytesFieldBuilder().getBuilder();
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 allocated_bytes = 4;</code>
                 */
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64OrBuilder getAllocatedBytesOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (allocatedBytesBuilder_ != null) {
                        return allocatedBytesBuilder_.getMessageOrBuilder();
                    } else {
                        return allocatedBytes_ == null ? org.glowroot.wire.api.model.Proto.OptionalInt64.getDefaultInstance() : allocatedBytes_;
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 allocated_bytes = 4;</code>
                 */
                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalInt64, org.glowroot.wire.api.model.Proto.OptionalInt64.Builder, org.glowroot.wire.api.model.Proto.OptionalInt64OrBuilder> getAllocatedBytesFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (allocatedBytesBuilder_ == null) {
                        allocatedBytesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalInt64, org.glowroot.wire.api.model.Proto.OptionalInt64.Builder, org.glowroot.wire.api.model.Proto.OptionalInt64OrBuilder>(getAllocatedBytes(), getParentForChildren(), isClean());
                        allocatedBytes_ = null;
                    }
                    return allocatedBytesBuilder_;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Trace.OldThreadStats)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Trace.OldThreadStats)
            private static final org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.TraceOuterClass.Trace.OldThreadStats();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldThreadStats> PARSER = new com.google.protobuf.AbstractParser<OldThreadStats>() {

                public OldThreadStats parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new OldThreadStats(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldThreadStats> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldThreadStats> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return DEFAULT_INSTANCE;
            }
        }

        public interface ThreadStatsOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Trace.ThreadStats)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             * -1 means N/A
             * </pre>
             *
             * <code>sint64 cpu_nanos = 1;</code>
             * @return The cpuNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted long getCpuNanos();

            /**
             * <pre>
             * -1 means N/A
             * </pre>
             *
             * <code>sint64 blocked_nanos = 2;</code>
             * @return The blockedNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted long getBlockedNanos();

            /**
             * <pre>
             * -1 means N/A
             * </pre>
             *
             * <code>sint64 waited_nanos = 3;</code>
             * @return The waitedNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted long getWaitedNanos();

            /**
             * <pre>
             * -1 means N/A
             * </pre>
             *
             * <code>sint64 allocated_bytes = 4;</code>
             * @return The allocatedBytes.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted long getAllocatedBytes();
        }

        /**
         * Protobuf type {@code org_glowroot_wire_api_model.Trace.ThreadStats}
         */
        public static final class ThreadStats extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Trace.ThreadStats)
        ThreadStatsOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use ThreadStats.newBuilder() to construct.
            private ThreadStats(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            private ThreadStats() {
            }

            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new ThreadStats();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                return this.unknownFields;
            }

            private ThreadStats(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 8:
                                {
                                    cpuNanos_ = input.readSInt64();
                                    break;
                                }
                            case 16:
                                {
                                    blockedNanos_ = input.readSInt64();
                                    break;
                                }
                            case 24:
                                {
                                    waitedNanos_ = input.readSInt64();
                                    break;
                                }
                            case 32:
                                {
                                    allocatedBytes_ = input.readSInt64();
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_ThreadStats_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_ThreadStats_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.Builder.class);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int CPU_NANOS_FIELD_NUMBER = 1;

            private  @org.checkerframework.checker.tainting.qual.Tainted long cpuNanos_;

            /**
             * <pre>
             * -1 means N/A
             * </pre>
             *
             * <code>sint64 cpu_nanos = 1;</code>
             * @return The cpuNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getCpuNanos(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                return cpuNanos_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int BLOCKED_NANOS_FIELD_NUMBER = 2;

            private  @org.checkerframework.checker.tainting.qual.Tainted long blockedNanos_;

            /**
             * <pre>
             * -1 means N/A
             * </pre>
             *
             * <code>sint64 blocked_nanos = 2;</code>
             * @return The blockedNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getBlockedNanos(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                return blockedNanos_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int WAITED_NANOS_FIELD_NUMBER = 3;

            private  @org.checkerframework.checker.tainting.qual.Tainted long waitedNanos_;

            /**
             * <pre>
             * -1 means N/A
             * </pre>
             *
             * <code>sint64 waited_nanos = 3;</code>
             * @return The waitedNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getWaitedNanos(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                return waitedNanos_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int ALLOCATED_BYTES_FIELD_NUMBER = 4;

            private  @org.checkerframework.checker.tainting.qual.Tainted long allocatedBytes_;

            /**
             * <pre>
             * -1 means N/A
             * </pre>
             *
             * <code>sint64 allocated_bytes = 4;</code>
             * @return The allocatedBytes.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getAllocatedBytes(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                return allocatedBytes_;
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                if (cpuNanos_ != 0L) {
                    output.writeSInt64(1, cpuNanos_);
                }
                if (blockedNanos_ != 0L) {
                    output.writeSInt64(2, blockedNanos_);
                }
                if (waitedNanos_ != 0L) {
                    output.writeSInt64(3, waitedNanos_);
                }
                if (allocatedBytes_ != 0L) {
                    output.writeSInt64(4, allocatedBytes_);
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if (cpuNanos_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream.computeSInt64Size(1, cpuNanos_);
                }
                if (blockedNanos_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream.computeSInt64Size(2, blockedNanos_);
                }
                if (waitedNanos_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream.computeSInt64Size(3, waitedNanos_);
                }
                if (allocatedBytes_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream.computeSInt64Size(4, allocatedBytes_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats other = (org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats) obj;
                if (getCpuNanos() != other.getCpuNanos())
                    return false;
                if (getBlockedNanos() != other.getBlockedNanos())
                    return false;
                if (getWaitedNanos() != other.getWaitedNanos())
                    return false;
                if (getAllocatedBytes() != other.getAllocatedBytes())
                    return false;
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + CPU_NANOS_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getCpuNanos());
                hash = (37 * hash) + BLOCKED_NANOS_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getBlockedNanos());
                hash = (37 * hash) + WAITED_NANOS_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getWaitedNanos());
                hash = (37 * hash) + ALLOCATED_BYTES_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getAllocatedBytes());
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code org_glowroot_wire_api_model.Trace.ThreadStats}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Trace.ThreadStats)
            org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStatsOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_ThreadStats_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_ThreadStats_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                @org.checkerframework.dataflow.qual.Pure
                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    cpuNanos_ = 0L;
                    blockedNanos_ = 0L;
                    waitedNanos_ = 0L;
                    allocatedBytes_ = 0L;
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_ThreadStats_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats result = new org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats(this);
                    result.cpuNanos_ = cpuNanos_;
                    result.blockedNanos_ = blockedNanos_;
                    result.waitedNanos_ = waitedNanos_;
                    result.allocatedBytes_ = allocatedBytes_;
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats) {
                        return mergeFrom((org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats other) {
                    if (other == org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats.getDefaultInstance())
                        return this;
                    if (other.getCpuNanos() != 0L) {
                        setCpuNanos(other.getCpuNanos());
                    }
                    if (other.getBlockedNanos() != 0L) {
                        setBlockedNanos(other.getBlockedNanos());
                    }
                    if (other.getWaitedNanos() != 0L) {
                        setWaitedNanos(other.getWaitedNanos());
                    }
                    if (other.getAllocatedBytes() != 0L) {
                        setAllocatedBytes(other.getAllocatedBytes());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted long cpuNanos_;

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>sint64 cpu_nanos = 1;</code>
                 * @return The cpuNanos.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted long getCpuNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return cpuNanos_;
                }

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>sint64 cpu_nanos = 1;</code>
                 * @param value The cpuNanos to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setCpuNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                    cpuNanos_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>sint64 cpu_nanos = 1;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearCpuNanos() {
                    cpuNanos_ = 0L;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted long blockedNanos_;

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>sint64 blocked_nanos = 2;</code>
                 * @return The blockedNanos.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted long getBlockedNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return blockedNanos_;
                }

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>sint64 blocked_nanos = 2;</code>
                 * @param value The blockedNanos to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setBlockedNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                    blockedNanos_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>sint64 blocked_nanos = 2;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearBlockedNanos() {
                    blockedNanos_ = 0L;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted long waitedNanos_;

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>sint64 waited_nanos = 3;</code>
                 * @return The waitedNanos.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted long getWaitedNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return waitedNanos_;
                }

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>sint64 waited_nanos = 3;</code>
                 * @param value The waitedNanos to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setWaitedNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                    waitedNanos_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>sint64 waited_nanos = 3;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearWaitedNanos() {
                    waitedNanos_ = 0L;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted long allocatedBytes_;

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>sint64 allocated_bytes = 4;</code>
                 * @return The allocatedBytes.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted long getAllocatedBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return allocatedBytes_;
                }

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>sint64 allocated_bytes = 4;</code>
                 * @param value The allocatedBytes to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setAllocatedBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                    allocatedBytes_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>sint64 allocated_bytes = 4;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearAllocatedBytes() {
                    allocatedBytes_ = 0L;
                    onChanged();
                    return this;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Trace.ThreadStats)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Trace.ThreadStats)
            private static final org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.TraceOuterClass.Trace.ThreadStats();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<ThreadStats> PARSER = new com.google.protobuf.AbstractParser<ThreadStats>() {

                public ThreadStats parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new ThreadStats(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<ThreadStats> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<ThreadStats> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                return DEFAULT_INSTANCE;
            }
        }

        public interface EntryOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Trace.Entry)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <code>int32 depth = 1;</code>
             * @return The depth.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted int getDepth();

            /**
             * <pre>
             * start time relative to trace start
             * </pre>
             *
             * <code>int64 start_offset_nanos = 2;</code>
             * @return The startOffsetNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted long getStartOffsetNanos();

            /**
             * <code>int64 duration_nanos = 3;</code>
             * @return The durationNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted long getDurationNanos();

            /**
             * <pre>
             * whether entry was active at the time of a partial trace capture
             * </pre>
             *
             * <code>bool active = 4;</code>
             * @return The active.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean getActive();

            /**
             * <pre>
             * message is empty for trace entries added using addErrorEntry()
             * </pre>
             *
             * <code>string message = 5;</code>
             * @return The message.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getMessage();

            /**
             * <pre>
             * message is empty for trace entries added using addErrorEntry()
             * </pre>
             *
             * <code>string message = 5;</code>
             * @return The bytes for message.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getMessageBytes();

            /**
             * <code>.org_glowroot_wire_api_model.Trace.QueryEntryMessage query_entry_message = 9;</code>
             * @return Whether the queryEntryMessage field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasQueryEntryMessage();

            /**
             * <code>.org_glowroot_wire_api_model.Trace.QueryEntryMessage query_entry_message = 9;</code>
             * @return The queryEntryMessage.
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage getQueryEntryMessage();

            /**
             * <code>.org_glowroot_wire_api_model.Trace.QueryEntryMessage query_entry_message = 9;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessageOrBuilder getQueryEntryMessageOrBuilder();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry> getDetailEntryList();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry getDetailEntry(int index);

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted int getDetailEntryCount();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntryOrBuilder> getDetailEntryOrBuilderList();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntryOrBuilder getDetailEntryOrBuilder(int index);

            /**
             * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.Proto.StackTraceElement> getLocationStackTraceElementList();

            /**
             * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted StackTraceElement getLocationStackTraceElement(int index);

            /**
             * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted int getLocationStackTraceElementCount();

            /**
             * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.Proto.StackTraceElementOrBuilder> getLocationStackTraceElementOrBuilderList();

            /**
             * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted StackTraceElementOrBuilder getLocationStackTraceElementOrBuilder(int index);

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Error error = 8;</code>
             * @return Whether the error field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasError();

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Error error = 8;</code>
             * @return The error.
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error getError();

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Error error = 8;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ErrorOrBuilder getErrorOrBuilder();
        }

        /**
         * Protobuf type {@code org_glowroot_wire_api_model.Trace.Entry}
         */
        public static final class Entry extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Trace.Entry)
        EntryOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use Entry.newBuilder() to construct.
            private Entry(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.message_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private Entry() {
                message_ = "";
                detailEntry_ = java.util.Collections.emptyList();
                locationStackTraceElement_ = java.util.Collections.emptyList();
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.message_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted Entry this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new Entry();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return this.unknownFields;
            }

            private Entry(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 8:
                                {
                                    depth_ = input.readInt32();
                                    break;
                                }
                            case 16:
                                {
                                    startOffsetNanos_ = input.readInt64();
                                    break;
                                }
                            case 24:
                                {
                                    durationNanos_ = input.readInt64();
                                    break;
                                }
                            case 32:
                                {
                                    active_ = input.readBool();
                                    break;
                                }
                            case 42:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    message_ = s;
                                    break;
                                }
                            case 50:
                                {
                                    if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                        detailEntry_ = new java.util.ArrayList<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry>();
                                        mutable_bitField0_ |= 0x00000001;
                                    }
                                    detailEntry_.add(input.readMessage(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.parser(), extensionRegistry));
                                    break;
                                }
                            case 58:
                                {
                                    if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                                        locationStackTraceElement_ = new java.util.ArrayList<org.glowroot.wire.api.model.Proto.StackTraceElement>();
                                        mutable_bitField0_ |= 0x00000002;
                                    }
                                    locationStackTraceElement_.add(input.readMessage(org.glowroot.wire.api.model.Proto.StackTraceElement.parser(), extensionRegistry));
                                    break;
                                }
                            case 66:
                                {
                                    org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.Builder subBuilder = null;
                                    if (error_ != null) {
                                        subBuilder = error_.toBuilder();
                                    }
                                    error_ = input.readMessage(org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom(error_);
                                        error_ = subBuilder.buildPartial();
                                    }
                                    break;
                                }
                            case 74:
                                {
                                    org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage.Builder subBuilder = null;
                                    if (queryEntryMessage_ != null) {
                                        subBuilder = queryEntryMessage_.toBuilder();
                                    }
                                    queryEntryMessage_ = input.readMessage(org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom(queryEntryMessage_);
                                        queryEntryMessage_ = subBuilder.buildPartial();
                                    }
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    if (((mutable_bitField0_ & 0x00000001) != 0)) {
                        detailEntry_ = java.util.Collections.unmodifiableList(detailEntry_);
                    }
                    if (((mutable_bitField0_ & 0x00000002) != 0)) {
                        locationStackTraceElement_ = java.util.Collections.unmodifiableList(locationStackTraceElement_);
                    }
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Entry_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Entry_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry.Builder.class);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int DEPTH_FIELD_NUMBER = 1;

            private  @org.checkerframework.checker.tainting.qual.Tainted int depth_;

            /**
             * <code>int32 depth = 1;</code>
             * @return The depth.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted int getDepth(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return depth_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int START_OFFSET_NANOS_FIELD_NUMBER = 2;

            private  @org.checkerframework.checker.tainting.qual.Tainted long startOffsetNanos_;

            /**
             * <pre>
             * start time relative to trace start
             * </pre>
             *
             * <code>int64 start_offset_nanos = 2;</code>
             * @return The startOffsetNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getStartOffsetNanos(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return startOffsetNanos_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int DURATION_NANOS_FIELD_NUMBER = 3;

            private  @org.checkerframework.checker.tainting.qual.Tainted long durationNanos_;

            /**
             * <code>int64 duration_nanos = 3;</code>
             * @return The durationNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getDurationNanos(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return durationNanos_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int ACTIVE_FIELD_NUMBER = 4;

            private  @org.checkerframework.checker.tainting.qual.Tainted boolean active_;

            /**
             * <pre>
             * whether entry was active at the time of a partial trace capture
             * </pre>
             *
             * <code>bool active = 4;</code>
             * @return The active.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean getActive(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return active_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int MESSAGE_FIELD_NUMBER = 5;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object message_;

            /**
             * <pre>
             * message is empty for trace entries added using addErrorEntry()
             * </pre>
             *
             * <code>string message = 5;</code>
             * @return The message.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getMessage(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                java.lang.Object ref = message_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    message_ = s;
                    return s;
                }
            }

            /**
             * <pre>
             * message is empty for trace entries added using addErrorEntry()
             * </pre>
             *
             * <code>string message = 5;</code>
             * @return The bytes for message.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getMessageBytes(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                java.lang.Object ref = message_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    message_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int QUERY_ENTRY_MESSAGE_FIELD_NUMBER = 9;

            private org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage queryEntryMessage_;

            /**
             * <code>.org_glowroot_wire_api_model.Trace.QueryEntryMessage query_entry_message = 9;</code>
             * @return Whether the queryEntryMessage field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasQueryEntryMessage(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return queryEntryMessage_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Trace.QueryEntryMessage query_entry_message = 9;</code>
             * @return The queryEntryMessage.
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage getQueryEntryMessage(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return queryEntryMessage_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage.getDefaultInstance() : queryEntryMessage_;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Trace.QueryEntryMessage query_entry_message = 9;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessageOrBuilder getQueryEntryMessageOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return getQueryEntryMessage();
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int DETAIL_ENTRY_FIELD_NUMBER = 6;

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry> detailEntry_;

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry> getDetailEntryList(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return detailEntry_;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntryOrBuilder> getDetailEntryOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return detailEntry_;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted int getDetailEntryCount(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return detailEntry_.size();
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry getDetailEntry(@org.checkerframework.checker.tainting.qual.Tainted Entry this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return detailEntry_.get(index);
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntryOrBuilder getDetailEntryOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Entry this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return detailEntry_.get(index);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int LOCATION_STACK_TRACE_ELEMENT_FIELD_NUMBER = 7;

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.Proto.StackTraceElement> locationStackTraceElement_;

            /**
             * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.Proto.StackTraceElement> getLocationStackTraceElementList(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return locationStackTraceElement_;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.Proto.StackTraceElementOrBuilder> getLocationStackTraceElementOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return locationStackTraceElement_;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted int getLocationStackTraceElementCount(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return locationStackTraceElement_.size();
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted StackTraceElement getLocationStackTraceElement(@org.checkerframework.checker.tainting.qual.Tainted Entry this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return locationStackTraceElement_.get(index);
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted StackTraceElementOrBuilder getLocationStackTraceElementOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Entry this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return locationStackTraceElement_.get(index);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int ERROR_FIELD_NUMBER = 8;

            private org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error error_;

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Error error = 8;</code>
             * @return Whether the error field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasError(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return error_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Error error = 8;</code>
             * @return The error.
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error getError(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return error_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.getDefaultInstance() : error_;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Error error = 8;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ErrorOrBuilder getErrorOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return getError();
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted Entry this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                if (depth_ != 0) {
                    output.writeInt32(1, depth_);
                }
                if (startOffsetNanos_ != 0L) {
                    output.writeInt64(2, startOffsetNanos_);
                }
                if (durationNanos_ != 0L) {
                    output.writeInt64(3, durationNanos_);
                }
                if (active_ != false) {
                    output.writeBool(4, active_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 5, message_);
                }
                for (int i = 0; i < detailEntry_.size(); i++) {
                    output.writeMessage(6, detailEntry_.get(i));
                }
                for (int i = 0; i < locationStackTraceElement_.size(); i++) {
                    output.writeMessage(7, locationStackTraceElement_.get(i));
                }
                if (error_ != null) {
                    output.writeMessage(8, getError());
                }
                if (queryEntryMessage_ != null) {
                    output.writeMessage(9, getQueryEntryMessage());
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if (depth_ != 0) {
                    size += com.google.protobuf.CodedOutputStream.computeInt32Size(1, depth_);
                }
                if (startOffsetNanos_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream.computeInt64Size(2, startOffsetNanos_);
                }
                if (durationNanos_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream.computeInt64Size(3, durationNanos_);
                }
                if (active_ != false) {
                    size += com.google.protobuf.CodedOutputStream.computeBoolSize(4, active_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, message_);
                }
                for (int i = 0; i < detailEntry_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, detailEntry_.get(i));
                }
                for (int i = 0; i < locationStackTraceElement_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(7, locationStackTraceElement_.get(i));
                }
                if (error_ != null) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(8, getError());
                }
                if (queryEntryMessage_ != null) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(9, getQueryEntryMessage());
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted Entry this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry other = (org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry) obj;
                if (getDepth() != other.getDepth())
                    return false;
                if (getStartOffsetNanos() != other.getStartOffsetNanos())
                    return false;
                if (getDurationNanos() != other.getDurationNanos())
                    return false;
                if (getActive() != other.getActive())
                    return false;
                if (!getMessage().equals(other.getMessage()))
                    return false;
                if (hasQueryEntryMessage() != other.hasQueryEntryMessage())
                    return false;
                if (hasQueryEntryMessage()) {
                    if (!getQueryEntryMessage().equals(other.getQueryEntryMessage()))
                        return false;
                }
                if (!getDetailEntryList().equals(other.getDetailEntryList()))
                    return false;
                if (!getLocationStackTraceElementList().equals(other.getLocationStackTraceElementList()))
                    return false;
                if (hasError() != other.hasError())
                    return false;
                if (hasError()) {
                    if (!getError().equals(other.getError()))
                        return false;
                }
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + DEPTH_FIELD_NUMBER;
                hash = (53 * hash) + getDepth();
                hash = (37 * hash) + START_OFFSET_NANOS_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getStartOffsetNanos());
                hash = (37 * hash) + DURATION_NANOS_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getDurationNanos());
                hash = (37 * hash) + ACTIVE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getActive());
                hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
                hash = (53 * hash) + getMessage().hashCode();
                if (hasQueryEntryMessage()) {
                    hash = (37 * hash) + QUERY_ENTRY_MESSAGE_FIELD_NUMBER;
                    hash = (53 * hash) + getQueryEntryMessage().hashCode();
                }
                if (getDetailEntryCount() > 0) {
                    hash = (37 * hash) + DETAIL_ENTRY_FIELD_NUMBER;
                    hash = (53 * hash) + getDetailEntryList().hashCode();
                }
                if (getLocationStackTraceElementCount() > 0) {
                    hash = (37 * hash) + LOCATION_STACK_TRACE_ELEMENT_FIELD_NUMBER;
                    hash = (53 * hash) + getLocationStackTraceElementList().hashCode();
                }
                if (hasError()) {
                    hash = (37 * hash) + ERROR_FIELD_NUMBER;
                    hash = (53 * hash) + getError().hashCode();
                }
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted Entry this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code org_glowroot_wire_api_model.Trace.Entry}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Trace.Entry)
            org.glowroot.wire.api.model.TraceOuterClass.Trace.EntryOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Entry_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Entry_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                        getDetailEntryFieldBuilder();
                        getLocationStackTraceElementFieldBuilder();
                    }
                }

                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.errorBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.error_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    depth_ = 0;
                    startOffsetNanos_ = 0L;
                    durationNanos_ = 0L;
                    active_ = false;
                    message_ = "";
                    if (queryEntryMessageBuilder_ == null) {
                        queryEntryMessage_ = null;
                    } else {
                        queryEntryMessage_ = null;
                        queryEntryMessageBuilder_ = null;
                    }
                    if (detailEntryBuilder_ == null) {
                        detailEntry_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        detailEntryBuilder_.clear();
                    }
                    if (locationStackTraceElementBuilder_ == null) {
                        locationStackTraceElement_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        locationStackTraceElementBuilder_.clear();
                    }
                    if (errorBuilder_ == null) {
                        error_ = null;
                    } else {
                        error_ = null;
                        errorBuilder_ = null;
                    }
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_Entry_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry result = new org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry(this);
                    int from_bitField0_ = bitField0_;
                    result.depth_ = depth_;
                    result.startOffsetNanos_ = startOffsetNanos_;
                    result.durationNanos_ = durationNanos_;
                    result.active_ = active_;
                    result.message_ = message_;
                    if (queryEntryMessageBuilder_ == null) {
                        result.queryEntryMessage_ = queryEntryMessage_;
                    } else {
                        result.queryEntryMessage_ = queryEntryMessageBuilder_.build();
                    }
                    if (detailEntryBuilder_ == null) {
                        if (((bitField0_ & 0x00000001) != 0)) {
                            detailEntry_ = java.util.Collections.unmodifiableList(detailEntry_);
                            bitField0_ = (bitField0_ & ~0x00000001);
                        }
                        result.detailEntry_ = detailEntry_;
                    } else {
                        result.detailEntry_ = detailEntryBuilder_.build();
                    }
                    if (locationStackTraceElementBuilder_ == null) {
                        if (((bitField0_ & 0x00000002) != 0)) {
                            locationStackTraceElement_ = java.util.Collections.unmodifiableList(locationStackTraceElement_);
                            bitField0_ = (bitField0_ & ~0x00000002);
                        }
                        result.locationStackTraceElement_ = locationStackTraceElement_;
                    } else {
                        result.locationStackTraceElement_ = locationStackTraceElementBuilder_.build();
                    }
                    if (errorBuilder_ == null) {
                        result.error_ = error_;
                    } else {
                        result.error_ = errorBuilder_.build();
                    }
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry) {
                        return mergeFrom((org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry other) {
                    if (other == org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry.getDefaultInstance())
                        return this;
                    if (other.getDepth() != 0) {
                        setDepth(other.getDepth());
                    }
                    if (other.getStartOffsetNanos() != 0L) {
                        setStartOffsetNanos(other.getStartOffsetNanos());
                    }
                    if (other.getDurationNanos() != 0L) {
                        setDurationNanos(other.getDurationNanos());
                    }
                    if (other.getActive() != false) {
                        setActive(other.getActive());
                    }
                    if (!other.getMessage().isEmpty()) {
                        message_ = other.message_;
                        onChanged();
                    }
                    if (other.hasQueryEntryMessage()) {
                        mergeQueryEntryMessage(other.getQueryEntryMessage());
                    }
                    if (detailEntryBuilder_ == null) {
                        if (!other.detailEntry_.isEmpty()) {
                            if (detailEntry_.isEmpty()) {
                                detailEntry_ = other.detailEntry_;
                                bitField0_ = (bitField0_ & ~0x00000001);
                            } else {
                                ensureDetailEntryIsMutable();
                                detailEntry_.addAll(other.detailEntry_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.detailEntry_.isEmpty()) {
                            if (detailEntryBuilder_.isEmpty()) {
                                detailEntryBuilder_.dispose();
                                detailEntryBuilder_ = null;
                                detailEntry_ = other.detailEntry_;
                                bitField0_ = (bitField0_ & ~0x00000001);
                                detailEntryBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getDetailEntryFieldBuilder() : null;
                            } else {
                                detailEntryBuilder_.addAllMessages(other.detailEntry_);
                            }
                        }
                    }
                    if (locationStackTraceElementBuilder_ == null) {
                        if (!other.locationStackTraceElement_.isEmpty()) {
                            if (locationStackTraceElement_.isEmpty()) {
                                locationStackTraceElement_ = other.locationStackTraceElement_;
                                bitField0_ = (bitField0_ & ~0x00000002);
                            } else {
                                ensureLocationStackTraceElementIsMutable();
                                locationStackTraceElement_.addAll(other.locationStackTraceElement_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.locationStackTraceElement_.isEmpty()) {
                            if (locationStackTraceElementBuilder_.isEmpty()) {
                                locationStackTraceElementBuilder_.dispose();
                                locationStackTraceElementBuilder_ = null;
                                locationStackTraceElement_ = other.locationStackTraceElement_;
                                bitField0_ = (bitField0_ & ~0x00000002);
                                locationStackTraceElementBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getLocationStackTraceElementFieldBuilder() : null;
                            } else {
                                locationStackTraceElementBuilder_.addAllMessages(other.locationStackTraceElement_);
                            }
                        }
                    }
                    if (other.hasError()) {
                        mergeError(other.getError());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted int bitField0_;

                private  @org.checkerframework.checker.tainting.qual.Tainted int depth_;

                /**
                 * <code>int32 depth = 1;</code>
                 * @return The depth.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted int getDepth(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return depth_;
                }

                /**
                 * <code>int32 depth = 1;</code>
                 * @param value The depth to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setDepth(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int value) {
                    depth_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>int32 depth = 1;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearDepth() {
                    depth_ = 0;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted long startOffsetNanos_;

                /**
                 * <pre>
                 * start time relative to trace start
                 * </pre>
                 *
                 * <code>int64 start_offset_nanos = 2;</code>
                 * @return The startOffsetNanos.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted long getStartOffsetNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return startOffsetNanos_;
                }

                /**
                 * <pre>
                 * start time relative to trace start
                 * </pre>
                 *
                 * <code>int64 start_offset_nanos = 2;</code>
                 * @param value The startOffsetNanos to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setStartOffsetNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                    startOffsetNanos_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * start time relative to trace start
                 * </pre>
                 *
                 * <code>int64 start_offset_nanos = 2;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearStartOffsetNanos() {
                    startOffsetNanos_ = 0L;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted long durationNanos_;

                /**
                 * <code>int64 duration_nanos = 3;</code>
                 * @return The durationNanos.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted long getDurationNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return durationNanos_;
                }

                /**
                 * <code>int64 duration_nanos = 3;</code>
                 * @param value The durationNanos to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setDurationNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                    durationNanos_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>int64 duration_nanos = 3;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearDurationNanos() {
                    durationNanos_ = 0L;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted boolean active_;

                /**
                 * <pre>
                 * whether entry was active at the time of a partial trace capture
                 * </pre>
                 *
                 * <code>bool active = 4;</code>
                 * @return The active.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean getActive(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return active_;
                }

                /**
                 * <pre>
                 * whether entry was active at the time of a partial trace capture
                 * </pre>
                 *
                 * <code>bool active = 4;</code>
                 * @param value The active to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setActive(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted boolean value) {
                    active_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * whether entry was active at the time of a partial trace capture
                 * </pre>
                 *
                 * <code>bool active = 4;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearActive() {
                    active_ = false;
                    onChanged();
                    return this;
                }

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object message_ = "";

                /**
                 * <pre>
                 * message is empty for trace entries added using addErrorEntry()
                 * </pre>
                 *
                 * <code>string message = 5;</code>
                 * @return The message.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getMessage(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = message_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        message_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <pre>
                 * message is empty for trace entries added using addErrorEntry()
                 * </pre>
                 *
                 * <code>string message = 5;</code>
                 * @return The bytes for message.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getMessageBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = message_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        message_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <pre>
                 * message is empty for trace entries added using addErrorEntry()
                 * </pre>
                 *
                 * <code>string message = 5;</code>
                 * @param value The message to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setMessage(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    message_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * message is empty for trace entries added using addErrorEntry()
                 * </pre>
                 *
                 * <code>string message = 5;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearMessage() {
                    message_ = getDefaultInstance().getMessage();
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * message is empty for trace entries added using addErrorEntry()
                 * </pre>
                 *
                 * <code>string message = 5;</code>
                 * @param value The bytes for message to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setMessageBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    message_ = value;
                    onChanged();
                    return this;
                }

                private org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage queryEntryMessage_;

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage, org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessageOrBuilder> queryEntryMessageBuilder_;

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.QueryEntryMessage query_entry_message = 9;</code>
                 * @return Whether the queryEntryMessage field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasQueryEntryMessage(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return queryEntryMessageBuilder_ != null || queryEntryMessage_ != null;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.QueryEntryMessage query_entry_message = 9;</code>
                 * @return The queryEntryMessage.
                 */
                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.queryEntryMessageBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage getQueryEntryMessage(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (queryEntryMessageBuilder_ == null) {
                        return queryEntryMessage_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage.getDefaultInstance() : queryEntryMessage_;
                    } else {
                        return queryEntryMessageBuilder_.getMessage();
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.QueryEntryMessage query_entry_message = 9;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setQueryEntryMessage(org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage value) {
                    if (queryEntryMessageBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        queryEntryMessage_ = value;
                        onChanged();
                    } else {
                        queryEntryMessageBuilder_.setMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.QueryEntryMessage query_entry_message = 9;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setQueryEntryMessage(org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage.Builder builderForValue) {
                    if (queryEntryMessageBuilder_ == null) {
                        queryEntryMessage_ = builderForValue.build();
                        onChanged();
                    } else {
                        queryEntryMessageBuilder_.setMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.QueryEntryMessage query_entry_message = 9;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeQueryEntryMessage(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage value) {
                    if (queryEntryMessageBuilder_ == null) {
                        if (queryEntryMessage_ != null) {
                            queryEntryMessage_ = org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage.newBuilder(queryEntryMessage_).mergeFrom(value).buildPartial();
                        } else {
                            queryEntryMessage_ = value;
                        }
                        onChanged();
                    } else {
                        queryEntryMessageBuilder_.mergeFrom(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.QueryEntryMessage query_entry_message = 9;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearQueryEntryMessage() {
                    if (queryEntryMessageBuilder_ == null) {
                        queryEntryMessage_ = null;
                        onChanged();
                    } else {
                        queryEntryMessage_ = null;
                        queryEntryMessageBuilder_ = null;
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.QueryEntryMessage query_entry_message = 9;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage.@org.checkerframework.checker.tainting.qual.Tainted Builder getQueryEntryMessageBuilder() {
                    onChanged();
                    return getQueryEntryMessageFieldBuilder().getBuilder();
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.QueryEntryMessage query_entry_message = 9;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessageOrBuilder getQueryEntryMessageOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (queryEntryMessageBuilder_ != null) {
                        return queryEntryMessageBuilder_.getMessageOrBuilder();
                    } else {
                        return queryEntryMessage_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage.getDefaultInstance() : queryEntryMessage_;
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.QueryEntryMessage query_entry_message = 9;</code>
                 */
                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage, org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessageOrBuilder> getQueryEntryMessageFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (queryEntryMessageBuilder_ == null) {
                        queryEntryMessageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage, org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessageOrBuilder>(getQueryEntryMessage(), getParentForChildren(), isClean());
                        queryEntryMessage_ = null;
                    }
                    return queryEntryMessageBuilder_;
                }

                private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry> detailEntry_ = java.util.Collections.emptyList();

                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.detailEntryBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                private void ensureDetailEntryIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (!((bitField0_ & 0x00000001) != 0)) {
                        detailEntry_ = new java.util.ArrayList<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry>(detailEntry_);
                        bitField0_ |= 0x00000001;
                    }
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntryOrBuilder> detailEntryBuilder_;

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry> getDetailEntryList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (detailEntryBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(detailEntry_);
                    } else {
                        return detailEntryBuilder_.getMessageList();
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
                 */
                public  @org.checkerframework.checker.tainting.qual.Tainted int getDetailEntryCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (detailEntryBuilder_ == null) {
                        return detailEntry_.size();
                    } else {
                        return detailEntryBuilder_.getCount();
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntry getDetailEntry(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (detailEntryBuilder_ == null) {
                        return detailEntry_.get(index);
                    } else {
                        return detailEntryBuilder_.getMessage(index);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setDetailEntry(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry value) {
                    if (detailEntryBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureDetailEntryIsMutable();
                        detailEntry_.set(index, value);
                        onChanged();
                    } else {
                        detailEntryBuilder_.setMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setDetailEntry(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder builderForValue) {
                    if (detailEntryBuilder_ == null) {
                        ensureDetailEntryIsMutable();
                        detailEntry_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        detailEntryBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addDetailEntry(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry value) {
                    if (detailEntryBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureDetailEntryIsMutable();
                        detailEntry_.add(value);
                        onChanged();
                    } else {
                        detailEntryBuilder_.addMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addDetailEntry(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry value) {
                    if (detailEntryBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureDetailEntryIsMutable();
                        detailEntry_.add(index, value);
                        onChanged();
                    } else {
                        detailEntryBuilder_.addMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addDetailEntry(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder builderForValue) {
                    if (detailEntryBuilder_ == null) {
                        ensureDetailEntryIsMutable();
                        detailEntry_.add(builderForValue.build());
                        onChanged();
                    } else {
                        detailEntryBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addDetailEntry(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder builderForValue) {
                    if (detailEntryBuilder_ == null) {
                        ensureDetailEntryIsMutable();
                        detailEntry_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        detailEntryBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllDetailEntry(java.lang.Iterable<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry> values) {
                    if (detailEntryBuilder_ == null) {
                        ensureDetailEntryIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, detailEntry_);
                        onChanged();
                    } else {
                        detailEntryBuilder_.addAllMessages(values);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearDetailEntry() {
                    if (detailEntryBuilder_ == null) {
                        detailEntry_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000001);
                        onChanged();
                    } else {
                        detailEntryBuilder_.clear();
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder removeDetailEntry(int index) {
                    if (detailEntryBuilder_ == null) {
                        ensureDetailEntryIsMutable();
                        detailEntry_.remove(index);
                        onChanged();
                    } else {
                        detailEntryBuilder_.remove(index);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.@org.checkerframework.checker.tainting.qual.Tainted Builder getDetailEntryBuilder(int index) {
                    return getDetailEntryFieldBuilder().getBuilder(index);
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted DetailEntryOrBuilder getDetailEntryOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (detailEntryBuilder_ == null) {
                        return detailEntry_.get(index);
                    } else {
                        return detailEntryBuilder_.getMessageOrBuilder(index);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntryOrBuilder> getDetailEntryOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (detailEntryBuilder_ != null) {
                        return detailEntryBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(detailEntry_);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.@org.checkerframework.checker.tainting.qual.Tainted Builder addDetailEntryBuilder() {
                    return getDetailEntryFieldBuilder().addBuilder(org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.getDefaultInstance());
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.@org.checkerframework.checker.tainting.qual.Tainted Builder addDetailEntryBuilder(int index) {
                    return getDetailEntryFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.getDefaultInstance());
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Trace.DetailEntry detail_entry = 6;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder> getDetailEntryBuilderList() {
                    return getDetailEntryFieldBuilder().getBuilderList();
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntryOrBuilder> getDetailEntryFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (detailEntryBuilder_ == null) {
                        detailEntryBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntry.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.DetailEntryOrBuilder>(detailEntry_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
                        detailEntry_ = null;
                    }
                    return detailEntryBuilder_;
                }

                private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.Proto.StackTraceElement> locationStackTraceElement_ = java.util.Collections.emptyList();

                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.locationStackTraceElementBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                private void ensureLocationStackTraceElementIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (!((bitField0_ & 0x00000002) != 0)) {
                        locationStackTraceElement_ = new java.util.ArrayList<org.glowroot.wire.api.model.Proto.StackTraceElement>(locationStackTraceElement_);
                        bitField0_ |= 0x00000002;
                    }
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.Proto.StackTraceElement, org.glowroot.wire.api.model.Proto.StackTraceElement.Builder, org.glowroot.wire.api.model.Proto.StackTraceElementOrBuilder> locationStackTraceElementBuilder_;

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.Proto.StackTraceElement> getLocationStackTraceElementList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (locationStackTraceElementBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(locationStackTraceElement_);
                    } else {
                        return locationStackTraceElementBuilder_.getMessageList();
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
                 */
                public  @org.checkerframework.checker.tainting.qual.Tainted int getLocationStackTraceElementCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (locationStackTraceElementBuilder_ == null) {
                        return locationStackTraceElement_.size();
                    } else {
                        return locationStackTraceElementBuilder_.getCount();
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
                 */
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted StackTraceElement getLocationStackTraceElement(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (locationStackTraceElementBuilder_ == null) {
                        return locationStackTraceElement_.get(index);
                    } else {
                        return locationStackTraceElementBuilder_.getMessage(index);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setLocationStackTraceElement(int index, org.glowroot.wire.api.model.Proto.StackTraceElement value) {
                    if (locationStackTraceElementBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureLocationStackTraceElementIsMutable();
                        locationStackTraceElement_.set(index, value);
                        onChanged();
                    } else {
                        locationStackTraceElementBuilder_.setMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setLocationStackTraceElement(int index, org.glowroot.wire.api.model.Proto.StackTraceElement.Builder builderForValue) {
                    if (locationStackTraceElementBuilder_ == null) {
                        ensureLocationStackTraceElementIsMutable();
                        locationStackTraceElement_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        locationStackTraceElementBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addLocationStackTraceElement(org.glowroot.wire.api.model.Proto.StackTraceElement value) {
                    if (locationStackTraceElementBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureLocationStackTraceElementIsMutable();
                        locationStackTraceElement_.add(value);
                        onChanged();
                    } else {
                        locationStackTraceElementBuilder_.addMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addLocationStackTraceElement(int index, org.glowroot.wire.api.model.Proto.StackTraceElement value) {
                    if (locationStackTraceElementBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureLocationStackTraceElementIsMutable();
                        locationStackTraceElement_.add(index, value);
                        onChanged();
                    } else {
                        locationStackTraceElementBuilder_.addMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addLocationStackTraceElement(org.glowroot.wire.api.model.Proto.StackTraceElement.Builder builderForValue) {
                    if (locationStackTraceElementBuilder_ == null) {
                        ensureLocationStackTraceElementIsMutable();
                        locationStackTraceElement_.add(builderForValue.build());
                        onChanged();
                    } else {
                        locationStackTraceElementBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addLocationStackTraceElement(int index, org.glowroot.wire.api.model.Proto.StackTraceElement.Builder builderForValue) {
                    if (locationStackTraceElementBuilder_ == null) {
                        ensureLocationStackTraceElementIsMutable();
                        locationStackTraceElement_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        locationStackTraceElementBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllLocationStackTraceElement(java.lang.Iterable<? extends org.glowroot.wire.api.model.Proto.StackTraceElement> values) {
                    if (locationStackTraceElementBuilder_ == null) {
                        ensureLocationStackTraceElementIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, locationStackTraceElement_);
                        onChanged();
                    } else {
                        locationStackTraceElementBuilder_.addAllMessages(values);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearLocationStackTraceElement() {
                    if (locationStackTraceElementBuilder_ == null) {
                        locationStackTraceElement_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000002);
                        onChanged();
                    } else {
                        locationStackTraceElementBuilder_.clear();
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder removeLocationStackTraceElement(int index) {
                    if (locationStackTraceElementBuilder_ == null) {
                        ensureLocationStackTraceElementIsMutable();
                        locationStackTraceElement_.remove(index);
                        onChanged();
                    } else {
                        locationStackTraceElementBuilder_.remove(index);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
                 */
                public org.glowroot.wire.api.model.Proto.StackTraceElement.@org.checkerframework.checker.tainting.qual.Tainted Builder getLocationStackTraceElementBuilder(int index) {
                    return getLocationStackTraceElementFieldBuilder().getBuilder(index);
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
                 */
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted StackTraceElementOrBuilder getLocationStackTraceElementOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (locationStackTraceElementBuilder_ == null) {
                        return locationStackTraceElement_.get(index);
                    } else {
                        return locationStackTraceElementBuilder_.getMessageOrBuilder(index);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.Proto.StackTraceElementOrBuilder> getLocationStackTraceElementOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (locationStackTraceElementBuilder_ != null) {
                        return locationStackTraceElementBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(locationStackTraceElement_);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
                 */
                public org.glowroot.wire.api.model.Proto.StackTraceElement.@org.checkerframework.checker.tainting.qual.Tainted Builder addLocationStackTraceElementBuilder() {
                    return getLocationStackTraceElementFieldBuilder().addBuilder(org.glowroot.wire.api.model.Proto.StackTraceElement.getDefaultInstance());
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
                 */
                public org.glowroot.wire.api.model.Proto.StackTraceElement.@org.checkerframework.checker.tainting.qual.Tainted Builder addLocationStackTraceElementBuilder(int index) {
                    return getLocationStackTraceElementFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.Proto.StackTraceElement.getDefaultInstance());
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.StackTraceElement location_stack_trace_element = 7;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.Proto.StackTraceElement.Builder> getLocationStackTraceElementBuilderList() {
                    return getLocationStackTraceElementFieldBuilder().getBuilderList();
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.Proto.StackTraceElement, org.glowroot.wire.api.model.Proto.StackTraceElement.Builder, org.glowroot.wire.api.model.Proto.StackTraceElementOrBuilder> getLocationStackTraceElementFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (locationStackTraceElementBuilder_ == null) {
                        locationStackTraceElementBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.Proto.StackTraceElement, org.glowroot.wire.api.model.Proto.StackTraceElement.Builder, org.glowroot.wire.api.model.Proto.StackTraceElementOrBuilder>(locationStackTraceElement_, ((bitField0_ & 0x00000002) != 0), getParentForChildren(), isClean());
                        locationStackTraceElement_ = null;
                    }
                    return locationStackTraceElementBuilder_;
                }

                private org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error error_;

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Error, org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.ErrorOrBuilder> errorBuilder_;

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Error error = 8;</code>
                 * @return Whether the error field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasError(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return errorBuilder_ != null || error_ != null;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Error error = 8;</code>
                 * @return The error.
                 */
                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.errorBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error getError(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (errorBuilder_ == null) {
                        return error_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.getDefaultInstance() : error_;
                    } else {
                        return errorBuilder_.getMessage();
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Error error = 8;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setError(org.glowroot.wire.api.model.TraceOuterClass.Trace.Error value) {
                    if (errorBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        error_ = value;
                        onChanged();
                    } else {
                        errorBuilder_.setMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Error error = 8;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setError(org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.Builder builderForValue) {
                    if (errorBuilder_ == null) {
                        error_ = builderForValue.build();
                        onChanged();
                    } else {
                        errorBuilder_.setMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Error error = 8;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeError(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Error value) {
                    if (errorBuilder_ == null) {
                        if (error_ != null) {
                            error_ = org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.newBuilder(error_).mergeFrom(value).buildPartial();
                        } else {
                            error_ = value;
                        }
                        onChanged();
                    } else {
                        errorBuilder_.mergeFrom(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Error error = 8;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearError() {
                    if (errorBuilder_ == null) {
                        error_ = null;
                        onChanged();
                    } else {
                        error_ = null;
                        errorBuilder_ = null;
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Error error = 8;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.@org.checkerframework.checker.tainting.qual.Tainted Builder getErrorBuilder() {
                    onChanged();
                    return getErrorFieldBuilder().getBuilder();
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Error error = 8;</code>
                 */
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted ErrorOrBuilder getErrorOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (errorBuilder_ != null) {
                        return errorBuilder_.getMessageOrBuilder();
                    } else {
                        return error_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.getDefaultInstance() : error_;
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.Trace.Error error = 8;</code>
                 */
                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Error, org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.ErrorOrBuilder> getErrorFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (errorBuilder_ == null) {
                        errorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Error, org.glowroot.wire.api.model.TraceOuterClass.Trace.Error.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.ErrorOrBuilder>(getError(), getParentForChildren(), isClean());
                        error_ = null;
                    }
                    return errorBuilder_;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Trace.Entry)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Trace.Entry)
            private static final org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Entry> PARSER = new com.google.protobuf.AbstractParser<Entry>() {

                public Entry parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new Entry(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Entry> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Entry> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Entry this) {
                return DEFAULT_INSTANCE;
            }
        }

        public interface QueryEntryMessageOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Trace.QueryEntryMessage)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <code>int32 shared_query_text_index = 1;</code>
             * @return The sharedQueryTextIndex.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted int getSharedQueryTextIndex();

            /**
             * <code>string prefix = 2;</code>
             * @return The prefix.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getPrefix();

            /**
             * <code>string prefix = 2;</code>
             * @return The bytes for prefix.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getPrefixBytes();

            /**
             * <code>string suffix = 3;</code>
             * @return The suffix.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getSuffix();

            /**
             * <code>string suffix = 3;</code>
             * @return The bytes for suffix.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getSuffixBytes();
        }

        /**
         * Protobuf type {@code org_glowroot_wire_api_model.Trace.QueryEntryMessage}
         */
        public static final class QueryEntryMessage extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Trace.QueryEntryMessage)
        QueryEntryMessageOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use QueryEntryMessage.newBuilder() to construct.
            private QueryEntryMessage(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.prefix_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.suffix_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private QueryEntryMessage() {
                prefix_ = "";
                suffix_ = "";
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.prefix_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new QueryEntryMessage();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage this) {
                return this.unknownFields;
            }

            private QueryEntryMessage(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 8:
                                {
                                    sharedQueryTextIndex_ = input.readInt32();
                                    break;
                                }
                            case 18:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    prefix_ = s;
                                    break;
                                }
                            case 26:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    suffix_ = s;
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_QueryEntryMessage_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage this) {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_QueryEntryMessage_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage.Builder.class);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int SHARED_QUERY_TEXT_INDEX_FIELD_NUMBER = 1;

            private  @org.checkerframework.checker.tainting.qual.Tainted int sharedQueryTextIndex_;

            /**
             * <code>int32 shared_query_text_index = 1;</code>
             * @return The sharedQueryTextIndex.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted int getSharedQueryTextIndex(@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage this) {
                return sharedQueryTextIndex_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int PREFIX_FIELD_NUMBER = 2;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object prefix_;

            /**
             * <code>string prefix = 2;</code>
             * @return The prefix.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getPrefix(@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage this) {
                java.lang.Object ref = prefix_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    prefix_ = s;
                    return s;
                }
            }

            /**
             * <code>string prefix = 2;</code>
             * @return The bytes for prefix.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getPrefixBytes(@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage this) {
                java.lang.Object ref = prefix_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    prefix_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int SUFFIX_FIELD_NUMBER = 3;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object suffix_;

            /**
             * <code>string suffix = 3;</code>
             * @return The suffix.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getSuffix(@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage this) {
                java.lang.Object ref = suffix_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    suffix_ = s;
                    return s;
                }
            }

            /**
             * <code>string suffix = 3;</code>
             * @return The bytes for suffix.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getSuffixBytes(@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage this) {
                java.lang.Object ref = suffix_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    suffix_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                if (sharedQueryTextIndex_ != 0) {
                    output.writeInt32(1, sharedQueryTextIndex_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(prefix_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 2, prefix_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(suffix_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 3, suffix_);
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if (sharedQueryTextIndex_ != 0) {
                    size += com.google.protobuf.CodedOutputStream.computeInt32Size(1, sharedQueryTextIndex_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(prefix_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, prefix_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(suffix_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, suffix_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage other = (org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage) obj;
                if (getSharedQueryTextIndex() != other.getSharedQueryTextIndex())
                    return false;
                if (!getPrefix().equals(other.getPrefix()))
                    return false;
                if (!getSuffix().equals(other.getSuffix()))
                    return false;
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + SHARED_QUERY_TEXT_INDEX_FIELD_NUMBER;
                hash = (53 * hash) + getSharedQueryTextIndex();
                hash = (37 * hash) + PREFIX_FIELD_NUMBER;
                hash = (53 * hash) + getPrefix().hashCode();
                hash = (37 * hash) + SUFFIX_FIELD_NUMBER;
                hash = (53 * hash) + getSuffix().hashCode();
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code org_glowroot_wire_api_model.Trace.QueryEntryMessage}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Trace.QueryEntryMessage)
            org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessageOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_QueryEntryMessage_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_QueryEntryMessage_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                @org.checkerframework.dataflow.qual.Pure
                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                    }
                }

                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.prefix_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.suffix_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    sharedQueryTextIndex_ = 0;
                    prefix_ = "";
                    suffix_ = "";
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_QueryEntryMessage_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage result = new org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage(this);
                    result.sharedQueryTextIndex_ = sharedQueryTextIndex_;
                    result.prefix_ = prefix_;
                    result.suffix_ = suffix_;
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage) {
                        return mergeFrom((org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage other) {
                    if (other == org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage.getDefaultInstance())
                        return this;
                    if (other.getSharedQueryTextIndex() != 0) {
                        setSharedQueryTextIndex(other.getSharedQueryTextIndex());
                    }
                    if (!other.getPrefix().isEmpty()) {
                        prefix_ = other.prefix_;
                        onChanged();
                    }
                    if (!other.getSuffix().isEmpty()) {
                        suffix_ = other.suffix_;
                        onChanged();
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted int sharedQueryTextIndex_;

                /**
                 * <code>int32 shared_query_text_index = 1;</code>
                 * @return The sharedQueryTextIndex.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted int getSharedQueryTextIndex(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return sharedQueryTextIndex_;
                }

                /**
                 * <code>int32 shared_query_text_index = 1;</code>
                 * @param value The sharedQueryTextIndex to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setSharedQueryTextIndex(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int value) {
                    sharedQueryTextIndex_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>int32 shared_query_text_index = 1;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearSharedQueryTextIndex() {
                    sharedQueryTextIndex_ = 0;
                    onChanged();
                    return this;
                }

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object prefix_ = "";

                /**
                 * <code>string prefix = 2;</code>
                 * @return The prefix.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getPrefix(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = prefix_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        prefix_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <code>string prefix = 2;</code>
                 * @return The bytes for prefix.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getPrefixBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = prefix_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        prefix_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>string prefix = 2;</code>
                 * @param value The prefix to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setPrefix(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    prefix_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>string prefix = 2;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearPrefix() {
                    prefix_ = getDefaultInstance().getPrefix();
                    onChanged();
                    return this;
                }

                /**
                 * <code>string prefix = 2;</code>
                 * @param value The bytes for prefix to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setPrefixBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    prefix_ = value;
                    onChanged();
                    return this;
                }

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object suffix_ = "";

                /**
                 * <code>string suffix = 3;</code>
                 * @return The suffix.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getSuffix(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = suffix_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        suffix_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <code>string suffix = 3;</code>
                 * @return The bytes for suffix.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getSuffixBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = suffix_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        suffix_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>string suffix = 3;</code>
                 * @param value The suffix to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setSuffix(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    suffix_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>string suffix = 3;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearSuffix() {
                    suffix_ = getDefaultInstance().getSuffix();
                    onChanged();
                    return this;
                }

                /**
                 * <code>string suffix = 3;</code>
                 * @param value The bytes for suffix to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setSuffixBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    suffix_ = value;
                    onChanged();
                    return this;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Trace.QueryEntryMessage)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Trace.QueryEntryMessage)
            private static final org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.TraceOuterClass.Trace.QueryEntryMessage();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<QueryEntryMessage> PARSER = new com.google.protobuf.AbstractParser<QueryEntryMessage>() {

                public QueryEntryMessage parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new QueryEntryMessage(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<QueryEntryMessage> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<QueryEntryMessage> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted QueryEntryMessage this) {
                return DEFAULT_INSTANCE;
            }
        }

        public interface SharedQueryTextOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Trace.SharedQueryText)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <code>string full_text = 1;</code>
             * @return The fullText.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getFullText();

            /**
             * <code>string full_text = 1;</code>
             * @return The bytes for fullText.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getFullTextBytes();

            /**
             * <pre>
             * sent instead of full_text when full_text_sha1 sent recently
             * </pre>
             *
             * <code>string truncated_text = 2;</code>
             * @return The truncatedText.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getTruncatedText();

            /**
             * <pre>
             * sent instead of full_text when full_text_sha1 sent recently
             * </pre>
             *
             * <code>string truncated_text = 2;</code>
             * @return The bytes for truncatedText.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTruncatedTextBytes();

            /**
             * <pre>
             * (truncated to 120 characters)
             * </pre>
             *
             * <code>string truncated_end_text = 3;</code>
             * @return The truncatedEndText.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getTruncatedEndText();

            /**
             * <pre>
             * (truncated to 120 characters)
             * </pre>
             *
             * <code>string truncated_end_text = 3;</code>
             * @return The bytes for truncatedEndText.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTruncatedEndTextBytes();

            /**
             * <pre>
             * (truncated to 120 characters)
             * </pre>
             *
             * <code>string full_text_sha1 = 4;</code>
             * @return The fullTextSha1.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getFullTextSha1();

            /**
             * <pre>
             * (truncated to 120 characters)
             * </pre>
             *
             * <code>string full_text_sha1 = 4;</code>
             * @return The bytes for fullTextSha1.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getFullTextSha1Bytes();
        }

        /**
         * Protobuf type {@code org_glowroot_wire_api_model.Trace.SharedQueryText}
         */
        public static final class SharedQueryText extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Trace.SharedQueryText)
        SharedQueryTextOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use SharedQueryText.newBuilder() to construct.
            private SharedQueryText(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.fullTextSha1_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.fullText_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.truncatedEndText_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.truncatedText_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private SharedQueryText() {
                fullText_ = "";
                truncatedText_ = "";
                truncatedEndText_ = "";
                fullTextSha1_ = "";
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.fullTextSha1_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new SharedQueryText();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                return this.unknownFields;
            }

            private SharedQueryText(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    fullText_ = s;
                                    break;
                                }
                            case 18:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    truncatedText_ = s;
                                    break;
                                }
                            case 26:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    truncatedEndText_ = s;
                                    break;
                                }
                            case 34:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    fullTextSha1_ = s;
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_SharedQueryText_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_SharedQueryText_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText.Builder.class);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int FULL_TEXT_FIELD_NUMBER = 1;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object fullText_;

            /**
             * <code>string full_text = 1;</code>
             * @return The fullText.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getFullText(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                java.lang.Object ref = fullText_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    fullText_ = s;
                    return s;
                }
            }

            /**
             * <code>string full_text = 1;</code>
             * @return The bytes for fullText.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getFullTextBytes(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                java.lang.Object ref = fullText_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    fullText_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TRUNCATED_TEXT_FIELD_NUMBER = 2;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object truncatedText_;

            /**
             * <pre>
             * sent instead of full_text when full_text_sha1 sent recently
             * </pre>
             *
             * <code>string truncated_text = 2;</code>
             * @return The truncatedText.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getTruncatedText(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                java.lang.Object ref = truncatedText_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    truncatedText_ = s;
                    return s;
                }
            }

            /**
             * <pre>
             * sent instead of full_text when full_text_sha1 sent recently
             * </pre>
             *
             * <code>string truncated_text = 2;</code>
             * @return The bytes for truncatedText.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTruncatedTextBytes(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                java.lang.Object ref = truncatedText_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    truncatedText_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TRUNCATED_END_TEXT_FIELD_NUMBER = 3;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object truncatedEndText_;

            /**
             * <pre>
             * (truncated to 120 characters)
             * </pre>
             *
             * <code>string truncated_end_text = 3;</code>
             * @return The truncatedEndText.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getTruncatedEndText(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                java.lang.Object ref = truncatedEndText_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    truncatedEndText_ = s;
                    return s;
                }
            }

            /**
             * <pre>
             * (truncated to 120 characters)
             * </pre>
             *
             * <code>string truncated_end_text = 3;</code>
             * @return The bytes for truncatedEndText.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTruncatedEndTextBytes(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                java.lang.Object ref = truncatedEndText_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    truncatedEndText_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int FULL_TEXT_SHA1_FIELD_NUMBER = 4;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object fullTextSha1_;

            /**
             * <pre>
             * (truncated to 120 characters)
             * </pre>
             *
             * <code>string full_text_sha1 = 4;</code>
             * @return The fullTextSha1.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getFullTextSha1(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                java.lang.Object ref = fullTextSha1_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    fullTextSha1_ = s;
                    return s;
                }
            }

            /**
             * <pre>
             * (truncated to 120 characters)
             * </pre>
             *
             * <code>string full_text_sha1 = 4;</code>
             * @return The bytes for fullTextSha1.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getFullTextSha1Bytes(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                java.lang.Object ref = fullTextSha1_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    fullTextSha1_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fullText_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 1, fullText_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(truncatedText_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 2, truncatedText_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(truncatedEndText_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 3, truncatedEndText_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fullTextSha1_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 4, fullTextSha1_);
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fullText_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, fullText_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(truncatedText_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, truncatedText_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(truncatedEndText_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, truncatedEndText_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fullTextSha1_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, fullTextSha1_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText other = (org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText) obj;
                if (!getFullText().equals(other.getFullText()))
                    return false;
                if (!getTruncatedText().equals(other.getTruncatedText()))
                    return false;
                if (!getTruncatedEndText().equals(other.getTruncatedEndText()))
                    return false;
                if (!getFullTextSha1().equals(other.getFullTextSha1()))
                    return false;
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + FULL_TEXT_FIELD_NUMBER;
                hash = (53 * hash) + getFullText().hashCode();
                hash = (37 * hash) + TRUNCATED_TEXT_FIELD_NUMBER;
                hash = (53 * hash) + getTruncatedText().hashCode();
                hash = (37 * hash) + TRUNCATED_END_TEXT_FIELD_NUMBER;
                hash = (53 * hash) + getTruncatedEndText().hashCode();
                hash = (37 * hash) + FULL_TEXT_SHA1_FIELD_NUMBER;
                hash = (53 * hash) + getFullTextSha1().hashCode();
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code org_glowroot_wire_api_model.Trace.SharedQueryText}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Trace.SharedQueryText)
            org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryTextOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_SharedQueryText_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_SharedQueryText_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                @org.checkerframework.dataflow.qual.Pure
                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                    }
                }

                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.fullTextSha1_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.fullText_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.truncatedEndText_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.truncatedText_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    fullText_ = "";
                    truncatedText_ = "";
                    truncatedEndText_ = "";
                    fullTextSha1_ = "";
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_SharedQueryText_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText result = new org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText(this);
                    result.fullText_ = fullText_;
                    result.truncatedText_ = truncatedText_;
                    result.truncatedEndText_ = truncatedEndText_;
                    result.fullTextSha1_ = fullTextSha1_;
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText) {
                        return mergeFrom((org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText other) {
                    if (other == org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText.getDefaultInstance())
                        return this;
                    if (!other.getFullText().isEmpty()) {
                        fullText_ = other.fullText_;
                        onChanged();
                    }
                    if (!other.getTruncatedText().isEmpty()) {
                        truncatedText_ = other.truncatedText_;
                        onChanged();
                    }
                    if (!other.getTruncatedEndText().isEmpty()) {
                        truncatedEndText_ = other.truncatedEndText_;
                        onChanged();
                    }
                    if (!other.getFullTextSha1().isEmpty()) {
                        fullTextSha1_ = other.fullTextSha1_;
                        onChanged();
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object fullText_ = "";

                /**
                 * <code>string full_text = 1;</code>
                 * @return The fullText.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getFullText(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = fullText_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        fullText_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <code>string full_text = 1;</code>
                 * @return The bytes for fullText.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getFullTextBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = fullText_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        fullText_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>string full_text = 1;</code>
                 * @param value The fullText to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setFullText(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    fullText_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>string full_text = 1;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearFullText() {
                    fullText_ = getDefaultInstance().getFullText();
                    onChanged();
                    return this;
                }

                /**
                 * <code>string full_text = 1;</code>
                 * @param value The bytes for fullText to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setFullTextBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    fullText_ = value;
                    onChanged();
                    return this;
                }

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object truncatedText_ = "";

                /**
                 * <pre>
                 * sent instead of full_text when full_text_sha1 sent recently
                 * </pre>
                 *
                 * <code>string truncated_text = 2;</code>
                 * @return The truncatedText.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getTruncatedText(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = truncatedText_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        truncatedText_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <pre>
                 * sent instead of full_text when full_text_sha1 sent recently
                 * </pre>
                 *
                 * <code>string truncated_text = 2;</code>
                 * @return The bytes for truncatedText.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTruncatedTextBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = truncatedText_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        truncatedText_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <pre>
                 * sent instead of full_text when full_text_sha1 sent recently
                 * </pre>
                 *
                 * <code>string truncated_text = 2;</code>
                 * @param value The truncatedText to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTruncatedText(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    truncatedText_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * sent instead of full_text when full_text_sha1 sent recently
                 * </pre>
                 *
                 * <code>string truncated_text = 2;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTruncatedText() {
                    truncatedText_ = getDefaultInstance().getTruncatedText();
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * sent instead of full_text when full_text_sha1 sent recently
                 * </pre>
                 *
                 * <code>string truncated_text = 2;</code>
                 * @param value The bytes for truncatedText to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTruncatedTextBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    truncatedText_ = value;
                    onChanged();
                    return this;
                }

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object truncatedEndText_ = "";

                /**
                 * <pre>
                 * (truncated to 120 characters)
                 * </pre>
                 *
                 * <code>string truncated_end_text = 3;</code>
                 * @return The truncatedEndText.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getTruncatedEndText(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = truncatedEndText_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        truncatedEndText_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <pre>
                 * (truncated to 120 characters)
                 * </pre>
                 *
                 * <code>string truncated_end_text = 3;</code>
                 * @return The bytes for truncatedEndText.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTruncatedEndTextBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = truncatedEndText_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        truncatedEndText_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <pre>
                 * (truncated to 120 characters)
                 * </pre>
                 *
                 * <code>string truncated_end_text = 3;</code>
                 * @param value The truncatedEndText to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTruncatedEndText(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    truncatedEndText_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * (truncated to 120 characters)
                 * </pre>
                 *
                 * <code>string truncated_end_text = 3;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTruncatedEndText() {
                    truncatedEndText_ = getDefaultInstance().getTruncatedEndText();
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * (truncated to 120 characters)
                 * </pre>
                 *
                 * <code>string truncated_end_text = 3;</code>
                 * @param value The bytes for truncatedEndText to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTruncatedEndTextBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    truncatedEndText_ = value;
                    onChanged();
                    return this;
                }

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object fullTextSha1_ = "";

                /**
                 * <pre>
                 * (truncated to 120 characters)
                 * </pre>
                 *
                 * <code>string full_text_sha1 = 4;</code>
                 * @return The fullTextSha1.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getFullTextSha1(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = fullTextSha1_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        fullTextSha1_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <pre>
                 * (truncated to 120 characters)
                 * </pre>
                 *
                 * <code>string full_text_sha1 = 4;</code>
                 * @return The bytes for fullTextSha1.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getFullTextSha1Bytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = fullTextSha1_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        fullTextSha1_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <pre>
                 * (truncated to 120 characters)
                 * </pre>
                 *
                 * <code>string full_text_sha1 = 4;</code>
                 * @param value The fullTextSha1 to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setFullTextSha1(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    fullTextSha1_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * (truncated to 120 characters)
                 * </pre>
                 *
                 * <code>string full_text_sha1 = 4;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearFullTextSha1() {
                    fullTextSha1_ = getDefaultInstance().getFullTextSha1();
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * (truncated to 120 characters)
                 * </pre>
                 *
                 * <code>string full_text_sha1 = 4;</code>
                 * @param value The bytes for fullTextSha1 to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setFullTextSha1Bytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    fullTextSha1_ = value;
                    onChanged();
                    return this;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Trace.SharedQueryText)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Trace.SharedQueryText)
            private static final org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<SharedQueryText> PARSER = new com.google.protobuf.AbstractParser<SharedQueryText>() {

                public SharedQueryText parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new SharedQueryText(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<SharedQueryText> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<SharedQueryText> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                return DEFAULT_INSTANCE;
            }
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int ID_FIELD_NUMBER = 1;

        private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object id_;

        /**
         * <pre>
         * this is a uuid
         * </pre>
         *
         * <code>string id = 1;</code>
         * @return The id.
         */
        public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getId(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            java.lang.Object ref = id_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                id_ = s;
                return s;
            }
        }

        /**
         * <pre>
         * this is a uuid
         * </pre>
         *
         * <code>string id = 1;</code>
         * @return The bytes for id.
         */
        public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getIdBytes(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            java.lang.Object ref = id_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                id_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int HEADER_FIELD_NUMBER = 2;

        private org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header header_;

        /**
         * <code>.org_glowroot_wire_api_model.Trace.Header header = 2;</code>
         * @return Whether the header field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasHeader(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return header_ != null;
        }

        /**
         * <code>.org_glowroot_wire_api_model.Trace.Header header = 2;</code>
         * @return The header.
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header getHeader(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return header_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.Header.getDefaultInstance() : header_;
        }

        /**
         * <code>.org_glowroot_wire_api_model.Trace.Header header = 2;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted HeaderOrBuilder getHeaderOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return getHeader();
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int ENTRY_FIELD_NUMBER = 3;

        private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry> entry_;

        /**
         * <pre>
         * entry ordering is pre-order depth-first
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry> getEntryList(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return entry_;
        }

        /**
         * <pre>
         * entry ordering is pre-order depth-first
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.EntryOrBuilder> getEntryOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return entry_;
        }

        /**
         * <pre>
         * entry ordering is pre-order depth-first
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted int getEntryCount(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return entry_.size();
        }

        /**
         * <pre>
         * entry ordering is pre-order depth-first
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry getEntry(@org.checkerframework.checker.tainting.qual.Tainted Trace this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
            return entry_.get(index);
        }

        /**
         * <pre>
         * entry ordering is pre-order depth-first
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted EntryOrBuilder getEntryOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Trace this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
            return entry_.get(index);
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int QUERY_FIELD_NUMBER = 9;

        private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query> query_;

        /**
         * <pre>
         * there are typically multiple "root" nodes (with depth=0)
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query> getQueryList(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return query_;
        }

        /**
         * <pre>
         * there are typically multiple "root" nodes (with depth=0)
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.QueryOrBuilder> getQueryOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return query_;
        }

        /**
         * <pre>
         * there are typically multiple "root" nodes (with depth=0)
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted int getQueryCount(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return query_.size();
        }

        /**
         * <pre>
         * there are typically multiple "root" nodes (with depth=0)
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query getQuery(@org.checkerframework.checker.tainting.qual.Tainted Trace this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
            return query_.get(index);
        }

        /**
         * <pre>
         * there are typically multiple "root" nodes (with depth=0)
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted QueryOrBuilder getQueryOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Trace this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
            return query_.get(index);
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int MAIN_THREAD_PROFILE_FIELD_NUMBER = 4;

        private org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile mainThreadProfile_;

        /**
         * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 4;</code>
         * @return Whether the mainThreadProfile field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasMainThreadProfile(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return mainThreadProfile_ != null;
        }

        /**
         * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 4;</code>
         * @return The mainThreadProfile.
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile getMainThreadProfile(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return mainThreadProfile_ == null ? org.glowroot.wire.api.model.ProfileOuterClass.Profile.getDefaultInstance() : mainThreadProfile_;
        }

        /**
         * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 4;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted ProfileOrBuilder getMainThreadProfileOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return getMainThreadProfile();
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int AUX_THREAD_PROFILE_FIELD_NUMBER = 5;

        private org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile auxThreadProfile_;

        /**
         * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 5;</code>
         * @return Whether the auxThreadProfile field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasAuxThreadProfile(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return auxThreadProfile_ != null;
        }

        /**
         * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 5;</code>
         * @return The auxThreadProfile.
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile getAuxThreadProfile(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return auxThreadProfile_ == null ? org.glowroot.wire.api.model.ProfileOuterClass.Profile.getDefaultInstance() : auxThreadProfile_;
        }

        /**
         * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 5;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted ProfileOrBuilder getAuxThreadProfileOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return getAuxThreadProfile();
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int UPDATE_FIELD_NUMBER = 6;

        private  @org.checkerframework.checker.tainting.qual.Tainted boolean update_;

        /**
         * <pre>
         * optimization so the central collector does not need to check for prior partial
         * </pre>
         *
         * <code>bool update = 6;</code>
         * @return The update.
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted boolean getUpdate(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return update_;
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int SHARED_QUERY_TEXT_FIELD_NUMBER = 8;

        private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText> sharedQueryText_;

        /**
         * <pre>
         * trace in common case where this is not an update
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText> getSharedQueryTextList(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return sharedQueryText_;
        }

        /**
         * <pre>
         * trace in common case where this is not an update
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryTextOrBuilder> getSharedQueryTextOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return sharedQueryText_;
        }

        /**
         * <pre>
         * trace in common case where this is not an update
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted int getSharedQueryTextCount(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return sharedQueryText_.size();
        }

        /**
         * <pre>
         * trace in common case where this is not an update
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText getSharedQueryText(@org.checkerframework.checker.tainting.qual.Tainted Trace this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
            return sharedQueryText_.get(index);
        }

        /**
         * <pre>
         * trace in common case where this is not an update
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryTextOrBuilder getSharedQueryTextOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Trace this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
            return sharedQueryText_.get(index);
        }

        private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

        public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted Trace this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
            }
            if (header_ != null) {
                output.writeMessage(2, getHeader());
            }
            for (int i = 0; i < entry_.size(); i++) {
                output.writeMessage(3, entry_.get(i));
            }
            if (mainThreadProfile_ != null) {
                output.writeMessage(4, getMainThreadProfile());
            }
            if (auxThreadProfile_ != null) {
                output.writeMessage(5, getAuxThreadProfile());
            }
            if (update_ != false) {
                output.writeBool(6, update_);
            }
            for (int i = 0; i < sharedQueryText_.size(); i++) {
                output.writeMessage(8, sharedQueryText_.get(i));
            }
            for (int i = 0; i < query_.size(); i++) {
                output.writeMessage(9, query_.get(i));
            }
            unknownFields.writeTo(output);
        }

        public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            int size = memoizedSize;
            if (size != -1)
                return size;
            size = 0;
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
            }
            if (header_ != null) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getHeader());
            }
            for (int i = 0; i < entry_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, entry_.get(i));
            }
            if (mainThreadProfile_ != null) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, getMainThreadProfile());
            }
            if (auxThreadProfile_ != null) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, getAuxThreadProfile());
            }
            if (update_ != false) {
                size += com.google.protobuf.CodedOutputStream.computeBoolSize(6, update_);
            }
            for (int i = 0; i < sharedQueryText_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(8, sharedQueryText_.get(i));
            }
            for (int i = 0; i < query_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(9, query_.get(i));
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted Trace this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace)) {
                return super.equals(obj);
            }
            org.glowroot.wire.api.model.TraceOuterClass.Trace other = (org.glowroot.wire.api.model.TraceOuterClass.Trace) obj;
            if (!getId().equals(other.getId()))
                return false;
            if (hasHeader() != other.hasHeader())
                return false;
            if (hasHeader()) {
                if (!getHeader().equals(other.getHeader()))
                    return false;
            }
            if (!getEntryList().equals(other.getEntryList()))
                return false;
            if (!getQueryList().equals(other.getQueryList()))
                return false;
            if (hasMainThreadProfile() != other.hasMainThreadProfile())
                return false;
            if (hasMainThreadProfile()) {
                if (!getMainThreadProfile().equals(other.getMainThreadProfile()))
                    return false;
            }
            if (hasAuxThreadProfile() != other.hasAuxThreadProfile())
                return false;
            if (hasAuxThreadProfile()) {
                if (!getAuxThreadProfile().equals(other.getAuxThreadProfile()))
                    return false;
            }
            if (getUpdate() != other.getUpdate())
                return false;
            if (!getSharedQueryTextList().equals(other.getSharedQueryTextList()))
                return false;
            if (!unknownFields.equals(other.unknownFields))
                return false;
            return true;
        }

        public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ID_FIELD_NUMBER;
            hash = (53 * hash) + getId().hashCode();
            if (hasHeader()) {
                hash = (37 * hash) + HEADER_FIELD_NUMBER;
                hash = (53 * hash) + getHeader().hashCode();
            }
            if (getEntryCount() > 0) {
                hash = (37 * hash) + ENTRY_FIELD_NUMBER;
                hash = (53 * hash) + getEntryList().hashCode();
            }
            if (getQueryCount() > 0) {
                hash = (37 * hash) + QUERY_FIELD_NUMBER;
                hash = (53 * hash) + getQueryList().hashCode();
            }
            if (hasMainThreadProfile()) {
                hash = (37 * hash) + MAIN_THREAD_PROFILE_FIELD_NUMBER;
                hash = (53 * hash) + getMainThreadProfile().hashCode();
            }
            if (hasAuxThreadProfile()) {
                hash = (37 * hash) + AUX_THREAD_PROFILE_FIELD_NUMBER;
                hash = (53 * hash) + getAuxThreadProfile().hashCode();
            }
            hash = (37 * hash) + UPDATE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getUpdate());
            if (getSharedQueryTextCount() > 0) {
                hash = (37 * hash) + SHARED_QUERY_TEXT_FIELD_NUMBER;
                hash = (53 * hash) + getSharedQueryTextList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static org.glowroot.wire.api.model.TraceOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Trace parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.glowroot.wire.api.model.TraceOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Trace parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.glowroot.wire.api.model.TraceOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Trace parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.glowroot.wire.api.model.TraceOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Trace parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.glowroot.wire.api.model.TraceOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Trace parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.glowroot.wire.api.model.TraceOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Trace parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.glowroot.wire.api.model.TraceOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Trace parseFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static org.glowroot.wire.api.model.TraceOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Trace parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.glowroot.wire.api.model.TraceOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Trace parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
        }

        public static org.glowroot.wire.api.model.TraceOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Trace parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.glowroot.wire.api.model.TraceOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Trace parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static org.glowroot.wire.api.model.TraceOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Trace parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return newBuilder();
        }

        public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.TraceOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Trace prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted Trace this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code org_glowroot_wire_api_model.Trace}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Trace)
        org.glowroot.wire.api.model.TraceOuterClass.TraceOrBuilder {

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.TraceOuterClass.Trace.class, org.glowroot.wire.api.model.TraceOuterClass.Trace.Builder.class);
            }

            // Construct using org.glowroot.wire.api.model.TraceOuterClass.Trace.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                    getEntryFieldBuilder();
                    getQueryFieldBuilder();
                    getSharedQueryTextFieldBuilder();
                }
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                super.clear();
                id_ = "";
                if (headerBuilder_ == null) {
                    header_ = null;
                } else {
                    header_ = null;
                    headerBuilder_ = null;
                }
                if (entryBuilder_ == null) {
                    entry_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    entryBuilder_.clear();
                }
                if (queryBuilder_ == null) {
                    query_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                    queryBuilder_.clear();
                }
                if (mainThreadProfileBuilder_ == null) {
                    mainThreadProfile_ = null;
                } else {
                    mainThreadProfile_ = null;
                    mainThreadProfileBuilder_ = null;
                }
                if (auxThreadProfileBuilder_ == null) {
                    auxThreadProfile_ = null;
                } else {
                    auxThreadProfile_ = null;
                    auxThreadProfileBuilder_ = null;
                }
                update_ = false;
                if (sharedQueryTextBuilder_ == null) {
                    sharedQueryText_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                } else {
                    sharedQueryTextBuilder_.clear();
                }
                return this;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return org.glowroot.wire.api.model.TraceOuterClass.internal_static_org_glowroot_wire_api_model_Trace_descriptor;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.TraceOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Trace getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return org.glowroot.wire.api.model.TraceOuterClass.Trace.getDefaultInstance();
            }

            public org.glowroot.wire.api.model.TraceOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Trace build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                org.glowroot.wire.api.model.TraceOuterClass.Trace result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public org.glowroot.wire.api.model.TraceOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Trace buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                org.glowroot.wire.api.model.TraceOuterClass.Trace result = new org.glowroot.wire.api.model.TraceOuterClass.Trace(this);
                int from_bitField0_ = bitField0_;
                result.id_ = id_;
                if (headerBuilder_ == null) {
                    result.header_ = header_;
                } else {
                    result.header_ = headerBuilder_.build();
                }
                if (entryBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) != 0)) {
                        entry_ = java.util.Collections.unmodifiableList(entry_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.entry_ = entry_;
                } else {
                    result.entry_ = entryBuilder_.build();
                }
                if (queryBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) != 0)) {
                        query_ = java.util.Collections.unmodifiableList(query_);
                        bitField0_ = (bitField0_ & ~0x00000002);
                    }
                    result.query_ = query_;
                } else {
                    result.query_ = queryBuilder_.build();
                }
                if (mainThreadProfileBuilder_ == null) {
                    result.mainThreadProfile_ = mainThreadProfile_;
                } else {
                    result.mainThreadProfile_ = mainThreadProfileBuilder_.build();
                }
                if (auxThreadProfileBuilder_ == null) {
                    result.auxThreadProfile_ = auxThreadProfile_;
                } else {
                    result.auxThreadProfile_ = auxThreadProfileBuilder_.build();
                }
                result.update_ = update_;
                if (sharedQueryTextBuilder_ == null) {
                    if (((bitField0_ & 0x00000004) != 0)) {
                        sharedQueryText_ = java.util.Collections.unmodifiableList(sharedQueryText_);
                        bitField0_ = (bitField0_ & ~0x00000004);
                    }
                    result.sharedQueryText_ = sharedQueryText_;
                } else {
                    result.sharedQueryText_ = sharedQueryTextBuilder_.build();
                }
                onBuilt();
                return result;
            }

            @org.checkerframework.dataflow.qual.SideEffectFree
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return super.clone();
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                return super.setField(field, value);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                return super.clearField(field);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                return super.setRepeatedField(field, index, value);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                return super.addRepeatedField(field, value);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                if (other instanceof org.glowroot.wire.api.model.TraceOuterClass.Trace) {
                    return mergeFrom((org.glowroot.wire.api.model.TraceOuterClass.Trace) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Trace other) {
                if (other == org.glowroot.wire.api.model.TraceOuterClass.Trace.getDefaultInstance())
                    return this;
                if (!other.getId().isEmpty()) {
                    id_ = other.id_;
                    onChanged();
                }
                if (other.hasHeader()) {
                    mergeHeader(other.getHeader());
                }
                if (entryBuilder_ == null) {
                    if (!other.entry_.isEmpty()) {
                        if (entry_.isEmpty()) {
                            entry_ = other.entry_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensureEntryIsMutable();
                            entry_.addAll(other.entry_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.entry_.isEmpty()) {
                        if (entryBuilder_.isEmpty()) {
                            entryBuilder_.dispose();
                            entryBuilder_ = null;
                            entry_ = other.entry_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            entryBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getEntryFieldBuilder() : null;
                        } else {
                            entryBuilder_.addAllMessages(other.entry_);
                        }
                    }
                }
                if (queryBuilder_ == null) {
                    if (!other.query_.isEmpty()) {
                        if (query_.isEmpty()) {
                            query_ = other.query_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                        } else {
                            ensureQueryIsMutable();
                            query_.addAll(other.query_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.query_.isEmpty()) {
                        if (queryBuilder_.isEmpty()) {
                            queryBuilder_.dispose();
                            queryBuilder_ = null;
                            query_ = other.query_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                            queryBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getQueryFieldBuilder() : null;
                        } else {
                            queryBuilder_.addAllMessages(other.query_);
                        }
                    }
                }
                if (other.hasMainThreadProfile()) {
                    mergeMainThreadProfile(other.getMainThreadProfile());
                }
                if (other.hasAuxThreadProfile()) {
                    mergeAuxThreadProfile(other.getAuxThreadProfile());
                }
                if (other.getUpdate() != false) {
                    setUpdate(other.getUpdate());
                }
                if (sharedQueryTextBuilder_ == null) {
                    if (!other.sharedQueryText_.isEmpty()) {
                        if (sharedQueryText_.isEmpty()) {
                            sharedQueryText_ = other.sharedQueryText_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                        } else {
                            ensureSharedQueryTextIsMutable();
                            sharedQueryText_.addAll(other.sharedQueryText_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.sharedQueryText_.isEmpty()) {
                        if (sharedQueryTextBuilder_.isEmpty()) {
                            sharedQueryTextBuilder_.dispose();
                            sharedQueryTextBuilder_ = null;
                            sharedQueryText_ = other.sharedQueryText_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                            sharedQueryTextBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getSharedQueryTextFieldBuilder() : null;
                        } else {
                            sharedQueryTextBuilder_.addAllMessages(other.sharedQueryText_);
                        }
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @org.checkerframework.dataflow.qual.Pure
            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return true;
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                org.glowroot.wire.api.model.TraceOuterClass.Trace parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (org.glowroot.wire.api.model.TraceOuterClass.Trace) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted int bitField0_;

            private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object id_ = "";

            /**
             * <pre>
             * this is a uuid
             * </pre>
             *
             * <code>string id = 1;</code>
             * @return The id.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getId(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                java.lang.Object ref = id_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    id_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * this is a uuid
             * </pre>
             *
             * <code>string id = 1;</code>
             * @return The bytes for id.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getIdBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                java.lang.Object ref = id_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    id_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * this is a uuid
             * </pre>
             *
             * <code>string id = 1;</code>
             * @param value The id to set.
             * @return This builder for chaining.
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setId(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                id_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * this is a uuid
             * </pre>
             *
             * <code>string id = 1;</code>
             * @return This builder for chaining.
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearId() {
                id_ = getDefaultInstance().getId();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * this is a uuid
             * </pre>
             *
             * <code>string id = 1;</code>
             * @param value The bytes for id to set.
             * @return This builder for chaining.
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setIdBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                id_ = value;
                onChanged();
                return this;
            }

            private org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header header_;

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Header, org.glowroot.wire.api.model.TraceOuterClass.Trace.Header.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.HeaderOrBuilder> headerBuilder_;

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Header header = 2;</code>
             * @return Whether the header field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasHeader(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return headerBuilder_ != null || header_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Header header = 2;</code>
             * @return The header.
             */
            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.headerBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header getHeader(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (headerBuilder_ == null) {
                    return header_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.Header.getDefaultInstance() : header_;
                } else {
                    return headerBuilder_.getMessage();
                }
            }

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Header header = 2;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setHeader(org.glowroot.wire.api.model.TraceOuterClass.Trace.Header value) {
                if (headerBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    header_ = value;
                    onChanged();
                } else {
                    headerBuilder_.setMessage(value);
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Header header = 2;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setHeader(org.glowroot.wire.api.model.TraceOuterClass.Trace.Header.Builder builderForValue) {
                if (headerBuilder_ == null) {
                    header_ = builderForValue.build();
                    onChanged();
                } else {
                    headerBuilder_.setMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Header header = 2;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeHeader(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Header value) {
                if (headerBuilder_ == null) {
                    if (header_ != null) {
                        header_ = org.glowroot.wire.api.model.TraceOuterClass.Trace.Header.newBuilder(header_).mergeFrom(value).buildPartial();
                    } else {
                        header_ = value;
                    }
                    onChanged();
                } else {
                    headerBuilder_.mergeFrom(value);
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Header header = 2;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearHeader() {
                if (headerBuilder_ == null) {
                    header_ = null;
                    onChanged();
                } else {
                    header_ = null;
                    headerBuilder_ = null;
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Header header = 2;</code>
             */
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.Header.@org.checkerframework.checker.tainting.qual.Tainted Builder getHeaderBuilder() {
                onChanged();
                return getHeaderFieldBuilder().getBuilder();
            }

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Header header = 2;</code>
             */
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted HeaderOrBuilder getHeaderOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (headerBuilder_ != null) {
                    return headerBuilder_.getMessageOrBuilder();
                } else {
                    return header_ == null ? org.glowroot.wire.api.model.TraceOuterClass.Trace.Header.getDefaultInstance() : header_;
                }
            }

            /**
             * <code>.org_glowroot_wire_api_model.Trace.Header header = 2;</code>
             */
            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Header, org.glowroot.wire.api.model.TraceOuterClass.Trace.Header.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.HeaderOrBuilder> getHeaderFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (headerBuilder_ == null) {
                    headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Header, org.glowroot.wire.api.model.TraceOuterClass.Trace.Header.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.HeaderOrBuilder>(getHeader(), getParentForChildren(), isClean());
                    header_ = null;
                }
                return headerBuilder_;
            }

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry> entry_ = java.util.Collections.emptyList();

            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.entryBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private void ensureEntryIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (!((bitField0_ & 0x00000001) != 0)) {
                    entry_ = new java.util.ArrayList<org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry>(entry_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry, org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.EntryOrBuilder> entryBuilder_;

            /**
             * <pre>
             * entry ordering is pre-order depth-first
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry> getEntryList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (entryBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(entry_);
                } else {
                    return entryBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             * entry ordering is pre-order depth-first
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
             */
            public  @org.checkerframework.checker.tainting.qual.Tainted int getEntryCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (entryBuilder_ == null) {
                    return entry_.size();
                } else {
                    return entryBuilder_.getCount();
                }
            }

            /**
             * <pre>
             * entry ordering is pre-order depth-first
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
             */
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted Entry getEntry(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                if (entryBuilder_ == null) {
                    return entry_.get(index);
                } else {
                    return entryBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             * entry ordering is pre-order depth-first
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setEntry(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry value) {
                if (entryBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureEntryIsMutable();
                    entry_.set(index, value);
                    onChanged();
                } else {
                    entryBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * entry ordering is pre-order depth-first
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setEntry(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry.Builder builderForValue) {
                if (entryBuilder_ == null) {
                    ensureEntryIsMutable();
                    entry_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    entryBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * entry ordering is pre-order depth-first
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addEntry(org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry value) {
                if (entryBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureEntryIsMutable();
                    entry_.add(value);
                    onChanged();
                } else {
                    entryBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * entry ordering is pre-order depth-first
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addEntry(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry value) {
                if (entryBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureEntryIsMutable();
                    entry_.add(index, value);
                    onChanged();
                } else {
                    entryBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * entry ordering is pre-order depth-first
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addEntry(org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry.Builder builderForValue) {
                if (entryBuilder_ == null) {
                    ensureEntryIsMutable();
                    entry_.add(builderForValue.build());
                    onChanged();
                } else {
                    entryBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * entry ordering is pre-order depth-first
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addEntry(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry.Builder builderForValue) {
                if (entryBuilder_ == null) {
                    ensureEntryIsMutable();
                    entry_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    entryBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * entry ordering is pre-order depth-first
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllEntry(java.lang.Iterable<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry> values) {
                if (entryBuilder_ == null) {
                    ensureEntryIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, entry_);
                    onChanged();
                } else {
                    entryBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * entry ordering is pre-order depth-first
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearEntry() {
                if (entryBuilder_ == null) {
                    entry_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    entryBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * entry ordering is pre-order depth-first
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder removeEntry(int index) {
                if (entryBuilder_ == null) {
                    ensureEntryIsMutable();
                    entry_.remove(index);
                    onChanged();
                } else {
                    entryBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * entry ordering is pre-order depth-first
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
             */
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry.@org.checkerframework.checker.tainting.qual.Tainted Builder getEntryBuilder(int index) {
                return getEntryFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * entry ordering is pre-order depth-first
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
             */
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted EntryOrBuilder getEntryOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                if (entryBuilder_ == null) {
                    return entry_.get(index);
                } else {
                    return entryBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * entry ordering is pre-order depth-first
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.EntryOrBuilder> getEntryOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (entryBuilder_ != null) {
                    return entryBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(entry_);
                }
            }

            /**
             * <pre>
             * entry ordering is pre-order depth-first
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
             */
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry.@org.checkerframework.checker.tainting.qual.Tainted Builder addEntryBuilder() {
                return getEntryFieldBuilder().addBuilder(org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry.getDefaultInstance());
            }

            /**
             * <pre>
             * entry ordering is pre-order depth-first
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
             */
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry.@org.checkerframework.checker.tainting.qual.Tainted Builder addEntryBuilder(int index) {
                return getEntryFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry.getDefaultInstance());
            }

            /**
             * <pre>
             * entry ordering is pre-order depth-first
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.Entry entry = 3;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry.Builder> getEntryBuilderList() {
                return getEntryFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry, org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.EntryOrBuilder> getEntryFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (entryBuilder_ == null) {
                    entryBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry, org.glowroot.wire.api.model.TraceOuterClass.Trace.Entry.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.EntryOrBuilder>(entry_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
                    entry_ = null;
                }
                return entryBuilder_;
            }

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query> query_ = java.util.Collections.emptyList();

            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.queryBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private void ensureQueryIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (!((bitField0_ & 0x00000002) != 0)) {
                    query_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query>(query_);
                    bitField0_ |= 0x00000002;
                }
            }

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.QueryOrBuilder> queryBuilder_;

            /**
             * <pre>
             * there are typically multiple "root" nodes (with depth=0)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query> getQueryList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (queryBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(query_);
                } else {
                    return queryBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             * there are typically multiple "root" nodes (with depth=0)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
             */
            public  @org.checkerframework.checker.tainting.qual.Tainted int getQueryCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (queryBuilder_ == null) {
                    return query_.size();
                } else {
                    return queryBuilder_.getCount();
                }
            }

            /**
             * <pre>
             * there are typically multiple "root" nodes (with depth=0)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query getQuery(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                if (queryBuilder_ == null) {
                    return query_.get(index);
                } else {
                    return queryBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             * there are typically multiple "root" nodes (with depth=0)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setQuery(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query value) {
                if (queryBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureQueryIsMutable();
                    query_.set(index, value);
                    onChanged();
                } else {
                    queryBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * there are typically multiple "root" nodes (with depth=0)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setQuery(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.Builder builderForValue) {
                if (queryBuilder_ == null) {
                    ensureQueryIsMutable();
                    query_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    queryBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * there are typically multiple "root" nodes (with depth=0)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addQuery(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query value) {
                if (queryBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureQueryIsMutable();
                    query_.add(value);
                    onChanged();
                } else {
                    queryBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * there are typically multiple "root" nodes (with depth=0)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addQuery(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query value) {
                if (queryBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureQueryIsMutable();
                    query_.add(index, value);
                    onChanged();
                } else {
                    queryBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * there are typically multiple "root" nodes (with depth=0)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addQuery(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.Builder builderForValue) {
                if (queryBuilder_ == null) {
                    ensureQueryIsMutable();
                    query_.add(builderForValue.build());
                    onChanged();
                } else {
                    queryBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * there are typically multiple "root" nodes (with depth=0)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addQuery(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.Builder builderForValue) {
                if (queryBuilder_ == null) {
                    ensureQueryIsMutable();
                    query_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    queryBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * there are typically multiple "root" nodes (with depth=0)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllQuery(java.lang.Iterable<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query> values) {
                if (queryBuilder_ == null) {
                    ensureQueryIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, query_);
                    onChanged();
                } else {
                    queryBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * there are typically multiple "root" nodes (with depth=0)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearQuery() {
                if (queryBuilder_ == null) {
                    query_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                    onChanged();
                } else {
                    queryBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * there are typically multiple "root" nodes (with depth=0)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder removeQuery(int index) {
                if (queryBuilder_ == null) {
                    ensureQueryIsMutable();
                    query_.remove(index);
                    onChanged();
                } else {
                    queryBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * there are typically multiple "root" nodes (with depth=0)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.@org.checkerframework.checker.tainting.qual.Tainted Builder getQueryBuilder(int index) {
                return getQueryFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * there are typically multiple "root" nodes (with depth=0)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted QueryOrBuilder getQueryOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                if (queryBuilder_ == null) {
                    return query_.get(index);
                } else {
                    return queryBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * there are typically multiple "root" nodes (with depth=0)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.QueryOrBuilder> getQueryOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (queryBuilder_ != null) {
                    return queryBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(query_);
                }
            }

            /**
             * <pre>
             * there are typically multiple "root" nodes (with depth=0)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.@org.checkerframework.checker.tainting.qual.Tainted Builder addQueryBuilder() {
                return getQueryFieldBuilder().addBuilder(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.getDefaultInstance());
            }

            /**
             * <pre>
             * there are typically multiple "root" nodes (with depth=0)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.@org.checkerframework.checker.tainting.qual.Tainted Builder addQueryBuilder(int index) {
                return getQueryFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.getDefaultInstance());
            }

            /**
             * <pre>
             * there are typically multiple "root" nodes (with depth=0)
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 9;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.Builder> getQueryBuilderList() {
                return getQueryFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.QueryOrBuilder> getQueryFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (queryBuilder_ == null) {
                    queryBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.QueryOrBuilder>(query_, ((bitField0_ & 0x00000002) != 0), getParentForChildren(), isClean());
                    query_ = null;
                }
                return queryBuilder_;
            }

            private org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile mainThreadProfile_;

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.ProfileOuterClass.Profile, org.glowroot.wire.api.model.ProfileOuterClass.Profile.Builder, org.glowroot.wire.api.model.ProfileOuterClass.ProfileOrBuilder> mainThreadProfileBuilder_;

            /**
             * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 4;</code>
             * @return Whether the mainThreadProfile field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasMainThreadProfile(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return mainThreadProfileBuilder_ != null || mainThreadProfile_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 4;</code>
             * @return The mainThreadProfile.
             */
            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.mainThreadProfileBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            public org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile getMainThreadProfile(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (mainThreadProfileBuilder_ == null) {
                    return mainThreadProfile_ == null ? org.glowroot.wire.api.model.ProfileOuterClass.Profile.getDefaultInstance() : mainThreadProfile_;
                } else {
                    return mainThreadProfileBuilder_.getMessage();
                }
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 4;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setMainThreadProfile(org.glowroot.wire.api.model.ProfileOuterClass.Profile value) {
                if (mainThreadProfileBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    mainThreadProfile_ = value;
                    onChanged();
                } else {
                    mainThreadProfileBuilder_.setMessage(value);
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 4;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setMainThreadProfile(org.glowroot.wire.api.model.ProfileOuterClass.Profile.Builder builderForValue) {
                if (mainThreadProfileBuilder_ == null) {
                    mainThreadProfile_ = builderForValue.build();
                    onChanged();
                } else {
                    mainThreadProfileBuilder_.setMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 4;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeMainThreadProfile(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile value) {
                if (mainThreadProfileBuilder_ == null) {
                    if (mainThreadProfile_ != null) {
                        mainThreadProfile_ = org.glowroot.wire.api.model.ProfileOuterClass.Profile.newBuilder(mainThreadProfile_).mergeFrom(value).buildPartial();
                    } else {
                        mainThreadProfile_ = value;
                    }
                    onChanged();
                } else {
                    mainThreadProfileBuilder_.mergeFrom(value);
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 4;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearMainThreadProfile() {
                if (mainThreadProfileBuilder_ == null) {
                    mainThreadProfile_ = null;
                    onChanged();
                } else {
                    mainThreadProfile_ = null;
                    mainThreadProfileBuilder_ = null;
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 4;</code>
             */
            public org.glowroot.wire.api.model.ProfileOuterClass.Profile.@org.checkerframework.checker.tainting.qual.Tainted Builder getMainThreadProfileBuilder() {
                onChanged();
                return getMainThreadProfileFieldBuilder().getBuilder();
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 4;</code>
             */
            public org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted ProfileOrBuilder getMainThreadProfileOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (mainThreadProfileBuilder_ != null) {
                    return mainThreadProfileBuilder_.getMessageOrBuilder();
                } else {
                    return mainThreadProfile_ == null ? org.glowroot.wire.api.model.ProfileOuterClass.Profile.getDefaultInstance() : mainThreadProfile_;
                }
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 4;</code>
             */
            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.ProfileOuterClass.Profile, org.glowroot.wire.api.model.ProfileOuterClass.Profile.Builder, org.glowroot.wire.api.model.ProfileOuterClass.ProfileOrBuilder> getMainThreadProfileFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (mainThreadProfileBuilder_ == null) {
                    mainThreadProfileBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.ProfileOuterClass.Profile, org.glowroot.wire.api.model.ProfileOuterClass.Profile.Builder, org.glowroot.wire.api.model.ProfileOuterClass.ProfileOrBuilder>(getMainThreadProfile(), getParentForChildren(), isClean());
                    mainThreadProfile_ = null;
                }
                return mainThreadProfileBuilder_;
            }

            private org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile auxThreadProfile_;

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.ProfileOuterClass.Profile, org.glowroot.wire.api.model.ProfileOuterClass.Profile.Builder, org.glowroot.wire.api.model.ProfileOuterClass.ProfileOrBuilder> auxThreadProfileBuilder_;

            /**
             * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 5;</code>
             * @return Whether the auxThreadProfile field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasAuxThreadProfile(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return auxThreadProfileBuilder_ != null || auxThreadProfile_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 5;</code>
             * @return The auxThreadProfile.
             */
            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.auxThreadProfileBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            public org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile getAuxThreadProfile(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (auxThreadProfileBuilder_ == null) {
                    return auxThreadProfile_ == null ? org.glowroot.wire.api.model.ProfileOuterClass.Profile.getDefaultInstance() : auxThreadProfile_;
                } else {
                    return auxThreadProfileBuilder_.getMessage();
                }
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 5;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setAuxThreadProfile(org.glowroot.wire.api.model.ProfileOuterClass.Profile value) {
                if (auxThreadProfileBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    auxThreadProfile_ = value;
                    onChanged();
                } else {
                    auxThreadProfileBuilder_.setMessage(value);
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 5;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setAuxThreadProfile(org.glowroot.wire.api.model.ProfileOuterClass.Profile.Builder builderForValue) {
                if (auxThreadProfileBuilder_ == null) {
                    auxThreadProfile_ = builderForValue.build();
                    onChanged();
                } else {
                    auxThreadProfileBuilder_.setMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 5;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeAuxThreadProfile(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile value) {
                if (auxThreadProfileBuilder_ == null) {
                    if (auxThreadProfile_ != null) {
                        auxThreadProfile_ = org.glowroot.wire.api.model.ProfileOuterClass.Profile.newBuilder(auxThreadProfile_).mergeFrom(value).buildPartial();
                    } else {
                        auxThreadProfile_ = value;
                    }
                    onChanged();
                } else {
                    auxThreadProfileBuilder_.mergeFrom(value);
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 5;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearAuxThreadProfile() {
                if (auxThreadProfileBuilder_ == null) {
                    auxThreadProfile_ = null;
                    onChanged();
                } else {
                    auxThreadProfile_ = null;
                    auxThreadProfileBuilder_ = null;
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 5;</code>
             */
            public org.glowroot.wire.api.model.ProfileOuterClass.Profile.@org.checkerframework.checker.tainting.qual.Tainted Builder getAuxThreadProfileBuilder() {
                onChanged();
                return getAuxThreadProfileFieldBuilder().getBuilder();
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 5;</code>
             */
            public org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted ProfileOrBuilder getAuxThreadProfileOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (auxThreadProfileBuilder_ != null) {
                    return auxThreadProfileBuilder_.getMessageOrBuilder();
                } else {
                    return auxThreadProfile_ == null ? org.glowroot.wire.api.model.ProfileOuterClass.Profile.getDefaultInstance() : auxThreadProfile_;
                }
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 5;</code>
             */
            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.ProfileOuterClass.Profile, org.glowroot.wire.api.model.ProfileOuterClass.Profile.Builder, org.glowroot.wire.api.model.ProfileOuterClass.ProfileOrBuilder> getAuxThreadProfileFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (auxThreadProfileBuilder_ == null) {
                    auxThreadProfileBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.ProfileOuterClass.Profile, org.glowroot.wire.api.model.ProfileOuterClass.Profile.Builder, org.glowroot.wire.api.model.ProfileOuterClass.ProfileOrBuilder>(getAuxThreadProfile(), getParentForChildren(), isClean());
                    auxThreadProfile_ = null;
                }
                return auxThreadProfileBuilder_;
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted boolean update_;

            /**
             * <pre>
             * optimization so the central collector does not need to check for prior partial
             * </pre>
             *
             * <code>bool update = 6;</code>
             * @return The update.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean getUpdate(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return update_;
            }

            /**
             * <pre>
             * optimization so the central collector does not need to check for prior partial
             * </pre>
             *
             * <code>bool update = 6;</code>
             * @param value The update to set.
             * @return This builder for chaining.
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setUpdate(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted boolean value) {
                update_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * optimization so the central collector does not need to check for prior partial
             * </pre>
             *
             * <code>bool update = 6;</code>
             * @return This builder for chaining.
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearUpdate() {
                update_ = false;
                onChanged();
                return this;
            }

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText> sharedQueryText_ = java.util.Collections.emptyList();

            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.sharedQueryTextBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private void ensureSharedQueryTextIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (!((bitField0_ & 0x00000004) != 0)) {
                    sharedQueryText_ = new java.util.ArrayList<org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText>(sharedQueryText_);
                    bitField0_ |= 0x00000004;
                }
            }

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText, org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryTextOrBuilder> sharedQueryTextBuilder_;

            /**
             * <pre>
             * trace in common case where this is not an update
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText> getSharedQueryTextList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (sharedQueryTextBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(sharedQueryText_);
                } else {
                    return sharedQueryTextBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             * trace in common case where this is not an update
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
             */
            public  @org.checkerframework.checker.tainting.qual.Tainted int getSharedQueryTextCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (sharedQueryTextBuilder_ == null) {
                    return sharedQueryText_.size();
                } else {
                    return sharedQueryTextBuilder_.getCount();
                }
            }

            /**
             * <pre>
             * trace in common case where this is not an update
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
             */
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText getSharedQueryText(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                if (sharedQueryTextBuilder_ == null) {
                    return sharedQueryText_.get(index);
                } else {
                    return sharedQueryTextBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             * trace in common case where this is not an update
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setSharedQueryText(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText value) {
                if (sharedQueryTextBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSharedQueryTextIsMutable();
                    sharedQueryText_.set(index, value);
                    onChanged();
                } else {
                    sharedQueryTextBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * trace in common case where this is not an update
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setSharedQueryText(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText.Builder builderForValue) {
                if (sharedQueryTextBuilder_ == null) {
                    ensureSharedQueryTextIsMutable();
                    sharedQueryText_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    sharedQueryTextBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * trace in common case where this is not an update
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addSharedQueryText(org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText value) {
                if (sharedQueryTextBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSharedQueryTextIsMutable();
                    sharedQueryText_.add(value);
                    onChanged();
                } else {
                    sharedQueryTextBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * trace in common case where this is not an update
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addSharedQueryText(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText value) {
                if (sharedQueryTextBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSharedQueryTextIsMutable();
                    sharedQueryText_.add(index, value);
                    onChanged();
                } else {
                    sharedQueryTextBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * trace in common case where this is not an update
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addSharedQueryText(org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText.Builder builderForValue) {
                if (sharedQueryTextBuilder_ == null) {
                    ensureSharedQueryTextIsMutable();
                    sharedQueryText_.add(builderForValue.build());
                    onChanged();
                } else {
                    sharedQueryTextBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * trace in common case where this is not an update
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addSharedQueryText(int index, org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText.Builder builderForValue) {
                if (sharedQueryTextBuilder_ == null) {
                    ensureSharedQueryTextIsMutable();
                    sharedQueryText_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    sharedQueryTextBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * trace in common case where this is not an update
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllSharedQueryText(java.lang.Iterable<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText> values) {
                if (sharedQueryTextBuilder_ == null) {
                    ensureSharedQueryTextIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, sharedQueryText_);
                    onChanged();
                } else {
                    sharedQueryTextBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * trace in common case where this is not an update
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearSharedQueryText() {
                if (sharedQueryTextBuilder_ == null) {
                    sharedQueryText_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                    onChanged();
                } else {
                    sharedQueryTextBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * trace in common case where this is not an update
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder removeSharedQueryText(int index) {
                if (sharedQueryTextBuilder_ == null) {
                    ensureSharedQueryTextIsMutable();
                    sharedQueryText_.remove(index);
                    onChanged();
                } else {
                    sharedQueryTextBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * trace in common case where this is not an update
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
             */
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText.@org.checkerframework.checker.tainting.qual.Tainted Builder getSharedQueryTextBuilder(int index) {
                return getSharedQueryTextFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * trace in common case where this is not an update
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
             */
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryTextOrBuilder getSharedQueryTextOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                if (sharedQueryTextBuilder_ == null) {
                    return sharedQueryText_.get(index);
                } else {
                    return sharedQueryTextBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * trace in common case where this is not an update
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryTextOrBuilder> getSharedQueryTextOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (sharedQueryTextBuilder_ != null) {
                    return sharedQueryTextBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(sharedQueryText_);
                }
            }

            /**
             * <pre>
             * trace in common case where this is not an update
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
             */
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText.@org.checkerframework.checker.tainting.qual.Tainted Builder addSharedQueryTextBuilder() {
                return getSharedQueryTextFieldBuilder().addBuilder(org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText.getDefaultInstance());
            }

            /**
             * <pre>
             * trace in common case where this is not an update
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
             */
            public org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText.@org.checkerframework.checker.tainting.qual.Tainted Builder addSharedQueryTextBuilder(int index) {
                return getSharedQueryTextFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText.getDefaultInstance());
            }

            /**
             * <pre>
             * trace in common case where this is not an update
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Trace.SharedQueryText shared_query_text = 8;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText.Builder> getSharedQueryTextBuilderList() {
                return getSharedQueryTextFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText, org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryTextOrBuilder> getSharedQueryTextFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (sharedQueryTextBuilder_ == null) {
                    sharedQueryTextBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText, org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryText.Builder, org.glowroot.wire.api.model.TraceOuterClass.Trace.SharedQueryTextOrBuilder>(sharedQueryText_, ((bitField0_ & 0x00000004) != 0), getParentForChildren(), isClean());
                    sharedQueryText_ = null;
                }
                return sharedQueryTextBuilder_;
            }

            public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }
            // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Trace)
        }

        // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Trace)
        private static final org.glowroot.wire.api.model.TraceOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Trace DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new org.glowroot.wire.api.model.TraceOuterClass.Trace();
        }

        @org.checkerframework.dataflow.qual.Pure
        public static org.glowroot.wire.api.model.TraceOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Trace getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Trace> PARSER = new com.google.protobuf.AbstractParser<Trace>() {

            public Trace parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return new Trace(input, extensionRegistry);
            }
        };

        @org.checkerframework.dataflow.qual.Pure
        public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Trace> parser() {
            return PARSER;
        }

        @org.checkerframework.dataflow.qual.Pure
        public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Trace> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return PARSER;
        }

        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.TraceOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Trace getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Trace this) {
            return DEFAULT_INSTANCE;
        }
    }

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Trace_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Trace_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Trace_Header_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Trace_Header_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Trace_Attribute_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Trace_Attribute_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Trace_DetailEntry_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Trace_DetailEntry_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Trace_DetailValue_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Trace_DetailValue_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Trace_Error_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Trace_Error_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Trace_Timer_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Trace_Timer_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Trace_OldThreadStats_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Trace_OldThreadStats_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Trace_ThreadStats_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Trace_ThreadStats_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Trace_Entry_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Trace_Entry_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Trace_QueryEntryMessage_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Trace_QueryEntryMessage_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Trace_SharedQueryText_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Trace_SharedQueryText_fieldAccessorTable;

    @org.checkerframework.dataflow.qual.Pure
    public static com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FileDescriptor getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FileDescriptor descriptor;

    static {
        java.lang.String[] descriptorData = { "\n\013Trace.proto\022\033org_glowroot_wire_api_model\032\017Aggregate.proto\032\rProfile.proto\032\014Common.proto\"\327\031\n\005Trace\022\n\n\002id\030\001 \001(\t\0229\n\006header\030\002 \001(\0132).org_glowroot_wire_api_model.Trace.Header\0227\n\005entry\030\003 \003(\0132(.org_glowroot_wire_api_model.Trace.Entry\022;\n\005query\030\t \003(\0132,.org_glowroot_wire_api_model.Aggregate.Query\022A\n\023main_thread_profile\030\004 \001(\0132$.org_glowroot_wire_api_model.Profile\022@\n\022aux_thread_profile\030\005 \001(\0132$.org_glowroot_wire_api_model.Profile\022\016\n\006update\030\006 \001(\010\022M\n\021shared_query_text\030\010 \003(\01322.org_glowroot_wire_api_model.Trace.SharedQueryText\032\257\n\n\006Header\022\017\n\007partial\030\001 \001(\010\022\014\n\004slow\030\002 \001(\010\022\r\n\005async\030\003 \001(\010\022\022\n\nstart_time\030\004 \001(\003\022\024\n\014capture_time\030\005 \001(\003\022\026\n\016duration_nanos\030\006 \001(\003\022\030\n\020transaction_type\030\007 \001(\t\022\030\n\020transaction_name\030\010 \001(\t\022\020\n\010headline\030\t \001(\t\022\014\n\004user\030\n \001(\t\022?\n\tattribute\030\013 \003(\0132,.org_glowroot_wire_api_model.Trace.Attribute\022D\n\014detail_entry\030\014 \003(\0132..org_glowroot_wire_api_model.Trace.DetailEntry\022T\n\034location_stack_trace_element\030\035 \003(\0132..org_glowroot_wire_api_model.StackTraceElement\0227\n\005error\030\r \001(\0132(.org_glowroot_wire_api_model.Trace.Error\022H\n\026main_thread_root_timer\030\016 \001(\0132(.org_glowroot_wire_api_model.Trace.Timer\022G\n\025aux_thread_root_timer\030\017 \001(\0132(.org_glowroot_wire_api_model.Trace.Timer\022=\n\013async_timer\030\020 \003(\0132(.org_glowroot_wire_api_model.Trace.Timer\022P\n\025old_main_thread_stats\030\021 \001(\01321.org_glowroot_wire_api_model.Trace.OldThreadStats\022O\n\024old_aux_thread_stats\030\022 \001(\01321.org_glowroot_wire_api_model.Trace.OldThreadStats\022I\n\021main_thread_stats\030\033 \001(\0132..org_glowroot_wire_api_model.Trace.ThreadStats\022H\n\020aux_thread_stats\030\034 \001(\0132..org_glowroot_wire_api_model.Trace.ThreadStats\022\023\n\013entry_count\030\023 \001(\005\022\034\n\024entry_limit_exceeded\030\024 \001(\010\022\023\n\013query_count\030\031 \001(\005\022\034\n\024query_limit_exceeded\030\032 \001(\010\022(\n main_thread_profile_sample_count\030\025 \001(\003\0221\n)main_thread_profile_sample_limit_exceeded\030\026 \001(\010\022\'\n\037aux_thread_profile_sample_count\030\027 \001(\003\0220\n(aux_thread_profile_sample_limit_exceeded\030\030 \001(\010\022#\n\033capture_time_partial_rollup\030\036 \001(\003\032(\n\tAttribute\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \003(\t\032\237\001\n\013DetailEntry\022\014\n\004name\030\001 \001(\t\022=\n\005value\030\002 \003(\0132..org_glowroot_wire_api_model.Trace.DetailValue\022C\n\013child_entry\030\003 \003(\0132..org_glowroot_wire_api_model.Trace.DetailEntry\032[\n\013DetailValue\022\020\n\006string\030\001 \001(\tH\000\022\020\n\006double\030\002 \001(\001H\000\022\016\n\004long\030\003 \001(\003H\000\022\021\n\007boolean\030\004 \001(\010H\000B\005\n\003val\032S\n\005Error\022\017\n\007message\030\001 \001(\t\0229\n\texception\030\002 \001(\0132&.org_glowroot_wire_api_model.Throwable\032\232\001\n\005Timer\022\014\n\004name\030\001 \001(\t\022\020\n\010extended\030\002 \001(\010\022\023\n\013total_nanos\030\003 \001(\003\022\r\n\005count\030\004 \001(\003\022\016\n\006active\030\005 \001(\010\022=\n\013child_timer\030\006 \003(\0132(.org_glowroot_wire_api_model.Trace.Timer\032\231\002\n\016OldThreadStats\022=\n\tcpu_nanos\030\001 \001(\0132*.org_glowroot_wire_api_model.OptionalInt64\022A\n\rblocked_nanos\030\002 \001(\0132*.org_glowroot_wire_api_model.OptionalInt64\022@\n\014waited_nanos\030\003 \001(\0132*.org_glowroot_wire_api_model.OptionalInt64\022C\n\017allocated_bytes\030\004 \001(\0132*.org_glowroot_wire_api_model.OptionalInt64\032f\n\013ThreadStats\022\021\n\tcpu_nanos\030\001 \001(\022\022\025\n\rblocked_nanos\030\002 \001(\022\022\024\n\014waited_nanos\030\003 \001(\022\022\027\n\017allocated_bytes\030\004 \001(\022\032\223\003\n\005Entry\022\r\n\005depth\030\001 \001(\005\022\032\n\022start_offset_nanos\030\002 \001(\003\022\026\n\016duration_nanos\030\003 \001(\003\022\016\n\006active\030\004 \001(\010\022\017\n\007message\030\005 \001(\t\022Q\n\023query_entry_message\030\t \001(\01324.org_glowroot_wire_api_model.Trace.QueryEntryMessage\022D\n\014detail_entry\030\006 \003(\0132..org_glowroot_wire_api_model.Trace.DetailEntry\022T\n\034location_stack_trace_element\030\007 \003(\0132..org_glowroot_wire_api_model.StackTraceElement\0227\n\005error\030\010 \001(\0132(.org_glowroot_wire_api_model.Trace.Error\032T\n\021QueryEntryMessage\022\037\n\027shared_query_text_index\030\001 \001(\005\022\016\n\006prefix\030\002 \001(\t\022\016\n\006suffix\030\003 \001(\t\032p\n\017SharedQueryText\022\021\n\tfull_text\030\001 \001(\t\022\026\n\016truncated_text\030\002 \001(\t\022\032\n\022truncated_end_text\030\003 \001(\t\022\026\n\016full_text_sha1\030\004 \001(\tB\035\n\033org.glowroot.wire.api.modelb\006proto3" };
        descriptor = com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData, new com.google.protobuf.Descriptors.FileDescriptor[] { org.glowroot.wire.api.model.AggregateOuterClass.getDescriptor(), org.glowroot.wire.api.model.ProfileOuterClass.getDescriptor(), org.glowroot.wire.api.model.Proto.getDescriptor() });
        internal_static_org_glowroot_wire_api_model_Trace_descriptor = getDescriptor().getMessageTypes().get(0);
        internal_static_org_glowroot_wire_api_model_Trace_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Trace_descriptor, new java.lang.String[] { "Id", "Header", "Entry", "Query", "MainThreadProfile", "AuxThreadProfile", "Update", "SharedQueryText" });
        internal_static_org_glowroot_wire_api_model_Trace_Header_descriptor = internal_static_org_glowroot_wire_api_model_Trace_descriptor.getNestedTypes().get(0);
        internal_static_org_glowroot_wire_api_model_Trace_Header_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Trace_Header_descriptor, new java.lang.String[] { "Partial", "Slow", "Async", "StartTime", "CaptureTime", "DurationNanos", "TransactionType", "TransactionName", "Headline", "User", "Attribute", "DetailEntry", "LocationStackTraceElement", "Error", "MainThreadRootTimer", "AuxThreadRootTimer", "AsyncTimer", "OldMainThreadStats", "OldAuxThreadStats", "MainThreadStats", "AuxThreadStats", "EntryCount", "EntryLimitExceeded", "QueryCount", "QueryLimitExceeded", "MainThreadProfileSampleCount", "MainThreadProfileSampleLimitExceeded", "AuxThreadProfileSampleCount", "AuxThreadProfileSampleLimitExceeded", "CaptureTimePartialRollup" });
        internal_static_org_glowroot_wire_api_model_Trace_Attribute_descriptor = internal_static_org_glowroot_wire_api_model_Trace_descriptor.getNestedTypes().get(1);
        internal_static_org_glowroot_wire_api_model_Trace_Attribute_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Trace_Attribute_descriptor, new java.lang.String[] { "Name", "Value" });
        internal_static_org_glowroot_wire_api_model_Trace_DetailEntry_descriptor = internal_static_org_glowroot_wire_api_model_Trace_descriptor.getNestedTypes().get(2);
        internal_static_org_glowroot_wire_api_model_Trace_DetailEntry_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Trace_DetailEntry_descriptor, new java.lang.String[] { "Name", "Value", "ChildEntry" });
        internal_static_org_glowroot_wire_api_model_Trace_DetailValue_descriptor = internal_static_org_glowroot_wire_api_model_Trace_descriptor.getNestedTypes().get(3);
        internal_static_org_glowroot_wire_api_model_Trace_DetailValue_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Trace_DetailValue_descriptor, new java.lang.String[] { "String", "Double", "Long", "Boolean", "Val" });
        internal_static_org_glowroot_wire_api_model_Trace_Error_descriptor = internal_static_org_glowroot_wire_api_model_Trace_descriptor.getNestedTypes().get(4);
        internal_static_org_glowroot_wire_api_model_Trace_Error_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Trace_Error_descriptor, new java.lang.String[] { "Message", "Exception" });
        internal_static_org_glowroot_wire_api_model_Trace_Timer_descriptor = internal_static_org_glowroot_wire_api_model_Trace_descriptor.getNestedTypes().get(5);
        internal_static_org_glowroot_wire_api_model_Trace_Timer_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Trace_Timer_descriptor, new java.lang.String[] { "Name", "Extended", "TotalNanos", "Count", "Active", "ChildTimer" });
        internal_static_org_glowroot_wire_api_model_Trace_OldThreadStats_descriptor = internal_static_org_glowroot_wire_api_model_Trace_descriptor.getNestedTypes().get(6);
        internal_static_org_glowroot_wire_api_model_Trace_OldThreadStats_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Trace_OldThreadStats_descriptor, new java.lang.String[] { "CpuNanos", "BlockedNanos", "WaitedNanos", "AllocatedBytes" });
        internal_static_org_glowroot_wire_api_model_Trace_ThreadStats_descriptor = internal_static_org_glowroot_wire_api_model_Trace_descriptor.getNestedTypes().get(7);
        internal_static_org_glowroot_wire_api_model_Trace_ThreadStats_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Trace_ThreadStats_descriptor, new java.lang.String[] { "CpuNanos", "BlockedNanos", "WaitedNanos", "AllocatedBytes" });
        internal_static_org_glowroot_wire_api_model_Trace_Entry_descriptor = internal_static_org_glowroot_wire_api_model_Trace_descriptor.getNestedTypes().get(8);
        internal_static_org_glowroot_wire_api_model_Trace_Entry_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Trace_Entry_descriptor, new java.lang.String[] { "Depth", "StartOffsetNanos", "DurationNanos", "Active", "Message", "QueryEntryMessage", "DetailEntry", "LocationStackTraceElement", "Error" });
        internal_static_org_glowroot_wire_api_model_Trace_QueryEntryMessage_descriptor = internal_static_org_glowroot_wire_api_model_Trace_descriptor.getNestedTypes().get(9);
        internal_static_org_glowroot_wire_api_model_Trace_QueryEntryMessage_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Trace_QueryEntryMessage_descriptor, new java.lang.String[] { "SharedQueryTextIndex", "Prefix", "Suffix" });
        internal_static_org_glowroot_wire_api_model_Trace_SharedQueryText_descriptor = internal_static_org_glowroot_wire_api_model_Trace_descriptor.getNestedTypes().get(10);
        internal_static_org_glowroot_wire_api_model_Trace_SharedQueryText_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Trace_SharedQueryText_descriptor, new java.lang.String[] { "FullText", "TruncatedText", "TruncatedEndText", "FullTextSha1" });
        org.glowroot.wire.api.model.AggregateOuterClass.getDescriptor();
        org.glowroot.wire.api.model.ProfileOuterClass.getDescriptor();
        org.glowroot.wire.api.model.Proto.getDescriptor();
    }
}

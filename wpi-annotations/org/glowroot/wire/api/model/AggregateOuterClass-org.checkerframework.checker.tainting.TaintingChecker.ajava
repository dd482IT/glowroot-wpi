// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Aggregate.proto
package org.glowroot.wire.api.model;

// @@protoc_insertion_point(outer_class_scope)
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.tainting.TaintingChecker")
public final class AggregateOuterClass {

    @org.checkerframework.dataflow.qual.SideEffectFree
    private AggregateOuterClass() {
    }

    @org.checkerframework.dataflow.qual.Pure
    public static void registerAllExtensions(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite registry) {
    }

    @org.checkerframework.dataflow.qual.Pure
    public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
    }

    public interface OldAggregatesByTypeOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.OldAggregatesByType)
    com.google.protobuf.MessageOrBuilder {

        /**
         * <code>string transaction_type = 1;</code>
         * @return The transactionType.
         */
        @org.checkerframework.dataflow.qual.Pure
        java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getTransactionType();

        /**
         * <code>string transaction_type = 1;</code>
         * @return The bytes for transactionType.
         */
        @org.checkerframework.dataflow.qual.Pure
        com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTransactionTypeBytes();

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate overall_aggregate = 2;</code>
         * @return Whether the overallAggregate field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted boolean hasOverallAggregate();

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate overall_aggregate = 2;</code>
         * @return The overallAggregate.
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate getOverallAggregate();

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate overall_aggregate = 2;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted AggregateOrBuilder getOverallAggregateOrBuilder();

        /**
         * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate> getTransactionAggregateList();

        /**
         * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate getTransactionAggregate(int index);

        /**
         * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted int getTransactionAggregateCount();

        /**
         * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregateOrBuilder> getTransactionAggregateOrBuilderList();

        /**
         * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregateOrBuilder getTransactionAggregateOrBuilder(int index);
    }

    /**
     * <pre>
     * deprecated in 0.9.5
     * </pre>
     *
     * Protobuf type {@code org_glowroot_wire_api_model.OldAggregatesByType}
     */
    public static final class OldAggregatesByType extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.OldAggregatesByType)
    OldAggregatesByTypeOrBuilder {

        private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

        // Use OldAggregatesByType.newBuilder() to construct.
        private OldAggregatesByType(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
            super(builder);
        }

        @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.transactionType_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
        private OldAggregatesByType() {
            transactionType_ = "";
            transactionAggregate_ = java.util.Collections.emptyList();
        }

        @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.transactionType_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
        protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
            return new OldAggregatesByType();
        }

        @org.checkerframework.dataflow.qual.Pure
        public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this) {
            return this.unknownFields;
        }

        private OldAggregatesByType(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch(tag) {
                        case 0:
                            done = true;
                            break;
                        case 10:
                            {
                                java.lang.String s = input.readStringRequireUtf8();
                                transactionType_ = s;
                                break;
                            }
                        case 18:
                            {
                                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Builder subBuilder = null;
                                if (overallAggregate_ != null) {
                                    subBuilder = overallAggregate_.toBuilder();
                                }
                                overallAggregate_ = input.readMessage(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(overallAggregate_);
                                    overallAggregate_ = subBuilder.buildPartial();
                                }
                                break;
                            }
                        case 26:
                            {
                                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                    transactionAggregate_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate>();
                                    mutable_bitField0_ |= 0x00000001;
                                }
                                transactionAggregate_.add(input.readMessage(org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate.parser(), extensionRegistry));
                                break;
                            }
                        default:
                            {
                                if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) != 0)) {
                    transactionAggregate_ = java.util.Collections.unmodifiableList(transactionAggregate_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        @org.checkerframework.dataflow.qual.Pure
        public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
            return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_OldAggregatesByType_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this) {
            return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_OldAggregatesByType_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.OldAggregatesByType.class, org.glowroot.wire.api.model.AggregateOuterClass.OldAggregatesByType.Builder.class);
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int TRANSACTION_TYPE_FIELD_NUMBER = 1;

        private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object transactionType_;

        /**
         * <code>string transaction_type = 1;</code>
         * @return The transactionType.
         */
        public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getTransactionType(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this) {
            java.lang.Object ref = transactionType_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                transactionType_ = s;
                return s;
            }
        }

        /**
         * <code>string transaction_type = 1;</code>
         * @return The bytes for transactionType.
         */
        public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTransactionTypeBytes(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this) {
            java.lang.Object ref = transactionType_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                transactionType_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int OVERALL_AGGREGATE_FIELD_NUMBER = 2;

        private org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate overallAggregate_;

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate overall_aggregate = 2;</code>
         * @return Whether the overallAggregate field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasOverallAggregate(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this) {
            return overallAggregate_ != null;
        }

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate overall_aggregate = 2;</code>
         * @return The overallAggregate.
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate getOverallAggregate(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this) {
            return overallAggregate_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.getDefaultInstance() : overallAggregate_;
        }

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate overall_aggregate = 2;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted AggregateOrBuilder getOverallAggregateOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this) {
            return getOverallAggregate();
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int TRANSACTION_AGGREGATE_FIELD_NUMBER = 3;

        private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate> transactionAggregate_;

        /**
         * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate> getTransactionAggregateList(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this) {
            return transactionAggregate_;
        }

        /**
         * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregateOrBuilder> getTransactionAggregateOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this) {
            return transactionAggregate_;
        }

        /**
         * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted int getTransactionAggregateCount(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this) {
            return transactionAggregate_.size();
        }

        /**
         * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate getTransactionAggregate(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
            return transactionAggregate_.get(index);
        }

        /**
         * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregateOrBuilder getTransactionAggregateOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
            return transactionAggregate_.get(index);
        }

        private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

        public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this) {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transactionType_)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, transactionType_);
            }
            if (overallAggregate_ != null) {
                output.writeMessage(2, getOverallAggregate());
            }
            for (int i = 0; i < transactionAggregate_.size(); i++) {
                output.writeMessage(3, transactionAggregate_.get(i));
            }
            unknownFields.writeTo(output);
        }

        public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this) {
            int size = memoizedSize;
            if (size != -1)
                return size;
            size = 0;
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transactionType_)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, transactionType_);
            }
            if (overallAggregate_ != null) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getOverallAggregate());
            }
            for (int i = 0; i < transactionAggregate_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, transactionAggregate_.get(i));
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof org.glowroot.wire.api.model.AggregateOuterClass.OldAggregatesByType)) {
                return super.equals(obj);
            }
            org.glowroot.wire.api.model.AggregateOuterClass.OldAggregatesByType other = (org.glowroot.wire.api.model.AggregateOuterClass.OldAggregatesByType) obj;
            if (!getTransactionType().equals(other.getTransactionType()))
                return false;
            if (hasOverallAggregate() != other.hasOverallAggregate())
                return false;
            if (hasOverallAggregate()) {
                if (!getOverallAggregate().equals(other.getOverallAggregate()))
                    return false;
            }
            if (!getTransactionAggregateList().equals(other.getTransactionAggregateList()))
                return false;
            if (!unknownFields.equals(other.unknownFields))
                return false;
            return true;
        }

        public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this) {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + TRANSACTION_TYPE_FIELD_NUMBER;
            hash = (53 * hash) + getTransactionType().hashCode();
            if (hasOverallAggregate()) {
                hash = (37 * hash) + OVERALL_AGGREGATE_FIELD_NUMBER;
                hash = (53 * hash) + getOverallAggregate().hashCode();
            }
            if (getTransactionAggregateCount() > 0) {
                hash = (37 * hash) + TRANSACTION_AGGREGATE_FIELD_NUMBER;
                hash = (53 * hash) + getTransactionAggregateList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType parseFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this) {
            return newBuilder();
        }

        public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.AggregateOuterClass.OldAggregatesByType prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this) {
            return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * deprecated in 0.9.5
         * </pre>
         *
         * Protobuf type {@code org_glowroot_wire_api_model.OldAggregatesByType}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.OldAggregatesByType)
        org.glowroot.wire.api.model.AggregateOuterClass.OldAggregatesByTypeOrBuilder {

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_OldAggregatesByType_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_OldAggregatesByType_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.OldAggregatesByType.class, org.glowroot.wire.api.model.AggregateOuterClass.OldAggregatesByType.Builder.class);
            }

            // Construct using org.glowroot.wire.api.model.AggregateOuterClass.OldAggregatesByType.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                    getTransactionAggregateFieldBuilder();
                }
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                super.clear();
                transactionType_ = "";
                if (overallAggregateBuilder_ == null) {
                    overallAggregate_ = null;
                } else {
                    overallAggregate_ = null;
                    overallAggregateBuilder_ = null;
                }
                if (transactionAggregateBuilder_ == null) {
                    transactionAggregate_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    transactionAggregateBuilder_.clear();
                }
                return this;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_OldAggregatesByType_descriptor;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return org.glowroot.wire.api.model.AggregateOuterClass.OldAggregatesByType.getDefaultInstance();
            }

            public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                org.glowroot.wire.api.model.AggregateOuterClass.OldAggregatesByType result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                org.glowroot.wire.api.model.AggregateOuterClass.OldAggregatesByType result = new org.glowroot.wire.api.model.AggregateOuterClass.OldAggregatesByType(this);
                int from_bitField0_ = bitField0_;
                result.transactionType_ = transactionType_;
                if (overallAggregateBuilder_ == null) {
                    result.overallAggregate_ = overallAggregate_;
                } else {
                    result.overallAggregate_ = overallAggregateBuilder_.build();
                }
                if (transactionAggregateBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) != 0)) {
                        transactionAggregate_ = java.util.Collections.unmodifiableList(transactionAggregate_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.transactionAggregate_ = transactionAggregate_;
                } else {
                    result.transactionAggregate_ = transactionAggregateBuilder_.build();
                }
                onBuilt();
                return result;
            }

            @org.checkerframework.dataflow.qual.SideEffectFree
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return super.clone();
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                return super.setField(field, value);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                return super.clearField(field);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                return super.setRepeatedField(field, index, value);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                return super.addRepeatedField(field, value);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                if (other instanceof org.glowroot.wire.api.model.AggregateOuterClass.OldAggregatesByType) {
                    return mergeFrom((org.glowroot.wire.api.model.AggregateOuterClass.OldAggregatesByType) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType other) {
                if (other == org.glowroot.wire.api.model.AggregateOuterClass.OldAggregatesByType.getDefaultInstance())
                    return this;
                if (!other.getTransactionType().isEmpty()) {
                    transactionType_ = other.transactionType_;
                    onChanged();
                }
                if (other.hasOverallAggregate()) {
                    mergeOverallAggregate(other.getOverallAggregate());
                }
                if (transactionAggregateBuilder_ == null) {
                    if (!other.transactionAggregate_.isEmpty()) {
                        if (transactionAggregate_.isEmpty()) {
                            transactionAggregate_ = other.transactionAggregate_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensureTransactionAggregateIsMutable();
                            transactionAggregate_.addAll(other.transactionAggregate_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.transactionAggregate_.isEmpty()) {
                        if (transactionAggregateBuilder_.isEmpty()) {
                            transactionAggregateBuilder_.dispose();
                            transactionAggregateBuilder_ = null;
                            transactionAggregate_ = other.transactionAggregate_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            transactionAggregateBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getTransactionAggregateFieldBuilder() : null;
                        } else {
                            transactionAggregateBuilder_.addAllMessages(other.transactionAggregate_);
                        }
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @org.checkerframework.dataflow.qual.Pure
            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return true;
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                org.glowroot.wire.api.model.AggregateOuterClass.OldAggregatesByType parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (org.glowroot.wire.api.model.AggregateOuterClass.OldAggregatesByType) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted int bitField0_;

            private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object transactionType_ = "";

            /**
             * <code>string transaction_type = 1;</code>
             * @return The transactionType.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getTransactionType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                java.lang.Object ref = transactionType_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    transactionType_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>string transaction_type = 1;</code>
             * @return The bytes for transactionType.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTransactionTypeBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                java.lang.Object ref = transactionType_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    transactionType_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string transaction_type = 1;</code>
             * @param value The transactionType to set.
             * @return This builder for chaining.
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setTransactionType(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                transactionType_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string transaction_type = 1;</code>
             * @return This builder for chaining.
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTransactionType() {
                transactionType_ = getDefaultInstance().getTransactionType();
                onChanged();
                return this;
            }

            /**
             * <code>string transaction_type = 1;</code>
             * @param value The bytes for transactionType to set.
             * @return This builder for chaining.
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setTransactionTypeBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                transactionType_ = value;
                onChanged();
                return this;
            }

            private org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate overallAggregate_;

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Builder, org.glowroot.wire.api.model.AggregateOuterClass.AggregateOrBuilder> overallAggregateBuilder_;

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate overall_aggregate = 2;</code>
             * @return Whether the overallAggregate field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasOverallAggregate(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return overallAggregateBuilder_ != null || overallAggregate_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate overall_aggregate = 2;</code>
             * @return The overallAggregate.
             */
            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.overallAggregateBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate getOverallAggregate(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (overallAggregateBuilder_ == null) {
                    return overallAggregate_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.getDefaultInstance() : overallAggregate_;
                } else {
                    return overallAggregateBuilder_.getMessage();
                }
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate overall_aggregate = 2;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setOverallAggregate(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate value) {
                if (overallAggregateBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    overallAggregate_ = value;
                    onChanged();
                } else {
                    overallAggregateBuilder_.setMessage(value);
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate overall_aggregate = 2;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setOverallAggregate(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Builder builderForValue) {
                if (overallAggregateBuilder_ == null) {
                    overallAggregate_ = builderForValue.build();
                    onChanged();
                } else {
                    overallAggregateBuilder_.setMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate overall_aggregate = 2;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeOverallAggregate(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate value) {
                if (overallAggregateBuilder_ == null) {
                    if (overallAggregate_ != null) {
                        overallAggregate_ = org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.newBuilder(overallAggregate_).mergeFrom(value).buildPartial();
                    } else {
                        overallAggregate_ = value;
                    }
                    onChanged();
                } else {
                    overallAggregateBuilder_.mergeFrom(value);
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate overall_aggregate = 2;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOverallAggregate() {
                if (overallAggregateBuilder_ == null) {
                    overallAggregate_ = null;
                    onChanged();
                } else {
                    overallAggregate_ = null;
                    overallAggregateBuilder_ = null;
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate overall_aggregate = 2;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Builder getOverallAggregateBuilder() {
                onChanged();
                return getOverallAggregateFieldBuilder().getBuilder();
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate overall_aggregate = 2;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted AggregateOrBuilder getOverallAggregateOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (overallAggregateBuilder_ != null) {
                    return overallAggregateBuilder_.getMessageOrBuilder();
                } else {
                    return overallAggregate_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.getDefaultInstance() : overallAggregate_;
                }
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate overall_aggregate = 2;</code>
             */
            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Builder, org.glowroot.wire.api.model.AggregateOuterClass.AggregateOrBuilder> getOverallAggregateFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (overallAggregateBuilder_ == null) {
                    overallAggregateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Builder, org.glowroot.wire.api.model.AggregateOuterClass.AggregateOrBuilder>(getOverallAggregate(), getParentForChildren(), isClean());
                    overallAggregate_ = null;
                }
                return overallAggregateBuilder_;
            }

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate> transactionAggregate_ = java.util.Collections.emptyList();

            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.transactionAggregateBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private void ensureTransactionAggregateIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (!((bitField0_ & 0x00000001) != 0)) {
                    transactionAggregate_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate>(transactionAggregate_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate, org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate.Builder, org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregateOrBuilder> transactionAggregateBuilder_;

            /**
             * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate> getTransactionAggregateList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (transactionAggregateBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(transactionAggregate_);
                } else {
                    return transactionAggregateBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
             */
            public  @org.checkerframework.checker.tainting.qual.Tainted int getTransactionAggregateCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (transactionAggregateBuilder_ == null) {
                    return transactionAggregate_.size();
                } else {
                    return transactionAggregateBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate getTransactionAggregate(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                if (transactionAggregateBuilder_ == null) {
                    return transactionAggregate_.get(index);
                } else {
                    return transactionAggregateBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setTransactionAggregate(int index, org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate value) {
                if (transactionAggregateBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTransactionAggregateIsMutable();
                    transactionAggregate_.set(index, value);
                    onChanged();
                } else {
                    transactionAggregateBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setTransactionAggregate(int index, org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate.Builder builderForValue) {
                if (transactionAggregateBuilder_ == null) {
                    ensureTransactionAggregateIsMutable();
                    transactionAggregate_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    transactionAggregateBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addTransactionAggregate(org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate value) {
                if (transactionAggregateBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTransactionAggregateIsMutable();
                    transactionAggregate_.add(value);
                    onChanged();
                } else {
                    transactionAggregateBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addTransactionAggregate(int index, org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate value) {
                if (transactionAggregateBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTransactionAggregateIsMutable();
                    transactionAggregate_.add(index, value);
                    onChanged();
                } else {
                    transactionAggregateBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addTransactionAggregate(org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate.Builder builderForValue) {
                if (transactionAggregateBuilder_ == null) {
                    ensureTransactionAggregateIsMutable();
                    transactionAggregate_.add(builderForValue.build());
                    onChanged();
                } else {
                    transactionAggregateBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addTransactionAggregate(int index, org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate.Builder builderForValue) {
                if (transactionAggregateBuilder_ == null) {
                    ensureTransactionAggregateIsMutable();
                    transactionAggregate_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    transactionAggregateBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllTransactionAggregate(java.lang.Iterable<? extends org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate> values) {
                if (transactionAggregateBuilder_ == null) {
                    ensureTransactionAggregateIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, transactionAggregate_);
                    onChanged();
                } else {
                    transactionAggregateBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTransactionAggregate() {
                if (transactionAggregateBuilder_ == null) {
                    transactionAggregate_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    transactionAggregateBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder removeTransactionAggregate(int index) {
                if (transactionAggregateBuilder_ == null) {
                    ensureTransactionAggregateIsMutable();
                    transactionAggregate_.remove(index);
                    onChanged();
                } else {
                    transactionAggregateBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate.@org.checkerframework.checker.tainting.qual.Tainted Builder getTransactionAggregateBuilder(int index) {
                return getTransactionAggregateFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregateOrBuilder getTransactionAggregateOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                if (transactionAggregateBuilder_ == null) {
                    return transactionAggregate_.get(index);
                } else {
                    return transactionAggregateBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregateOrBuilder> getTransactionAggregateOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (transactionAggregateBuilder_ != null) {
                    return transactionAggregateBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(transactionAggregate_);
                }
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate.@org.checkerframework.checker.tainting.qual.Tainted Builder addTransactionAggregateBuilder() {
                return getTransactionAggregateFieldBuilder().addBuilder(org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate.getDefaultInstance());
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate.@org.checkerframework.checker.tainting.qual.Tainted Builder addTransactionAggregateBuilder(int index) {
                return getTransactionAggregateFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate.getDefaultInstance());
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.OldTransactionAggregate transaction_aggregate = 3;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate.Builder> getTransactionAggregateBuilderList() {
                return getTransactionAggregateFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate, org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate.Builder, org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregateOrBuilder> getTransactionAggregateFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (transactionAggregateBuilder_ == null) {
                    transactionAggregateBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate, org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate.Builder, org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregateOrBuilder>(transactionAggregate_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
                    transactionAggregate_ = null;
                }
                return transactionAggregateBuilder_;
            }

            public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }
            // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.OldAggregatesByType)
        }

        // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.OldAggregatesByType)
        private static final org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new org.glowroot.wire.api.model.AggregateOuterClass.OldAggregatesByType();
        }

        @org.checkerframework.dataflow.qual.Pure
        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldAggregatesByType> PARSER = new com.google.protobuf.AbstractParser<OldAggregatesByType>() {

            public OldAggregatesByType parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return new OldAggregatesByType(input, extensionRegistry);
            }
        };

        @org.checkerframework.dataflow.qual.Pure
        public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldAggregatesByType> parser() {
            return PARSER;
        }

        @org.checkerframework.dataflow.qual.Pure
        public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldAggregatesByType> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this) {
            return PARSER;
        }

        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted OldAggregatesByType this) {
            return DEFAULT_INSTANCE;
        }
    }

    public interface OldTransactionAggregateOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.OldTransactionAggregate)
    com.google.protobuf.MessageOrBuilder {

        /**
         * <code>string transaction_name = 2;</code>
         * @return The transactionName.
         */
        @org.checkerframework.dataflow.qual.Pure
        java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getTransactionName();

        /**
         * <code>string transaction_name = 2;</code>
         * @return The bytes for transactionName.
         */
        @org.checkerframework.dataflow.qual.Pure
        com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTransactionNameBytes();

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate aggregate = 3;</code>
         * @return Whether the aggregate field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted boolean hasAggregate();

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate aggregate = 3;</code>
         * @return The aggregate.
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate getAggregate();

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate aggregate = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted AggregateOrBuilder getAggregateOrBuilder();
    }

    /**
     * <pre>
     * deprecated in 0.9.5
     * </pre>
     *
     * Protobuf type {@code org_glowroot_wire_api_model.OldTransactionAggregate}
     */
    public static final class OldTransactionAggregate extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.OldTransactionAggregate)
    OldTransactionAggregateOrBuilder {

        private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

        // Use OldTransactionAggregate.newBuilder() to construct.
        private OldTransactionAggregate(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
            super(builder);
        }

        @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.transactionName_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
        private OldTransactionAggregate() {
            transactionName_ = "";
        }

        @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.transactionName_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
        protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
            return new OldTransactionAggregate();
        }

        @org.checkerframework.dataflow.qual.Pure
        public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate this) {
            return this.unknownFields;
        }

        private OldTransactionAggregate(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch(tag) {
                        case 0:
                            done = true;
                            break;
                        case 18:
                            {
                                java.lang.String s = input.readStringRequireUtf8();
                                transactionName_ = s;
                                break;
                            }
                        case 26:
                            {
                                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Builder subBuilder = null;
                                if (aggregate_ != null) {
                                    subBuilder = aggregate_.toBuilder();
                                }
                                aggregate_ = input.readMessage(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(aggregate_);
                                    aggregate_ = subBuilder.buildPartial();
                                }
                                break;
                            }
                        default:
                            {
                                if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        @org.checkerframework.dataflow.qual.Pure
        public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
            return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_OldTransactionAggregate_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate this) {
            return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_OldTransactionAggregate_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate.class, org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate.Builder.class);
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int TRANSACTION_NAME_FIELD_NUMBER = 2;

        private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object transactionName_;

        /**
         * <code>string transaction_name = 2;</code>
         * @return The transactionName.
         */
        public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getTransactionName(@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate this) {
            java.lang.Object ref = transactionName_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                transactionName_ = s;
                return s;
            }
        }

        /**
         * <code>string transaction_name = 2;</code>
         * @return The bytes for transactionName.
         */
        public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTransactionNameBytes(@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate this) {
            java.lang.Object ref = transactionName_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                transactionName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int AGGREGATE_FIELD_NUMBER = 3;

        private org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate aggregate_;

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate aggregate = 3;</code>
         * @return Whether the aggregate field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasAggregate(@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate this) {
            return aggregate_ != null;
        }

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate aggregate = 3;</code>
         * @return The aggregate.
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate getAggregate(@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate this) {
            return aggregate_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.getDefaultInstance() : aggregate_;
        }

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate aggregate = 3;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted AggregateOrBuilder getAggregateOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate this) {
            return getAggregate();
        }

        private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

        public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate this) {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transactionName_)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, transactionName_);
            }
            if (aggregate_ != null) {
                output.writeMessage(3, getAggregate());
            }
            unknownFields.writeTo(output);
        }

        public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate this) {
            int size = memoizedSize;
            if (size != -1)
                return size;
            size = 0;
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transactionName_)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, transactionName_);
            }
            if (aggregate_ != null) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getAggregate());
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate)) {
                return super.equals(obj);
            }
            org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate other = (org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate) obj;
            if (!getTransactionName().equals(other.getTransactionName()))
                return false;
            if (hasAggregate() != other.hasAggregate())
                return false;
            if (hasAggregate()) {
                if (!getAggregate().equals(other.getAggregate()))
                    return false;
            }
            if (!unknownFields.equals(other.unknownFields))
                return false;
            return true;
        }

        public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate this) {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + TRANSACTION_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getTransactionName().hashCode();
            if (hasAggregate()) {
                hash = (37 * hash) + AGGREGATE_FIELD_NUMBER;
                hash = (53 * hash) + getAggregate().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate parseFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate this) {
            return newBuilder();
        }

        public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate this) {
            return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * deprecated in 0.9.5
         * </pre>
         *
         * Protobuf type {@code org_glowroot_wire_api_model.OldTransactionAggregate}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.OldTransactionAggregate)
        org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregateOrBuilder {

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_OldTransactionAggregate_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_OldTransactionAggregate_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate.class, org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate.Builder.class);
            }

            // Construct using org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            @org.checkerframework.dataflow.qual.Pure
            private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                }
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.aggregateBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.aggregate_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.transactionName_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                super.clear();
                transactionName_ = "";
                if (aggregateBuilder_ == null) {
                    aggregate_ = null;
                } else {
                    aggregate_ = null;
                    aggregateBuilder_ = null;
                }
                return this;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_OldTransactionAggregate_descriptor;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate.getDefaultInstance();
            }

            public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate result = new org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate(this);
                result.transactionName_ = transactionName_;
                if (aggregateBuilder_ == null) {
                    result.aggregate_ = aggregate_;
                } else {
                    result.aggregate_ = aggregateBuilder_.build();
                }
                onBuilt();
                return result;
            }

            @org.checkerframework.dataflow.qual.SideEffectFree
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return super.clone();
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                return super.setField(field, value);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                return super.clearField(field);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                return super.setRepeatedField(field, index, value);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                return super.addRepeatedField(field, value);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                if (other instanceof org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate) {
                    return mergeFrom((org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate other) {
                if (other == org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate.getDefaultInstance())
                    return this;
                if (!other.getTransactionName().isEmpty()) {
                    transactionName_ = other.transactionName_;
                    onChanged();
                }
                if (other.hasAggregate()) {
                    mergeAggregate(other.getAggregate());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @org.checkerframework.dataflow.qual.Pure
            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return true;
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object transactionName_ = "";

            /**
             * <code>string transaction_name = 2;</code>
             * @return The transactionName.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getTransactionName(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                java.lang.Object ref = transactionName_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    transactionName_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>string transaction_name = 2;</code>
             * @return The bytes for transactionName.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTransactionNameBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                java.lang.Object ref = transactionName_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    transactionName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string transaction_name = 2;</code>
             * @param value The transactionName to set.
             * @return This builder for chaining.
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setTransactionName(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                transactionName_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string transaction_name = 2;</code>
             * @return This builder for chaining.
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTransactionName() {
                transactionName_ = getDefaultInstance().getTransactionName();
                onChanged();
                return this;
            }

            /**
             * <code>string transaction_name = 2;</code>
             * @param value The bytes for transactionName to set.
             * @return This builder for chaining.
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setTransactionNameBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                transactionName_ = value;
                onChanged();
                return this;
            }

            private org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate aggregate_;

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Builder, org.glowroot.wire.api.model.AggregateOuterClass.AggregateOrBuilder> aggregateBuilder_;

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate aggregate = 3;</code>
             * @return Whether the aggregate field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasAggregate(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return aggregateBuilder_ != null || aggregate_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate aggregate = 3;</code>
             * @return The aggregate.
             */
            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.aggregateBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate getAggregate(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (aggregateBuilder_ == null) {
                    return aggregate_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.getDefaultInstance() : aggregate_;
                } else {
                    return aggregateBuilder_.getMessage();
                }
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate aggregate = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setAggregate(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate value) {
                if (aggregateBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    aggregate_ = value;
                    onChanged();
                } else {
                    aggregateBuilder_.setMessage(value);
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate aggregate = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setAggregate(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Builder builderForValue) {
                if (aggregateBuilder_ == null) {
                    aggregate_ = builderForValue.build();
                    onChanged();
                } else {
                    aggregateBuilder_.setMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate aggregate = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeAggregate(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate value) {
                if (aggregateBuilder_ == null) {
                    if (aggregate_ != null) {
                        aggregate_ = org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.newBuilder(aggregate_).mergeFrom(value).buildPartial();
                    } else {
                        aggregate_ = value;
                    }
                    onChanged();
                } else {
                    aggregateBuilder_.mergeFrom(value);
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate aggregate = 3;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearAggregate() {
                if (aggregateBuilder_ == null) {
                    aggregate_ = null;
                    onChanged();
                } else {
                    aggregate_ = null;
                    aggregateBuilder_ = null;
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate aggregate = 3;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Builder getAggregateBuilder() {
                onChanged();
                return getAggregateFieldBuilder().getBuilder();
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate aggregate = 3;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted AggregateOrBuilder getAggregateOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (aggregateBuilder_ != null) {
                    return aggregateBuilder_.getMessageOrBuilder();
                } else {
                    return aggregate_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.getDefaultInstance() : aggregate_;
                }
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate aggregate = 3;</code>
             */
            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Builder, org.glowroot.wire.api.model.AggregateOuterClass.AggregateOrBuilder> getAggregateFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (aggregateBuilder_ == null) {
                    aggregateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Builder, org.glowroot.wire.api.model.AggregateOuterClass.AggregateOrBuilder>(getAggregate(), getParentForChildren(), isClean());
                    aggregate_ = null;
                }
                return aggregateBuilder_;
            }

            public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }
            // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.OldTransactionAggregate)
        }

        // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.OldTransactionAggregate)
        private static final org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new org.glowroot.wire.api.model.AggregateOuterClass.OldTransactionAggregate();
        }

        @org.checkerframework.dataflow.qual.Pure
        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldTransactionAggregate> PARSER = new com.google.protobuf.AbstractParser<OldTransactionAggregate>() {

            public OldTransactionAggregate parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return new OldTransactionAggregate(input, extensionRegistry);
            }
        };

        @org.checkerframework.dataflow.qual.Pure
        public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldTransactionAggregate> parser() {
            return PARSER;
        }

        @org.checkerframework.dataflow.qual.Pure
        public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldTransactionAggregate> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate this) {
            return PARSER;
        }

        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted OldTransactionAggregate this) {
            return DEFAULT_INSTANCE;
        }
    }

    public interface AggregateOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Aggregate)
    com.google.protobuf.MessageOrBuilder {

        /**
         * <code>double total_duration_nanos = 1;</code>
         * @return The totalDurationNanos.
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted double getTotalDurationNanos();

        /**
         * <code>int64 transaction_count = 2;</code>
         * @return The transactionCount.
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted long getTransactionCount();

        /**
         * <code>int64 error_count = 3;</code>
         * @return The errorCount.
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted long getErrorCount();

        /**
         * <pre>
         * true if there was at least one async transaction in aggregate
         * </pre>
         *
         * <code>bool async_transactions = 4;</code>
         * @return The asyncTransactions.
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted boolean getAsyncTransactions();

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer> getMainThreadRootTimerList();

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer getMainThreadRootTimer(int index);

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted int getMainThreadRootTimerCount();

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder> getMainThreadRootTimerOrBuilderList();

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getMainThreadRootTimerOrBuilder(int index);

        /**
         * <pre>
         * aux thread root timer is always "auxiliary thread"
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.Timer aux_thread_root_timer = 6;</code>
         * @return Whether the auxThreadRootTimer field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted boolean hasAuxThreadRootTimer();

        /**
         * <pre>
         * aux thread root timer is always "auxiliary thread"
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.Timer aux_thread_root_timer = 6;</code>
         * @return The auxThreadRootTimer.
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer getAuxThreadRootTimer();

        /**
         * <pre>
         * aux thread root timer is always "auxiliary thread"
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.Timer aux_thread_root_timer = 6;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getAuxThreadRootTimerOrBuilder();

        /**
         * <pre>
         * async timers have no child timers
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer> getAsyncTimerList();

        /**
         * <pre>
         * async timers have no child timers
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer getAsyncTimer(int index);

        /**
         * <pre>
         * async timers have no child timers
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted int getAsyncTimerCount();

        /**
         * <pre>
         * async timers have no child timers
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder> getAsyncTimerOrBuilderList();

        /**
         * <pre>
         * async timers have no child timers
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getAsyncTimerOrBuilder(int index);

        /**
         * <pre>
         * deprecated in 0.10.9
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_main_thread_stats = 8;</code>
         * @return Whether the oldMainThreadStats field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted boolean hasOldMainThreadStats();

        /**
         * <pre>
         * deprecated in 0.10.9
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_main_thread_stats = 8;</code>
         * @return The oldMainThreadStats.
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats getOldMainThreadStats();

        /**
         * <pre>
         * deprecated in 0.10.9
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_main_thread_stats = 8;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStatsOrBuilder getOldMainThreadStatsOrBuilder();

        /**
         * <pre>
         * deprecated in 0.10.9
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_aux_thread_stats = 9;</code>
         * @return Whether the oldAuxThreadStats field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted boolean hasOldAuxThreadStats();

        /**
         * <pre>
         * deprecated in 0.10.9
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_aux_thread_stats = 9;</code>
         * @return The oldAuxThreadStats.
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats getOldAuxThreadStats();

        /**
         * <pre>
         * deprecated in 0.10.9
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_aux_thread_stats = 9;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStatsOrBuilder getOldAuxThreadStatsOrBuilder();

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats main_thread_stats = 17;</code>
         * @return Whether the mainThreadStats field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted boolean hasMainThreadStats();

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats main_thread_stats = 17;</code>
         * @return The mainThreadStats.
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats getMainThreadStats();

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats main_thread_stats = 17;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStatsOrBuilder getMainThreadStatsOrBuilder();

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats aux_thread_stats = 18;</code>
         * @return Whether the auxThreadStats field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted boolean hasAuxThreadStats();

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats aux_thread_stats = 18;</code>
         * @return The auxThreadStats.
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats getAuxThreadStats();

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats aux_thread_stats = 18;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStatsOrBuilder getAuxThreadStatsOrBuilder();

        /**
         * <pre>
         * histogram values are in nanoseconds with microsecond
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.Histogram duration_nanos_histogram = 10;</code>
         * @return Whether the durationNanosHistogram field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted boolean hasDurationNanosHistogram();

        /**
         * <pre>
         * histogram values are in nanoseconds with microsecond
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.Histogram duration_nanos_histogram = 10;</code>
         * @return The durationNanosHistogram.
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram getDurationNanosHistogram();

        /**
         * <pre>
         * histogram values are in nanoseconds with microsecond
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.Histogram duration_nanos_histogram = 10;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted HistogramOrBuilder getDurationNanosHistogramOrBuilder();

        /**
         * <pre>
         * precision
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType> getOldQueriesByTypeList();

        /**
         * <pre>
         * precision
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType getOldQueriesByType(int index);

        /**
         * <pre>
         * precision
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted int getOldQueriesByTypeCount();

        /**
         * <pre>
         * precision
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByTypeOrBuilder> getOldQueriesByTypeOrBuilderList();

        /**
         * <pre>
         * precision
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByTypeOrBuilder getOldQueriesByTypeOrBuilder(int index);

        /**
         * <pre>
         * deprecated in 0.10.6
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType> getOldServiceCallsByTypeList();

        /**
         * <pre>
         * deprecated in 0.10.6
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType getOldServiceCallsByType(int index);

        /**
         * <pre>
         * deprecated in 0.10.6
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted int getOldServiceCallsByTypeCount();

        /**
         * <pre>
         * deprecated in 0.10.6
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByTypeOrBuilder> getOldServiceCallsByTypeOrBuilderList();

        /**
         * <pre>
         * deprecated in 0.10.6
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByTypeOrBuilder getOldServiceCallsByTypeOrBuilder(int index);

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query> getQueryList();

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query getQuery(int index);

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted int getQueryCount();

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.QueryOrBuilder> getQueryOrBuilderList();

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted QueryOrBuilder getQueryOrBuilder(int index);

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall> getServiceCallList();

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall getServiceCall(int index);

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted int getServiceCallCount();

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCallOrBuilder> getServiceCallOrBuilderList();

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCallOrBuilder getServiceCallOrBuilder(int index);

        /**
         * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 13;</code>
         * @return Whether the mainThreadProfile field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted boolean hasMainThreadProfile();

        /**
         * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 13;</code>
         * @return The mainThreadProfile.
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile getMainThreadProfile();

        /**
         * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 13;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted ProfileOrBuilder getMainThreadProfileOrBuilder();

        /**
         * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 14;</code>
         * @return Whether the auxThreadProfile field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
         @org.checkerframework.checker.tainting.qual.Tainted boolean hasAuxThreadProfile();

        /**
         * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 14;</code>
         * @return The auxThreadProfile.
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile getAuxThreadProfile();

        /**
         * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 14;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted ProfileOrBuilder getAuxThreadProfileOrBuilder();
    }

    /**
     * <pre>
     * aggregate uses double instead of int64 to avoid (unlikely) 292 year nanosecond rollover
     * </pre>
     *
     * Protobuf type {@code org_glowroot_wire_api_model.Aggregate}
     */
    public static final class Aggregate extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Aggregate)
    AggregateOrBuilder {

        private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

        // Use Aggregate.newBuilder() to construct.
        private Aggregate(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
            super(builder);
        }

        private Aggregate() {
            mainThreadRootTimer_ = java.util.Collections.emptyList();
            asyncTimer_ = java.util.Collections.emptyList();
            oldQueriesByType_ = java.util.Collections.emptyList();
            oldServiceCallsByType_ = java.util.Collections.emptyList();
            query_ = java.util.Collections.emptyList();
            serviceCall_ = java.util.Collections.emptyList();
        }

        protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
            return new Aggregate();
        }

        @org.checkerframework.dataflow.qual.Pure
        public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return this.unknownFields;
        }

        private Aggregate(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch(tag) {
                        case 0:
                            done = true;
                            break;
                        case 9:
                            {
                                totalDurationNanos_ = input.readDouble();
                                break;
                            }
                        case 16:
                            {
                                transactionCount_ = input.readInt64();
                                break;
                            }
                        case 24:
                            {
                                errorCount_ = input.readInt64();
                                break;
                            }
                        case 32:
                            {
                                asyncTransactions_ = input.readBool();
                                break;
                            }
                        case 42:
                            {
                                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                    mainThreadRootTimer_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer>();
                                    mutable_bitField0_ |= 0x00000001;
                                }
                                mainThreadRootTimer_.add(input.readMessage(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.parser(), extensionRegistry));
                                break;
                            }
                        case 50:
                            {
                                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder subBuilder = null;
                                if (auxThreadRootTimer_ != null) {
                                    subBuilder = auxThreadRootTimer_.toBuilder();
                                }
                                auxThreadRootTimer_ = input.readMessage(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(auxThreadRootTimer_);
                                    auxThreadRootTimer_ = subBuilder.buildPartial();
                                }
                                break;
                            }
                        case 58:
                            {
                                if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                                    asyncTimer_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer>();
                                    mutable_bitField0_ |= 0x00000002;
                                }
                                asyncTimer_.add(input.readMessage(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.parser(), extensionRegistry));
                                break;
                            }
                        case 66:
                            {
                                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.Builder subBuilder = null;
                                if (oldMainThreadStats_ != null) {
                                    subBuilder = oldMainThreadStats_.toBuilder();
                                }
                                oldMainThreadStats_ = input.readMessage(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(oldMainThreadStats_);
                                    oldMainThreadStats_ = subBuilder.buildPartial();
                                }
                                break;
                            }
                        case 74:
                            {
                                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.Builder subBuilder = null;
                                if (oldAuxThreadStats_ != null) {
                                    subBuilder = oldAuxThreadStats_.toBuilder();
                                }
                                oldAuxThreadStats_ = input.readMessage(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(oldAuxThreadStats_);
                                    oldAuxThreadStats_ = subBuilder.buildPartial();
                                }
                                break;
                            }
                        case 82:
                            {
                                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram.Builder subBuilder = null;
                                if (durationNanosHistogram_ != null) {
                                    subBuilder = durationNanosHistogram_.toBuilder();
                                }
                                durationNanosHistogram_ = input.readMessage(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(durationNanosHistogram_);
                                    durationNanosHistogram_ = subBuilder.buildPartial();
                                }
                                break;
                            }
                        case 90:
                            {
                                if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                                    oldQueriesByType_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType>();
                                    mutable_bitField0_ |= 0x00000004;
                                }
                                oldQueriesByType_.add(input.readMessage(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType.parser(), extensionRegistry));
                                break;
                            }
                        case 98:
                            {
                                if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                                    oldServiceCallsByType_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType>();
                                    mutable_bitField0_ |= 0x00000008;
                                }
                                oldServiceCallsByType_.add(input.readMessage(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType.parser(), extensionRegistry));
                                break;
                            }
                        case 106:
                            {
                                org.glowroot.wire.api.model.ProfileOuterClass.Profile.Builder subBuilder = null;
                                if (mainThreadProfile_ != null) {
                                    subBuilder = mainThreadProfile_.toBuilder();
                                }
                                mainThreadProfile_ = input.readMessage(org.glowroot.wire.api.model.ProfileOuterClass.Profile.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(mainThreadProfile_);
                                    mainThreadProfile_ = subBuilder.buildPartial();
                                }
                                break;
                            }
                        case 114:
                            {
                                org.glowroot.wire.api.model.ProfileOuterClass.Profile.Builder subBuilder = null;
                                if (auxThreadProfile_ != null) {
                                    subBuilder = auxThreadProfile_.toBuilder();
                                }
                                auxThreadProfile_ = input.readMessage(org.glowroot.wire.api.model.ProfileOuterClass.Profile.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(auxThreadProfile_);
                                    auxThreadProfile_ = subBuilder.buildPartial();
                                }
                                break;
                            }
                        case 122:
                            {
                                if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                                    query_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query>();
                                    mutable_bitField0_ |= 0x00000010;
                                }
                                query_.add(input.readMessage(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.parser(), extensionRegistry));
                                break;
                            }
                        case 130:
                            {
                                if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                                    serviceCall_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall>();
                                    mutable_bitField0_ |= 0x00000020;
                                }
                                serviceCall_.add(input.readMessage(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall.parser(), extensionRegistry));
                                break;
                            }
                        case 138:
                            {
                                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.Builder subBuilder = null;
                                if (mainThreadStats_ != null) {
                                    subBuilder = mainThreadStats_.toBuilder();
                                }
                                mainThreadStats_ = input.readMessage(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(mainThreadStats_);
                                    mainThreadStats_ = subBuilder.buildPartial();
                                }
                                break;
                            }
                        case 146:
                            {
                                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.Builder subBuilder = null;
                                if (auxThreadStats_ != null) {
                                    subBuilder = auxThreadStats_.toBuilder();
                                }
                                auxThreadStats_ = input.readMessage(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(auxThreadStats_);
                                    auxThreadStats_ = subBuilder.buildPartial();
                                }
                                break;
                            }
                        default:
                            {
                                if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) != 0)) {
                    mainThreadRootTimer_ = java.util.Collections.unmodifiableList(mainThreadRootTimer_);
                }
                if (((mutable_bitField0_ & 0x00000002) != 0)) {
                    asyncTimer_ = java.util.Collections.unmodifiableList(asyncTimer_);
                }
                if (((mutable_bitField0_ & 0x00000004) != 0)) {
                    oldQueriesByType_ = java.util.Collections.unmodifiableList(oldQueriesByType_);
                }
                if (((mutable_bitField0_ & 0x00000008) != 0)) {
                    oldServiceCallsByType_ = java.util.Collections.unmodifiableList(oldServiceCallsByType_);
                }
                if (((mutable_bitField0_ & 0x00000010) != 0)) {
                    query_ = java.util.Collections.unmodifiableList(query_);
                }
                if (((mutable_bitField0_ & 0x00000020) != 0)) {
                    serviceCall_ = java.util.Collections.unmodifiableList(serviceCall_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        @org.checkerframework.dataflow.qual.Pure
        public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
            return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Builder.class);
        }

        public interface HistogramOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Aggregate.Histogram)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             * for smaller numbers of transactions, the individual raw values are stored directly
             * these values are ordered for fast percentile calculation on retrieval
             * </pre>
             *
             * <code>repeated int64 ordered_raw_value = 1;</code>
             * @return A list containing the orderedRawValue.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<java.lang.Long> getOrderedRawValueList();

            /**
             * <pre>
             * for smaller numbers of transactions, the individual raw values are stored directly
             * these values are ordered for fast percentile calculation on retrieval
             * </pre>
             *
             * <code>repeated int64 ordered_raw_value = 1;</code>
             * @return The count of orderedRawValue.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted int getOrderedRawValueCount();

            /**
             * <pre>
             * for smaller numbers of transactions, the individual raw values are stored directly
             * these values are ordered for fast percentile calculation on retrieval
             * </pre>
             *
             * <code>repeated int64 ordered_raw_value = 1;</code>
             * @param index The index of the element to return.
             * @return The orderedRawValue at the given index.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted long getOrderedRawValue(int index);

            /**
             * <pre>
             * for larger numbers of transactions, the histogram is tracked and encoded using HdrHistogram
             * </pre>
             *
             * <code>bytes encoded_bytes = 2;</code>
             * @return The encodedBytes.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getEncodedBytes();
        }

        /**
         * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.Histogram}
         */
        public static final class Histogram extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Aggregate.Histogram)
        HistogramOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use Histogram.newBuilder() to construct.
            private Histogram(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            private Histogram() {
                orderedRawValue_ = emptyLongList();
                encodedBytes_ = com.google.protobuf.ByteString.EMPTY;
            }

            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted Histogram this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new Histogram();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Histogram this) {
                return this.unknownFields;
            }

            private Histogram(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 8:
                                {
                                    if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                        orderedRawValue_ = newLongList();
                                        mutable_bitField0_ |= 0x00000001;
                                    }
                                    orderedRawValue_.addLong(input.readInt64());
                                    break;
                                }
                            case 10:
                                {
                                    int length = input.readRawVarint32();
                                    int limit = input.pushLimit(length);
                                    if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                                        orderedRawValue_ = newLongList();
                                        mutable_bitField0_ |= 0x00000001;
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        orderedRawValue_.addLong(input.readInt64());
                                    }
                                    input.popLimit(limit);
                                    break;
                                }
                            case 18:
                                {
                                    encodedBytes_ = input.readBytes();
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    if (((mutable_bitField0_ & 0x00000001) != 0)) {
                        // C
                        orderedRawValue_.makeImmutable();
                    }
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_Histogram_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Histogram this) {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_Histogram_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram.Builder.class);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int ORDERED_RAW_VALUE_FIELD_NUMBER = 1;

            private com.google.protobuf.Internal.@org.checkerframework.checker.tainting.qual.Tainted LongList orderedRawValue_;

            /**
             * <pre>
             * for smaller numbers of transactions, the individual raw values are stored directly
             * these values are ordered for fast percentile calculation on retrieval
             * </pre>
             *
             * <code>repeated int64 ordered_raw_value = 1;</code>
             * @return A list containing the orderedRawValue.
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<java.lang.Long> getOrderedRawValueList(@org.checkerframework.checker.tainting.qual.Tainted Histogram this) {
                return orderedRawValue_;
            }

            /**
             * <pre>
             * for smaller numbers of transactions, the individual raw values are stored directly
             * these values are ordered for fast percentile calculation on retrieval
             * </pre>
             *
             * <code>repeated int64 ordered_raw_value = 1;</code>
             * @return The count of orderedRawValue.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted int getOrderedRawValueCount(@org.checkerframework.checker.tainting.qual.Tainted Histogram this) {
                return orderedRawValue_.size();
            }

            /**
             * <pre>
             * for smaller numbers of transactions, the individual raw values are stored directly
             * these values are ordered for fast percentile calculation on retrieval
             * </pre>
             *
             * <code>repeated int64 ordered_raw_value = 1;</code>
             * @param index The index of the element to return.
             * @return The orderedRawValue at the given index.
             */
            public  @org.checkerframework.checker.tainting.qual.Tainted long getOrderedRawValue(@org.checkerframework.checker.tainting.qual.Tainted Histogram this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return orderedRawValue_.getLong(index);
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted int orderedRawValueMemoizedSerializedSize = -1;

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int ENCODED_BYTES_FIELD_NUMBER = 2;

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString encodedBytes_;

            /**
             * <pre>
             * for larger numbers of transactions, the histogram is tracked and encoded using HdrHistogram
             * </pre>
             *
             * <code>bytes encoded_bytes = 2;</code>
             * @return The encodedBytes.
             */
            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getEncodedBytes(@org.checkerframework.checker.tainting.qual.Tainted Histogram this) {
                return encodedBytes_;
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Histogram this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted Histogram this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                getSerializedSize();
                if (getOrderedRawValueList().size() > 0) {
                    output.writeUInt32NoTag(10);
                    output.writeUInt32NoTag(orderedRawValueMemoizedSerializedSize);
                }
                for (int i = 0; i < orderedRawValue_.size(); i++) {
                    output.writeInt64NoTag(orderedRawValue_.getLong(i));
                }
                if (!encodedBytes_.isEmpty()) {
                    output.writeBytes(2, encodedBytes_);
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted Histogram this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                {
                    int dataSize = 0;
                    for (int i = 0; i < orderedRawValue_.size(); i++) {
                        dataSize += com.google.protobuf.CodedOutputStream.computeInt64SizeNoTag(orderedRawValue_.getLong(i));
                    }
                    size += dataSize;
                    if (!getOrderedRawValueList().isEmpty()) {
                        size += 1;
                        size += com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(dataSize);
                    }
                    orderedRawValueMemoizedSerializedSize = dataSize;
                }
                if (!encodedBytes_.isEmpty()) {
                    size += com.google.protobuf.CodedOutputStream.computeBytesSize(2, encodedBytes_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted Histogram this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram other = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram) obj;
                if (!getOrderedRawValueList().equals(other.getOrderedRawValueList()))
                    return false;
                if (!getEncodedBytes().equals(other.getEncodedBytes()))
                    return false;
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted Histogram this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                if (getOrderedRawValueCount() > 0) {
                    hash = (37 * hash) + ORDERED_RAW_VALUE_FIELD_NUMBER;
                    hash = (53 * hash) + getOrderedRawValueList().hashCode();
                }
                hash = (37 * hash) + ENCODED_BYTES_FIELD_NUMBER;
                hash = (53 * hash) + getEncodedBytes().hashCode();
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted Histogram this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted Histogram this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted Histogram this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.Histogram}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Aggregate.Histogram)
            org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.HistogramOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_Histogram_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_Histogram_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                @org.checkerframework.dataflow.qual.Pure
                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    orderedRawValue_ = emptyLongList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    encodedBytes_ = com.google.protobuf.ByteString.EMPTY;
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_Histogram_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram result = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram(this);
                    int from_bitField0_ = bitField0_;
                    if (((bitField0_ & 0x00000001) != 0)) {
                        orderedRawValue_.makeImmutable();
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.orderedRawValue_ = orderedRawValue_;
                    result.encodedBytes_ = encodedBytes_;
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram) {
                        return mergeFrom((org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram other) {
                    if (other == org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram.getDefaultInstance())
                        return this;
                    if (!other.orderedRawValue_.isEmpty()) {
                        if (orderedRawValue_.isEmpty()) {
                            orderedRawValue_ = other.orderedRawValue_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensureOrderedRawValueIsMutable();
                            orderedRawValue_.addAll(other.orderedRawValue_);
                        }
                        onChanged();
                    }
                    if (other.getEncodedBytes() != com.google.protobuf.ByteString.EMPTY) {
                        setEncodedBytes(other.getEncodedBytes());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted int bitField0_;

                private com.google.protobuf.Internal.@org.checkerframework.checker.tainting.qual.Tainted LongList orderedRawValue_ = emptyLongList();

                private void ensureOrderedRawValueIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (!((bitField0_ & 0x00000001) != 0)) {
                        orderedRawValue_ = mutableCopy(orderedRawValue_);
                        bitField0_ |= 0x00000001;
                    }
                }

                /**
                 * <pre>
                 * for smaller numbers of transactions, the individual raw values are stored directly
                 * these values are ordered for fast percentile calculation on retrieval
                 * </pre>
                 *
                 * <code>repeated int64 ordered_raw_value = 1;</code>
                 * @return A list containing the orderedRawValue.
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<java.lang.Long> getOrderedRawValueList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return ((bitField0_ & 0x00000001) != 0) ? java.util.Collections.unmodifiableList(orderedRawValue_) : orderedRawValue_;
                }

                /**
                 * <pre>
                 * for smaller numbers of transactions, the individual raw values are stored directly
                 * these values are ordered for fast percentile calculation on retrieval
                 * </pre>
                 *
                 * <code>repeated int64 ordered_raw_value = 1;</code>
                 * @return The count of orderedRawValue.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted int getOrderedRawValueCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return orderedRawValue_.size();
                }

                /**
                 * <pre>
                 * for smaller numbers of transactions, the individual raw values are stored directly
                 * these values are ordered for fast percentile calculation on retrieval
                 * </pre>
                 *
                 * <code>repeated int64 ordered_raw_value = 1;</code>
                 * @param index The index of the element to return.
                 * @return The orderedRawValue at the given index.
                 */
                public  @org.checkerframework.checker.tainting.qual.Tainted long getOrderedRawValue(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    return orderedRawValue_.getLong(index);
                }

                /**
                 * <pre>
                 * for smaller numbers of transactions, the individual raw values are stored directly
                 * these values are ordered for fast percentile calculation on retrieval
                 * </pre>
                 *
                 * <code>repeated int64 ordered_raw_value = 1;</code>
                 * @param index The index to set the value at.
                 * @param value The orderedRawValue to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setOrderedRawValue(int index, long value) {
                    ensureOrderedRawValueIsMutable();
                    orderedRawValue_.setLong(index, value);
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * for smaller numbers of transactions, the individual raw values are stored directly
                 * these values are ordered for fast percentile calculation on retrieval
                 * </pre>
                 *
                 * <code>repeated int64 ordered_raw_value = 1;</code>
                 * @param value The orderedRawValue to add.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addOrderedRawValue(long value) {
                    ensureOrderedRawValueIsMutable();
                    orderedRawValue_.addLong(value);
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * for smaller numbers of transactions, the individual raw values are stored directly
                 * these values are ordered for fast percentile calculation on retrieval
                 * </pre>
                 *
                 * <code>repeated int64 ordered_raw_value = 1;</code>
                 * @param values The orderedRawValue to add.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllOrderedRawValue(java.lang.Iterable<? extends java.lang.Long> values) {
                    ensureOrderedRawValueIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, orderedRawValue_);
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * for smaller numbers of transactions, the individual raw values are stored directly
                 * these values are ordered for fast percentile calculation on retrieval
                 * </pre>
                 *
                 * <code>repeated int64 ordered_raw_value = 1;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOrderedRawValue() {
                    orderedRawValue_ = emptyLongList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                    return this;
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString encodedBytes_ = com.google.protobuf.ByteString.EMPTY;

                /**
                 * <pre>
                 * for larger numbers of transactions, the histogram is tracked and encoded using HdrHistogram
                 * </pre>
                 *
                 * <code>bytes encoded_bytes = 2;</code>
                 * @return The encodedBytes.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getEncodedBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return encodedBytes_;
                }

                /**
                 * <pre>
                 * for larger numbers of transactions, the histogram is tracked and encoded using HdrHistogram
                 * </pre>
                 *
                 * <code>bytes encoded_bytes = 2;</code>
                 * @param value The encodedBytes to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setEncodedBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    encodedBytes_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * for larger numbers of transactions, the histogram is tracked and encoded using HdrHistogram
                 * </pre>
                 *
                 * <code>bytes encoded_bytes = 2;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearEncodedBytes() {
                    encodedBytes_ = getDefaultInstance().getEncodedBytes();
                    onChanged();
                    return this;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Aggregate.Histogram)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Aggregate.Histogram)
            private static final org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Histogram> PARSER = new com.google.protobuf.AbstractParser<Histogram>() {

                public Histogram parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new Histogram(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Histogram> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Histogram> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted Histogram this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Histogram this) {
                return DEFAULT_INSTANCE;
            }
        }

        public interface TimerOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Aggregate.Timer)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             * name is null for synthetic root
             * </pre>
             *
             * <code>string name = 1;</code>
             * @return The name.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getName();

            /**
             * <pre>
             * name is null for synthetic root
             * </pre>
             *
             * <code>string name = 1;</code>
             * @return The bytes for name.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getNameBytes();

            /**
             * <code>bool extended = 2;</code>
             * @return The extended.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean getExtended();

            /**
             * <code>double total_nanos = 3;</code>
             * @return The totalNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted double getTotalNanos();

            /**
             * <code>int64 count = 4;</code>
             * @return The count.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted long getCount();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer> getChildTimerList();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer getChildTimer(int index);

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted int getChildTimerCount();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder> getChildTimerOrBuilderList();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getChildTimerOrBuilder(int index);
        }

        /**
         * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.Timer}
         */
        public static final class Timer extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Aggregate.Timer)
        TimerOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use Timer.newBuilder() to construct.
            private Timer(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.name_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private Timer() {
                name_ = "";
                childTimer_ = java.util.Collections.emptyList();
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.name_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted Timer this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new Timer();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return this.unknownFields;
            }

            private Timer(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    name_ = s;
                                    break;
                                }
                            case 16:
                                {
                                    extended_ = input.readBool();
                                    break;
                                }
                            case 25:
                                {
                                    totalNanos_ = input.readDouble();
                                    break;
                                }
                            case 32:
                                {
                                    count_ = input.readInt64();
                                    break;
                                }
                            case 42:
                                {
                                    if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                        childTimer_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer>();
                                        mutable_bitField0_ |= 0x00000001;
                                    }
                                    childTimer_.add(input.readMessage(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.parser(), extensionRegistry));
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    if (((mutable_bitField0_ & 0x00000001) != 0)) {
                        childTimer_ = java.util.Collections.unmodifiableList(childTimer_);
                    }
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_Timer_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_Timer_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder.class);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int NAME_FIELD_NUMBER = 1;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object name_;

            /**
             * <pre>
             * name is null for synthetic root
             * </pre>
             *
             * <code>string name = 1;</code>
             * @return The name.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getName(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                java.lang.Object ref = name_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    name_ = s;
                    return s;
                }
            }

            /**
             * <pre>
             * name is null for synthetic root
             * </pre>
             *
             * <code>string name = 1;</code>
             * @return The bytes for name.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getNameBytes(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                java.lang.Object ref = name_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int EXTENDED_FIELD_NUMBER = 2;

            private  @org.checkerframework.checker.tainting.qual.Tainted boolean extended_;

            /**
             * <code>bool extended = 2;</code>
             * @return The extended.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean getExtended(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return extended_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TOTAL_NANOS_FIELD_NUMBER = 3;

            private  @org.checkerframework.checker.tainting.qual.Tainted double totalNanos_;

            /**
             * <code>double total_nanos = 3;</code>
             * @return The totalNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted double getTotalNanos(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return totalNanos_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int COUNT_FIELD_NUMBER = 4;

            private  @org.checkerframework.checker.tainting.qual.Tainted long count_;

            /**
             * <code>int64 count = 4;</code>
             * @return The count.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getCount(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return count_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int CHILD_TIMER_FIELD_NUMBER = 5;

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer> childTimer_;

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer> getChildTimerList(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return childTimer_;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder> getChildTimerOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return childTimer_;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted int getChildTimerCount(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return childTimer_.size();
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer getChildTimer(@org.checkerframework.checker.tainting.qual.Tainted Timer this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return childTimer_.get(index);
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getChildTimerOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Timer this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return childTimer_.get(index);
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted Timer this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
                }
                if (extended_ != false) {
                    output.writeBool(2, extended_);
                }
                if (java.lang.Double.doubleToRawLongBits(totalNanos_) != 0) {
                    output.writeDouble(3, totalNanos_);
                }
                if (count_ != 0L) {
                    output.writeInt64(4, count_);
                }
                for (int i = 0; i < childTimer_.size(); i++) {
                    output.writeMessage(5, childTimer_.get(i));
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
                }
                if (extended_ != false) {
                    size += com.google.protobuf.CodedOutputStream.computeBoolSize(2, extended_);
                }
                if (java.lang.Double.doubleToRawLongBits(totalNanos_) != 0) {
                    size += com.google.protobuf.CodedOutputStream.computeDoubleSize(3, totalNanos_);
                }
                if (count_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream.computeInt64Size(4, count_);
                }
                for (int i = 0; i < childTimer_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, childTimer_.get(i));
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted Timer this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer other = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer) obj;
                if (!getName().equals(other.getName()))
                    return false;
                if (getExtended() != other.getExtended())
                    return false;
                if (java.lang.Double.doubleToLongBits(getTotalNanos()) != java.lang.Double.doubleToLongBits(other.getTotalNanos()))
                    return false;
                if (getCount() != other.getCount())
                    return false;
                if (!getChildTimerList().equals(other.getChildTimerList()))
                    return false;
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + NAME_FIELD_NUMBER;
                hash = (53 * hash) + getName().hashCode();
                hash = (37 * hash) + EXTENDED_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getExtended());
                hash = (37 * hash) + TOTAL_NANOS_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(java.lang.Double.doubleToLongBits(getTotalNanos()));
                hash = (37 * hash) + COUNT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getCount());
                if (getChildTimerCount() > 0) {
                    hash = (37 * hash) + CHILD_TIMER_FIELD_NUMBER;
                    hash = (53 * hash) + getChildTimerList().hashCode();
                }
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted Timer this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.Timer}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Aggregate.Timer)
            org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_Timer_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_Timer_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                        getChildTimerFieldBuilder();
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    name_ = "";
                    extended_ = false;
                    totalNanos_ = 0D;
                    count_ = 0L;
                    if (childTimerBuilder_ == null) {
                        childTimer_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        childTimerBuilder_.clear();
                    }
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_Timer_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer result = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer(this);
                    int from_bitField0_ = bitField0_;
                    result.name_ = name_;
                    result.extended_ = extended_;
                    result.totalNanos_ = totalNanos_;
                    result.count_ = count_;
                    if (childTimerBuilder_ == null) {
                        if (((bitField0_ & 0x00000001) != 0)) {
                            childTimer_ = java.util.Collections.unmodifiableList(childTimer_);
                            bitField0_ = (bitField0_ & ~0x00000001);
                        }
                        result.childTimer_ = childTimer_;
                    } else {
                        result.childTimer_ = childTimerBuilder_.build();
                    }
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer) {
                        return mergeFrom((org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer other) {
                    if (other == org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.getDefaultInstance())
                        return this;
                    if (!other.getName().isEmpty()) {
                        name_ = other.name_;
                        onChanged();
                    }
                    if (other.getExtended() != false) {
                        setExtended(other.getExtended());
                    }
                    if (other.getTotalNanos() != 0D) {
                        setTotalNanos(other.getTotalNanos());
                    }
                    if (other.getCount() != 0L) {
                        setCount(other.getCount());
                    }
                    if (childTimerBuilder_ == null) {
                        if (!other.childTimer_.isEmpty()) {
                            if (childTimer_.isEmpty()) {
                                childTimer_ = other.childTimer_;
                                bitField0_ = (bitField0_ & ~0x00000001);
                            } else {
                                ensureChildTimerIsMutable();
                                childTimer_.addAll(other.childTimer_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.childTimer_.isEmpty()) {
                            if (childTimerBuilder_.isEmpty()) {
                                childTimerBuilder_.dispose();
                                childTimerBuilder_ = null;
                                childTimer_ = other.childTimer_;
                                bitField0_ = (bitField0_ & ~0x00000001);
                                childTimerBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getChildTimerFieldBuilder() : null;
                            } else {
                                childTimerBuilder_.addAllMessages(other.childTimer_);
                            }
                        }
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted int bitField0_;

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object name_ = "";

                /**
                 * <pre>
                 * name is null for synthetic root
                 * </pre>
                 *
                 * <code>string name = 1;</code>
                 * @return The name.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getName(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = name_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        name_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <pre>
                 * name is null for synthetic root
                 * </pre>
                 *
                 * <code>string name = 1;</code>
                 * @return The bytes for name.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getNameBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = name_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        name_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <pre>
                 * name is null for synthetic root
                 * </pre>
                 *
                 * <code>string name = 1;</code>
                 * @param value The name to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setName(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    name_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * name is null for synthetic root
                 * </pre>
                 *
                 * <code>string name = 1;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearName() {
                    name_ = getDefaultInstance().getName();
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * name is null for synthetic root
                 * </pre>
                 *
                 * <code>string name = 1;</code>
                 * @param value The bytes for name to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setNameBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    name_ = value;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted boolean extended_;

                /**
                 * <code>bool extended = 2;</code>
                 * @return The extended.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean getExtended(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return extended_;
                }

                /**
                 * <code>bool extended = 2;</code>
                 * @param value The extended to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setExtended(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted boolean value) {
                    extended_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>bool extended = 2;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearExtended() {
                    extended_ = false;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted double totalNanos_;

                /**
                 * <code>double total_nanos = 3;</code>
                 * @return The totalNanos.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted double getTotalNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return totalNanos_;
                }

                /**
                 * <code>double total_nanos = 3;</code>
                 * @param value The totalNanos to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted double value) {
                    totalNanos_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>double total_nanos = 3;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTotalNanos() {
                    totalNanos_ = 0D;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted long count_;

                /**
                 * <code>int64 count = 4;</code>
                 * @return The count.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted long getCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return count_;
                }

                /**
                 * <code>int64 count = 4;</code>
                 * @param value The count to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                    count_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>int64 count = 4;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearCount() {
                    count_ = 0L;
                    onChanged();
                    return this;
                }

                private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer> childTimer_ = java.util.Collections.emptyList();

                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.childTimerBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                private void ensureChildTimerIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (!((bitField0_ & 0x00000001) != 0)) {
                        childTimer_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer>(childTimer_);
                        bitField0_ |= 0x00000001;
                    }
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder> childTimerBuilder_;

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer> getChildTimerList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (childTimerBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(childTimer_);
                    } else {
                        return childTimerBuilder_.getMessageList();
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
                 */
                public  @org.checkerframework.checker.tainting.qual.Tainted int getChildTimerCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (childTimerBuilder_ == null) {
                        return childTimer_.size();
                    } else {
                        return childTimerBuilder_.getCount();
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
                 */
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer getChildTimer(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (childTimerBuilder_ == null) {
                        return childTimer_.get(index);
                    } else {
                        return childTimerBuilder_.getMessage(index);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setChildTimer(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer value) {
                    if (childTimerBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureChildTimerIsMutable();
                        childTimer_.set(index, value);
                        onChanged();
                    } else {
                        childTimerBuilder_.setMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setChildTimer(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder builderForValue) {
                    if (childTimerBuilder_ == null) {
                        ensureChildTimerIsMutable();
                        childTimer_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        childTimerBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addChildTimer(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer value) {
                    if (childTimerBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureChildTimerIsMutable();
                        childTimer_.add(value);
                        onChanged();
                    } else {
                        childTimerBuilder_.addMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addChildTimer(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer value) {
                    if (childTimerBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureChildTimerIsMutable();
                        childTimer_.add(index, value);
                        onChanged();
                    } else {
                        childTimerBuilder_.addMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addChildTimer(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder builderForValue) {
                    if (childTimerBuilder_ == null) {
                        ensureChildTimerIsMutable();
                        childTimer_.add(builderForValue.build());
                        onChanged();
                    } else {
                        childTimerBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addChildTimer(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder builderForValue) {
                    if (childTimerBuilder_ == null) {
                        ensureChildTimerIsMutable();
                        childTimer_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        childTimerBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllChildTimer(java.lang.Iterable<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer> values) {
                    if (childTimerBuilder_ == null) {
                        ensureChildTimerIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, childTimer_);
                        onChanged();
                    } else {
                        childTimerBuilder_.addAllMessages(values);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearChildTimer() {
                    if (childTimerBuilder_ == null) {
                        childTimer_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000001);
                        onChanged();
                    } else {
                        childTimerBuilder_.clear();
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder removeChildTimer(int index) {
                    if (childTimerBuilder_ == null) {
                        ensureChildTimerIsMutable();
                        childTimer_.remove(index);
                        onChanged();
                    } else {
                        childTimerBuilder_.remove(index);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
                 */
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.@org.checkerframework.checker.tainting.qual.Tainted Builder getChildTimerBuilder(int index) {
                    return getChildTimerFieldBuilder().getBuilder(index);
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
                 */
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getChildTimerOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (childTimerBuilder_ == null) {
                        return childTimer_.get(index);
                    } else {
                        return childTimerBuilder_.getMessageOrBuilder(index);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder> getChildTimerOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (childTimerBuilder_ != null) {
                        return childTimerBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(childTimer_);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
                 */
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.@org.checkerframework.checker.tainting.qual.Tainted Builder addChildTimerBuilder() {
                    return getChildTimerFieldBuilder().addBuilder(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.getDefaultInstance());
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
                 */
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.@org.checkerframework.checker.tainting.qual.Tainted Builder addChildTimerBuilder(int index) {
                    return getChildTimerFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.getDefaultInstance());
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer child_timer = 5;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder> getChildTimerBuilderList() {
                    return getChildTimerFieldBuilder().getBuilderList();
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder> getChildTimerFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (childTimerBuilder_ == null) {
                        childTimerBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder>(childTimer_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
                        childTimer_ = null;
                    }
                    return childTimerBuilder_;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Aggregate.Timer)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Aggregate.Timer)
            private static final org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Timer> PARSER = new com.google.protobuf.AbstractParser<Timer>() {

                public Timer parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new Timer(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Timer> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Timer> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Timer this) {
                return DEFAULT_INSTANCE;
            }
        }

        public interface OldThreadStatsOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Aggregate.OldThreadStats)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_cpu_nanos = 1;</code>
             * @return Whether the totalCpuNanos field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasTotalCpuNanos();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_cpu_nanos = 1;</code>
             * @return The totalCpuNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble getTotalCpuNanos();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_cpu_nanos = 1;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDoubleOrBuilder getTotalCpuNanosOrBuilder();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_blocked_nanos = 2;</code>
             * @return Whether the totalBlockedNanos field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasTotalBlockedNanos();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_blocked_nanos = 2;</code>
             * @return The totalBlockedNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble getTotalBlockedNanos();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_blocked_nanos = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDoubleOrBuilder getTotalBlockedNanosOrBuilder();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_waited_nanos = 3;</code>
             * @return Whether the totalWaitedNanos field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasTotalWaitedNanos();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_waited_nanos = 3;</code>
             * @return The totalWaitedNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble getTotalWaitedNanos();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_waited_nanos = 3;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDoubleOrBuilder getTotalWaitedNanosOrBuilder();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_allocated_bytes = 4;</code>
             * @return Whether the totalAllocatedBytes field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasTotalAllocatedBytes();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_allocated_bytes = 4;</code>
             * @return The totalAllocatedBytes.
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble getTotalAllocatedBytes();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_allocated_bytes = 4;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDoubleOrBuilder getTotalAllocatedBytesOrBuilder();
        }

        /**
         * <pre>
         * deprecated in 0.10.9
         * </pre>
         *
         * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.OldThreadStats}
         */
        public static final class OldThreadStats extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Aggregate.OldThreadStats)
        OldThreadStatsOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use OldThreadStats.newBuilder() to construct.
            private OldThreadStats(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            private OldThreadStats() {
            }

            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new OldThreadStats();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return this.unknownFields;
            }

            private OldThreadStats(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    org.glowroot.wire.api.model.Proto.OptionalDouble.Builder subBuilder = null;
                                    if (totalCpuNanos_ != null) {
                                        subBuilder = totalCpuNanos_.toBuilder();
                                    }
                                    totalCpuNanos_ = input.readMessage(org.glowroot.wire.api.model.Proto.OptionalDouble.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom(totalCpuNanos_);
                                        totalCpuNanos_ = subBuilder.buildPartial();
                                    }
                                    break;
                                }
                            case 18:
                                {
                                    org.glowroot.wire.api.model.Proto.OptionalDouble.Builder subBuilder = null;
                                    if (totalBlockedNanos_ != null) {
                                        subBuilder = totalBlockedNanos_.toBuilder();
                                    }
                                    totalBlockedNanos_ = input.readMessage(org.glowroot.wire.api.model.Proto.OptionalDouble.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom(totalBlockedNanos_);
                                        totalBlockedNanos_ = subBuilder.buildPartial();
                                    }
                                    break;
                                }
                            case 26:
                                {
                                    org.glowroot.wire.api.model.Proto.OptionalDouble.Builder subBuilder = null;
                                    if (totalWaitedNanos_ != null) {
                                        subBuilder = totalWaitedNanos_.toBuilder();
                                    }
                                    totalWaitedNanos_ = input.readMessage(org.glowroot.wire.api.model.Proto.OptionalDouble.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom(totalWaitedNanos_);
                                        totalWaitedNanos_ = subBuilder.buildPartial();
                                    }
                                    break;
                                }
                            case 34:
                                {
                                    org.glowroot.wire.api.model.Proto.OptionalDouble.Builder subBuilder = null;
                                    if (totalAllocatedBytes_ != null) {
                                        subBuilder = totalAllocatedBytes_.toBuilder();
                                    }
                                    totalAllocatedBytes_ = input.readMessage(org.glowroot.wire.api.model.Proto.OptionalDouble.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom(totalAllocatedBytes_);
                                        totalAllocatedBytes_ = subBuilder.buildPartial();
                                    }
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldThreadStats_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldThreadStats_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.Builder.class);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TOTAL_CPU_NANOS_FIELD_NUMBER = 1;

            private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble totalCpuNanos_;

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_cpu_nanos = 1;</code>
             * @return Whether the totalCpuNanos field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasTotalCpuNanos(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return totalCpuNanos_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_cpu_nanos = 1;</code>
             * @return The totalCpuNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble getTotalCpuNanos(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return totalCpuNanos_ == null ? org.glowroot.wire.api.model.Proto.OptionalDouble.getDefaultInstance() : totalCpuNanos_;
            }

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_cpu_nanos = 1;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDoubleOrBuilder getTotalCpuNanosOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return getTotalCpuNanos();
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TOTAL_BLOCKED_NANOS_FIELD_NUMBER = 2;

            private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble totalBlockedNanos_;

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_blocked_nanos = 2;</code>
             * @return Whether the totalBlockedNanos field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasTotalBlockedNanos(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return totalBlockedNanos_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_blocked_nanos = 2;</code>
             * @return The totalBlockedNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble getTotalBlockedNanos(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return totalBlockedNanos_ == null ? org.glowroot.wire.api.model.Proto.OptionalDouble.getDefaultInstance() : totalBlockedNanos_;
            }

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_blocked_nanos = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDoubleOrBuilder getTotalBlockedNanosOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return getTotalBlockedNanos();
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TOTAL_WAITED_NANOS_FIELD_NUMBER = 3;

            private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble totalWaitedNanos_;

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_waited_nanos = 3;</code>
             * @return Whether the totalWaitedNanos field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasTotalWaitedNanos(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return totalWaitedNanos_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_waited_nanos = 3;</code>
             * @return The totalWaitedNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble getTotalWaitedNanos(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return totalWaitedNanos_ == null ? org.glowroot.wire.api.model.Proto.OptionalDouble.getDefaultInstance() : totalWaitedNanos_;
            }

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_waited_nanos = 3;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDoubleOrBuilder getTotalWaitedNanosOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return getTotalWaitedNanos();
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TOTAL_ALLOCATED_BYTES_FIELD_NUMBER = 4;

            private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble totalAllocatedBytes_;

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_allocated_bytes = 4;</code>
             * @return Whether the totalAllocatedBytes field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasTotalAllocatedBytes(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return totalAllocatedBytes_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_allocated_bytes = 4;</code>
             * @return The totalAllocatedBytes.
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble getTotalAllocatedBytes(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return totalAllocatedBytes_ == null ? org.glowroot.wire.api.model.Proto.OptionalDouble.getDefaultInstance() : totalAllocatedBytes_;
            }

            /**
             * <code>.org_glowroot_wire_api_model.OptionalDouble total_allocated_bytes = 4;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDoubleOrBuilder getTotalAllocatedBytesOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return getTotalAllocatedBytes();
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                if (totalCpuNanos_ != null) {
                    output.writeMessage(1, getTotalCpuNanos());
                }
                if (totalBlockedNanos_ != null) {
                    output.writeMessage(2, getTotalBlockedNanos());
                }
                if (totalWaitedNanos_ != null) {
                    output.writeMessage(3, getTotalWaitedNanos());
                }
                if (totalAllocatedBytes_ != null) {
                    output.writeMessage(4, getTotalAllocatedBytes());
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if (totalCpuNanos_ != null) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getTotalCpuNanos());
                }
                if (totalBlockedNanos_ != null) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getTotalBlockedNanos());
                }
                if (totalWaitedNanos_ != null) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getTotalWaitedNanos());
                }
                if (totalAllocatedBytes_ != null) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, getTotalAllocatedBytes());
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats other = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats) obj;
                if (hasTotalCpuNanos() != other.hasTotalCpuNanos())
                    return false;
                if (hasTotalCpuNanos()) {
                    if (!getTotalCpuNanos().equals(other.getTotalCpuNanos()))
                        return false;
                }
                if (hasTotalBlockedNanos() != other.hasTotalBlockedNanos())
                    return false;
                if (hasTotalBlockedNanos()) {
                    if (!getTotalBlockedNanos().equals(other.getTotalBlockedNanos()))
                        return false;
                }
                if (hasTotalWaitedNanos() != other.hasTotalWaitedNanos())
                    return false;
                if (hasTotalWaitedNanos()) {
                    if (!getTotalWaitedNanos().equals(other.getTotalWaitedNanos()))
                        return false;
                }
                if (hasTotalAllocatedBytes() != other.hasTotalAllocatedBytes())
                    return false;
                if (hasTotalAllocatedBytes()) {
                    if (!getTotalAllocatedBytes().equals(other.getTotalAllocatedBytes()))
                        return false;
                }
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                if (hasTotalCpuNanos()) {
                    hash = (37 * hash) + TOTAL_CPU_NANOS_FIELD_NUMBER;
                    hash = (53 * hash) + getTotalCpuNanos().hashCode();
                }
                if (hasTotalBlockedNanos()) {
                    hash = (37 * hash) + TOTAL_BLOCKED_NANOS_FIELD_NUMBER;
                    hash = (53 * hash) + getTotalBlockedNanos().hashCode();
                }
                if (hasTotalWaitedNanos()) {
                    hash = (37 * hash) + TOTAL_WAITED_NANOS_FIELD_NUMBER;
                    hash = (53 * hash) + getTotalWaitedNanos().hashCode();
                }
                if (hasTotalAllocatedBytes()) {
                    hash = (37 * hash) + TOTAL_ALLOCATED_BYTES_FIELD_NUMBER;
                    hash = (53 * hash) + getTotalAllocatedBytes().hashCode();
                }
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.OldThreadStats}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Aggregate.OldThreadStats)
            org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStatsOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldThreadStats_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldThreadStats_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                @org.checkerframework.dataflow.qual.Pure
                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                    }
                }

                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.totalAllocatedBytesBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.totalAllocatedBytes_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.totalBlockedNanosBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.totalBlockedNanos_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.totalCpuNanosBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.totalCpuNanos_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.totalWaitedNanosBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.totalWaitedNanos_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    if (totalCpuNanosBuilder_ == null) {
                        totalCpuNanos_ = null;
                    } else {
                        totalCpuNanos_ = null;
                        totalCpuNanosBuilder_ = null;
                    }
                    if (totalBlockedNanosBuilder_ == null) {
                        totalBlockedNanos_ = null;
                    } else {
                        totalBlockedNanos_ = null;
                        totalBlockedNanosBuilder_ = null;
                    }
                    if (totalWaitedNanosBuilder_ == null) {
                        totalWaitedNanos_ = null;
                    } else {
                        totalWaitedNanos_ = null;
                        totalWaitedNanosBuilder_ = null;
                    }
                    if (totalAllocatedBytesBuilder_ == null) {
                        totalAllocatedBytes_ = null;
                    } else {
                        totalAllocatedBytes_ = null;
                        totalAllocatedBytesBuilder_ = null;
                    }
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldThreadStats_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats result = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats(this);
                    if (totalCpuNanosBuilder_ == null) {
                        result.totalCpuNanos_ = totalCpuNanos_;
                    } else {
                        result.totalCpuNanos_ = totalCpuNanosBuilder_.build();
                    }
                    if (totalBlockedNanosBuilder_ == null) {
                        result.totalBlockedNanos_ = totalBlockedNanos_;
                    } else {
                        result.totalBlockedNanos_ = totalBlockedNanosBuilder_.build();
                    }
                    if (totalWaitedNanosBuilder_ == null) {
                        result.totalWaitedNanos_ = totalWaitedNanos_;
                    } else {
                        result.totalWaitedNanos_ = totalWaitedNanosBuilder_.build();
                    }
                    if (totalAllocatedBytesBuilder_ == null) {
                        result.totalAllocatedBytes_ = totalAllocatedBytes_;
                    } else {
                        result.totalAllocatedBytes_ = totalAllocatedBytesBuilder_.build();
                    }
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats) {
                        return mergeFrom((org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats other) {
                    if (other == org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.getDefaultInstance())
                        return this;
                    if (other.hasTotalCpuNanos()) {
                        mergeTotalCpuNanos(other.getTotalCpuNanos());
                    }
                    if (other.hasTotalBlockedNanos()) {
                        mergeTotalBlockedNanos(other.getTotalBlockedNanos());
                    }
                    if (other.hasTotalWaitedNanos()) {
                        mergeTotalWaitedNanos(other.getTotalWaitedNanos());
                    }
                    if (other.hasTotalAllocatedBytes()) {
                        mergeTotalAllocatedBytes(other.getTotalAllocatedBytes());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble totalCpuNanos_;

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalDouble, org.glowroot.wire.api.model.Proto.OptionalDouble.Builder, org.glowroot.wire.api.model.Proto.OptionalDoubleOrBuilder> totalCpuNanosBuilder_;

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_cpu_nanos = 1;</code>
                 * @return Whether the totalCpuNanos field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasTotalCpuNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return totalCpuNanosBuilder_ != null || totalCpuNanos_ != null;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_cpu_nanos = 1;</code>
                 * @return The totalCpuNanos.
                 */
                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.totalCpuNanosBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble getTotalCpuNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (totalCpuNanosBuilder_ == null) {
                        return totalCpuNanos_ == null ? org.glowroot.wire.api.model.Proto.OptionalDouble.getDefaultInstance() : totalCpuNanos_;
                    } else {
                        return totalCpuNanosBuilder_.getMessage();
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_cpu_nanos = 1;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalCpuNanos(org.glowroot.wire.api.model.Proto.OptionalDouble value) {
                    if (totalCpuNanosBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        totalCpuNanos_ = value;
                        onChanged();
                    } else {
                        totalCpuNanosBuilder_.setMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_cpu_nanos = 1;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalCpuNanos(org.glowroot.wire.api.model.Proto.OptionalDouble.Builder builderForValue) {
                    if (totalCpuNanosBuilder_ == null) {
                        totalCpuNanos_ = builderForValue.build();
                        onChanged();
                    } else {
                        totalCpuNanosBuilder_.setMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_cpu_nanos = 1;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeTotalCpuNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble value) {
                    if (totalCpuNanosBuilder_ == null) {
                        if (totalCpuNanos_ != null) {
                            totalCpuNanos_ = org.glowroot.wire.api.model.Proto.OptionalDouble.newBuilder(totalCpuNanos_).mergeFrom(value).buildPartial();
                        } else {
                            totalCpuNanos_ = value;
                        }
                        onChanged();
                    } else {
                        totalCpuNanosBuilder_.mergeFrom(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_cpu_nanos = 1;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTotalCpuNanos() {
                    if (totalCpuNanosBuilder_ == null) {
                        totalCpuNanos_ = null;
                        onChanged();
                    } else {
                        totalCpuNanos_ = null;
                        totalCpuNanosBuilder_ = null;
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_cpu_nanos = 1;</code>
                 */
                public org.glowroot.wire.api.model.Proto.OptionalDouble.@org.checkerframework.checker.tainting.qual.Tainted Builder getTotalCpuNanosBuilder() {
                    onChanged();
                    return getTotalCpuNanosFieldBuilder().getBuilder();
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_cpu_nanos = 1;</code>
                 */
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDoubleOrBuilder getTotalCpuNanosOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (totalCpuNanosBuilder_ != null) {
                        return totalCpuNanosBuilder_.getMessageOrBuilder();
                    } else {
                        return totalCpuNanos_ == null ? org.glowroot.wire.api.model.Proto.OptionalDouble.getDefaultInstance() : totalCpuNanos_;
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_cpu_nanos = 1;</code>
                 */
                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalDouble, org.glowroot.wire.api.model.Proto.OptionalDouble.Builder, org.glowroot.wire.api.model.Proto.OptionalDoubleOrBuilder> getTotalCpuNanosFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (totalCpuNanosBuilder_ == null) {
                        totalCpuNanosBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalDouble, org.glowroot.wire.api.model.Proto.OptionalDouble.Builder, org.glowroot.wire.api.model.Proto.OptionalDoubleOrBuilder>(getTotalCpuNanos(), getParentForChildren(), isClean());
                        totalCpuNanos_ = null;
                    }
                    return totalCpuNanosBuilder_;
                }

                private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble totalBlockedNanos_;

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalDouble, org.glowroot.wire.api.model.Proto.OptionalDouble.Builder, org.glowroot.wire.api.model.Proto.OptionalDoubleOrBuilder> totalBlockedNanosBuilder_;

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_blocked_nanos = 2;</code>
                 * @return Whether the totalBlockedNanos field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasTotalBlockedNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return totalBlockedNanosBuilder_ != null || totalBlockedNanos_ != null;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_blocked_nanos = 2;</code>
                 * @return The totalBlockedNanos.
                 */
                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.totalBlockedNanosBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble getTotalBlockedNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (totalBlockedNanosBuilder_ == null) {
                        return totalBlockedNanos_ == null ? org.glowroot.wire.api.model.Proto.OptionalDouble.getDefaultInstance() : totalBlockedNanos_;
                    } else {
                        return totalBlockedNanosBuilder_.getMessage();
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_blocked_nanos = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalBlockedNanos(org.glowroot.wire.api.model.Proto.OptionalDouble value) {
                    if (totalBlockedNanosBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        totalBlockedNanos_ = value;
                        onChanged();
                    } else {
                        totalBlockedNanosBuilder_.setMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_blocked_nanos = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalBlockedNanos(org.glowroot.wire.api.model.Proto.OptionalDouble.Builder builderForValue) {
                    if (totalBlockedNanosBuilder_ == null) {
                        totalBlockedNanos_ = builderForValue.build();
                        onChanged();
                    } else {
                        totalBlockedNanosBuilder_.setMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_blocked_nanos = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeTotalBlockedNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble value) {
                    if (totalBlockedNanosBuilder_ == null) {
                        if (totalBlockedNanos_ != null) {
                            totalBlockedNanos_ = org.glowroot.wire.api.model.Proto.OptionalDouble.newBuilder(totalBlockedNanos_).mergeFrom(value).buildPartial();
                        } else {
                            totalBlockedNanos_ = value;
                        }
                        onChanged();
                    } else {
                        totalBlockedNanosBuilder_.mergeFrom(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_blocked_nanos = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTotalBlockedNanos() {
                    if (totalBlockedNanosBuilder_ == null) {
                        totalBlockedNanos_ = null;
                        onChanged();
                    } else {
                        totalBlockedNanos_ = null;
                        totalBlockedNanosBuilder_ = null;
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_blocked_nanos = 2;</code>
                 */
                public org.glowroot.wire.api.model.Proto.OptionalDouble.@org.checkerframework.checker.tainting.qual.Tainted Builder getTotalBlockedNanosBuilder() {
                    onChanged();
                    return getTotalBlockedNanosFieldBuilder().getBuilder();
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_blocked_nanos = 2;</code>
                 */
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDoubleOrBuilder getTotalBlockedNanosOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (totalBlockedNanosBuilder_ != null) {
                        return totalBlockedNanosBuilder_.getMessageOrBuilder();
                    } else {
                        return totalBlockedNanos_ == null ? org.glowroot.wire.api.model.Proto.OptionalDouble.getDefaultInstance() : totalBlockedNanos_;
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_blocked_nanos = 2;</code>
                 */
                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalDouble, org.glowroot.wire.api.model.Proto.OptionalDouble.Builder, org.glowroot.wire.api.model.Proto.OptionalDoubleOrBuilder> getTotalBlockedNanosFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (totalBlockedNanosBuilder_ == null) {
                        totalBlockedNanosBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalDouble, org.glowroot.wire.api.model.Proto.OptionalDouble.Builder, org.glowroot.wire.api.model.Proto.OptionalDoubleOrBuilder>(getTotalBlockedNanos(), getParentForChildren(), isClean());
                        totalBlockedNanos_ = null;
                    }
                    return totalBlockedNanosBuilder_;
                }

                private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble totalWaitedNanos_;

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalDouble, org.glowroot.wire.api.model.Proto.OptionalDouble.Builder, org.glowroot.wire.api.model.Proto.OptionalDoubleOrBuilder> totalWaitedNanosBuilder_;

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_waited_nanos = 3;</code>
                 * @return Whether the totalWaitedNanos field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasTotalWaitedNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return totalWaitedNanosBuilder_ != null || totalWaitedNanos_ != null;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_waited_nanos = 3;</code>
                 * @return The totalWaitedNanos.
                 */
                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.totalWaitedNanosBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble getTotalWaitedNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (totalWaitedNanosBuilder_ == null) {
                        return totalWaitedNanos_ == null ? org.glowroot.wire.api.model.Proto.OptionalDouble.getDefaultInstance() : totalWaitedNanos_;
                    } else {
                        return totalWaitedNanosBuilder_.getMessage();
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_waited_nanos = 3;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalWaitedNanos(org.glowroot.wire.api.model.Proto.OptionalDouble value) {
                    if (totalWaitedNanosBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        totalWaitedNanos_ = value;
                        onChanged();
                    } else {
                        totalWaitedNanosBuilder_.setMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_waited_nanos = 3;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalWaitedNanos(org.glowroot.wire.api.model.Proto.OptionalDouble.Builder builderForValue) {
                    if (totalWaitedNanosBuilder_ == null) {
                        totalWaitedNanos_ = builderForValue.build();
                        onChanged();
                    } else {
                        totalWaitedNanosBuilder_.setMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_waited_nanos = 3;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeTotalWaitedNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble value) {
                    if (totalWaitedNanosBuilder_ == null) {
                        if (totalWaitedNanos_ != null) {
                            totalWaitedNanos_ = org.glowroot.wire.api.model.Proto.OptionalDouble.newBuilder(totalWaitedNanos_).mergeFrom(value).buildPartial();
                        } else {
                            totalWaitedNanos_ = value;
                        }
                        onChanged();
                    } else {
                        totalWaitedNanosBuilder_.mergeFrom(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_waited_nanos = 3;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTotalWaitedNanos() {
                    if (totalWaitedNanosBuilder_ == null) {
                        totalWaitedNanos_ = null;
                        onChanged();
                    } else {
                        totalWaitedNanos_ = null;
                        totalWaitedNanosBuilder_ = null;
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_waited_nanos = 3;</code>
                 */
                public org.glowroot.wire.api.model.Proto.OptionalDouble.@org.checkerframework.checker.tainting.qual.Tainted Builder getTotalWaitedNanosBuilder() {
                    onChanged();
                    return getTotalWaitedNanosFieldBuilder().getBuilder();
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_waited_nanos = 3;</code>
                 */
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDoubleOrBuilder getTotalWaitedNanosOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (totalWaitedNanosBuilder_ != null) {
                        return totalWaitedNanosBuilder_.getMessageOrBuilder();
                    } else {
                        return totalWaitedNanos_ == null ? org.glowroot.wire.api.model.Proto.OptionalDouble.getDefaultInstance() : totalWaitedNanos_;
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_waited_nanos = 3;</code>
                 */
                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalDouble, org.glowroot.wire.api.model.Proto.OptionalDouble.Builder, org.glowroot.wire.api.model.Proto.OptionalDoubleOrBuilder> getTotalWaitedNanosFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (totalWaitedNanosBuilder_ == null) {
                        totalWaitedNanosBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalDouble, org.glowroot.wire.api.model.Proto.OptionalDouble.Builder, org.glowroot.wire.api.model.Proto.OptionalDoubleOrBuilder>(getTotalWaitedNanos(), getParentForChildren(), isClean());
                        totalWaitedNanos_ = null;
                    }
                    return totalWaitedNanosBuilder_;
                }

                private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble totalAllocatedBytes_;

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalDouble, org.glowroot.wire.api.model.Proto.OptionalDouble.Builder, org.glowroot.wire.api.model.Proto.OptionalDoubleOrBuilder> totalAllocatedBytesBuilder_;

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_allocated_bytes = 4;</code>
                 * @return Whether the totalAllocatedBytes field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasTotalAllocatedBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return totalAllocatedBytesBuilder_ != null || totalAllocatedBytes_ != null;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_allocated_bytes = 4;</code>
                 * @return The totalAllocatedBytes.
                 */
                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.totalAllocatedBytesBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble getTotalAllocatedBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (totalAllocatedBytesBuilder_ == null) {
                        return totalAllocatedBytes_ == null ? org.glowroot.wire.api.model.Proto.OptionalDouble.getDefaultInstance() : totalAllocatedBytes_;
                    } else {
                        return totalAllocatedBytesBuilder_.getMessage();
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_allocated_bytes = 4;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalAllocatedBytes(org.glowroot.wire.api.model.Proto.OptionalDouble value) {
                    if (totalAllocatedBytesBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        totalAllocatedBytes_ = value;
                        onChanged();
                    } else {
                        totalAllocatedBytesBuilder_.setMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_allocated_bytes = 4;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalAllocatedBytes(org.glowroot.wire.api.model.Proto.OptionalDouble.Builder builderForValue) {
                    if (totalAllocatedBytesBuilder_ == null) {
                        totalAllocatedBytes_ = builderForValue.build();
                        onChanged();
                    } else {
                        totalAllocatedBytesBuilder_.setMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_allocated_bytes = 4;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeTotalAllocatedBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDouble value) {
                    if (totalAllocatedBytesBuilder_ == null) {
                        if (totalAllocatedBytes_ != null) {
                            totalAllocatedBytes_ = org.glowroot.wire.api.model.Proto.OptionalDouble.newBuilder(totalAllocatedBytes_).mergeFrom(value).buildPartial();
                        } else {
                            totalAllocatedBytes_ = value;
                        }
                        onChanged();
                    } else {
                        totalAllocatedBytesBuilder_.mergeFrom(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_allocated_bytes = 4;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTotalAllocatedBytes() {
                    if (totalAllocatedBytesBuilder_ == null) {
                        totalAllocatedBytes_ = null;
                        onChanged();
                    } else {
                        totalAllocatedBytes_ = null;
                        totalAllocatedBytesBuilder_ = null;
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_allocated_bytes = 4;</code>
                 */
                public org.glowroot.wire.api.model.Proto.OptionalDouble.@org.checkerframework.checker.tainting.qual.Tainted Builder getTotalAllocatedBytesBuilder() {
                    onChanged();
                    return getTotalAllocatedBytesFieldBuilder().getBuilder();
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_allocated_bytes = 4;</code>
                 */
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalDoubleOrBuilder getTotalAllocatedBytesOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (totalAllocatedBytesBuilder_ != null) {
                        return totalAllocatedBytesBuilder_.getMessageOrBuilder();
                    } else {
                        return totalAllocatedBytes_ == null ? org.glowroot.wire.api.model.Proto.OptionalDouble.getDefaultInstance() : totalAllocatedBytes_;
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalDouble total_allocated_bytes = 4;</code>
                 */
                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalDouble, org.glowroot.wire.api.model.Proto.OptionalDouble.Builder, org.glowroot.wire.api.model.Proto.OptionalDoubleOrBuilder> getTotalAllocatedBytesFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (totalAllocatedBytesBuilder_ == null) {
                        totalAllocatedBytesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalDouble, org.glowroot.wire.api.model.Proto.OptionalDouble.Builder, org.glowroot.wire.api.model.Proto.OptionalDoubleOrBuilder>(getTotalAllocatedBytes(), getParentForChildren(), isClean());
                        totalAllocatedBytes_ = null;
                    }
                    return totalAllocatedBytesBuilder_;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Aggregate.OldThreadStats)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Aggregate.OldThreadStats)
            private static final org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldThreadStats> PARSER = new com.google.protobuf.AbstractParser<OldThreadStats>() {

                public OldThreadStats parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new OldThreadStats(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldThreadStats> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldThreadStats> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats this) {
                return DEFAULT_INSTANCE;
            }
        }

        public interface ThreadStatsOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Aggregate.ThreadStats)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             * -1 means N/A
             * </pre>
             *
             * <code>double total_cpu_nanos = 1;</code>
             * @return The totalCpuNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted double getTotalCpuNanos();

            /**
             * <pre>
             * -1 means N/A
             * </pre>
             *
             * <code>double total_blocked_nanos = 2;</code>
             * @return The totalBlockedNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted double getTotalBlockedNanos();

            /**
             * <pre>
             * -1 means N/A
             * </pre>
             *
             * <code>double total_waited_nanos = 3;</code>
             * @return The totalWaitedNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted double getTotalWaitedNanos();

            /**
             * <pre>
             * -1 means N/A
             * </pre>
             *
             * <code>double total_allocated_bytes = 4;</code>
             * @return The totalAllocatedBytes.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted double getTotalAllocatedBytes();
        }

        /**
         * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.ThreadStats}
         */
        public static final class ThreadStats extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Aggregate.ThreadStats)
        ThreadStatsOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use ThreadStats.newBuilder() to construct.
            private ThreadStats(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            private ThreadStats() {
            }

            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new ThreadStats();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                return this.unknownFields;
            }

            private ThreadStats(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 9:
                                {
                                    totalCpuNanos_ = input.readDouble();
                                    break;
                                }
                            case 17:
                                {
                                    totalBlockedNanos_ = input.readDouble();
                                    break;
                                }
                            case 25:
                                {
                                    totalWaitedNanos_ = input.readDouble();
                                    break;
                                }
                            case 33:
                                {
                                    totalAllocatedBytes_ = input.readDouble();
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_ThreadStats_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_ThreadStats_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.Builder.class);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TOTAL_CPU_NANOS_FIELD_NUMBER = 1;

            private  @org.checkerframework.checker.tainting.qual.Tainted double totalCpuNanos_;

            /**
             * <pre>
             * -1 means N/A
             * </pre>
             *
             * <code>double total_cpu_nanos = 1;</code>
             * @return The totalCpuNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted double getTotalCpuNanos(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                return totalCpuNanos_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TOTAL_BLOCKED_NANOS_FIELD_NUMBER = 2;

            private  @org.checkerframework.checker.tainting.qual.Tainted double totalBlockedNanos_;

            /**
             * <pre>
             * -1 means N/A
             * </pre>
             *
             * <code>double total_blocked_nanos = 2;</code>
             * @return The totalBlockedNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted double getTotalBlockedNanos(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                return totalBlockedNanos_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TOTAL_WAITED_NANOS_FIELD_NUMBER = 3;

            private  @org.checkerframework.checker.tainting.qual.Tainted double totalWaitedNanos_;

            /**
             * <pre>
             * -1 means N/A
             * </pre>
             *
             * <code>double total_waited_nanos = 3;</code>
             * @return The totalWaitedNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted double getTotalWaitedNanos(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                return totalWaitedNanos_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TOTAL_ALLOCATED_BYTES_FIELD_NUMBER = 4;

            private  @org.checkerframework.checker.tainting.qual.Tainted double totalAllocatedBytes_;

            /**
             * <pre>
             * -1 means N/A
             * </pre>
             *
             * <code>double total_allocated_bytes = 4;</code>
             * @return The totalAllocatedBytes.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted double getTotalAllocatedBytes(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                return totalAllocatedBytes_;
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                if (java.lang.Double.doubleToRawLongBits(totalCpuNanos_) != 0) {
                    output.writeDouble(1, totalCpuNanos_);
                }
                if (java.lang.Double.doubleToRawLongBits(totalBlockedNanos_) != 0) {
                    output.writeDouble(2, totalBlockedNanos_);
                }
                if (java.lang.Double.doubleToRawLongBits(totalWaitedNanos_) != 0) {
                    output.writeDouble(3, totalWaitedNanos_);
                }
                if (java.lang.Double.doubleToRawLongBits(totalAllocatedBytes_) != 0) {
                    output.writeDouble(4, totalAllocatedBytes_);
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if (java.lang.Double.doubleToRawLongBits(totalCpuNanos_) != 0) {
                    size += com.google.protobuf.CodedOutputStream.computeDoubleSize(1, totalCpuNanos_);
                }
                if (java.lang.Double.doubleToRawLongBits(totalBlockedNanos_) != 0) {
                    size += com.google.protobuf.CodedOutputStream.computeDoubleSize(2, totalBlockedNanos_);
                }
                if (java.lang.Double.doubleToRawLongBits(totalWaitedNanos_) != 0) {
                    size += com.google.protobuf.CodedOutputStream.computeDoubleSize(3, totalWaitedNanos_);
                }
                if (java.lang.Double.doubleToRawLongBits(totalAllocatedBytes_) != 0) {
                    size += com.google.protobuf.CodedOutputStream.computeDoubleSize(4, totalAllocatedBytes_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats other = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats) obj;
                if (java.lang.Double.doubleToLongBits(getTotalCpuNanos()) != java.lang.Double.doubleToLongBits(other.getTotalCpuNanos()))
                    return false;
                if (java.lang.Double.doubleToLongBits(getTotalBlockedNanos()) != java.lang.Double.doubleToLongBits(other.getTotalBlockedNanos()))
                    return false;
                if (java.lang.Double.doubleToLongBits(getTotalWaitedNanos()) != java.lang.Double.doubleToLongBits(other.getTotalWaitedNanos()))
                    return false;
                if (java.lang.Double.doubleToLongBits(getTotalAllocatedBytes()) != java.lang.Double.doubleToLongBits(other.getTotalAllocatedBytes()))
                    return false;
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + TOTAL_CPU_NANOS_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(java.lang.Double.doubleToLongBits(getTotalCpuNanos()));
                hash = (37 * hash) + TOTAL_BLOCKED_NANOS_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(java.lang.Double.doubleToLongBits(getTotalBlockedNanos()));
                hash = (37 * hash) + TOTAL_WAITED_NANOS_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(java.lang.Double.doubleToLongBits(getTotalWaitedNanos()));
                hash = (37 * hash) + TOTAL_ALLOCATED_BYTES_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(java.lang.Double.doubleToLongBits(getTotalAllocatedBytes()));
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.ThreadStats}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Aggregate.ThreadStats)
            org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStatsOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_ThreadStats_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_ThreadStats_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                @org.checkerframework.dataflow.qual.Pure
                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    totalCpuNanos_ = 0D;
                    totalBlockedNanos_ = 0D;
                    totalWaitedNanos_ = 0D;
                    totalAllocatedBytes_ = 0D;
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_ThreadStats_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats result = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats(this);
                    result.totalCpuNanos_ = totalCpuNanos_;
                    result.totalBlockedNanos_ = totalBlockedNanos_;
                    result.totalWaitedNanos_ = totalWaitedNanos_;
                    result.totalAllocatedBytes_ = totalAllocatedBytes_;
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats) {
                        return mergeFrom((org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats other) {
                    if (other == org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.getDefaultInstance())
                        return this;
                    if (other.getTotalCpuNanos() != 0D) {
                        setTotalCpuNanos(other.getTotalCpuNanos());
                    }
                    if (other.getTotalBlockedNanos() != 0D) {
                        setTotalBlockedNanos(other.getTotalBlockedNanos());
                    }
                    if (other.getTotalWaitedNanos() != 0D) {
                        setTotalWaitedNanos(other.getTotalWaitedNanos());
                    }
                    if (other.getTotalAllocatedBytes() != 0D) {
                        setTotalAllocatedBytes(other.getTotalAllocatedBytes());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted double totalCpuNanos_;

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>double total_cpu_nanos = 1;</code>
                 * @return The totalCpuNanos.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted double getTotalCpuNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return totalCpuNanos_;
                }

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>double total_cpu_nanos = 1;</code>
                 * @param value The totalCpuNanos to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalCpuNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted double value) {
                    totalCpuNanos_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>double total_cpu_nanos = 1;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTotalCpuNanos() {
                    totalCpuNanos_ = 0D;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted double totalBlockedNanos_;

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>double total_blocked_nanos = 2;</code>
                 * @return The totalBlockedNanos.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted double getTotalBlockedNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return totalBlockedNanos_;
                }

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>double total_blocked_nanos = 2;</code>
                 * @param value The totalBlockedNanos to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalBlockedNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted double value) {
                    totalBlockedNanos_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>double total_blocked_nanos = 2;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTotalBlockedNanos() {
                    totalBlockedNanos_ = 0D;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted double totalWaitedNanos_;

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>double total_waited_nanos = 3;</code>
                 * @return The totalWaitedNanos.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted double getTotalWaitedNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return totalWaitedNanos_;
                }

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>double total_waited_nanos = 3;</code>
                 * @param value The totalWaitedNanos to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalWaitedNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted double value) {
                    totalWaitedNanos_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>double total_waited_nanos = 3;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTotalWaitedNanos() {
                    totalWaitedNanos_ = 0D;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted double totalAllocatedBytes_;

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>double total_allocated_bytes = 4;</code>
                 * @return The totalAllocatedBytes.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted double getTotalAllocatedBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return totalAllocatedBytes_;
                }

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>double total_allocated_bytes = 4;</code>
                 * @param value The totalAllocatedBytes to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalAllocatedBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted double value) {
                    totalAllocatedBytes_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * -1 means N/A
                 * </pre>
                 *
                 * <code>double total_allocated_bytes = 4;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTotalAllocatedBytes() {
                    totalAllocatedBytes_ = 0D;
                    onChanged();
                    return this;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Aggregate.ThreadStats)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Aggregate.ThreadStats)
            private static final org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<ThreadStats> PARSER = new com.google.protobuf.AbstractParser<ThreadStats>() {

                public ThreadStats parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new ThreadStats(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<ThreadStats> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<ThreadStats> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted ThreadStats this) {
                return DEFAULT_INSTANCE;
            }
        }

        public interface OldQueriesByTypeOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Aggregate.OldQueriesByType)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             * e.g. "SQL", "CQL"
             * </pre>
             *
             * <code>string type = 1;</code>
             * @return The type.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getType();

            /**
             * <pre>
             * e.g. "SQL", "CQL"
             * </pre>
             *
             * <code>string type = 1;</code>
             * @return The bytes for type.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTypeBytes();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery> getQueryList();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery getQuery(int index);

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted int getQueryCount();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueryOrBuilder> getQueryOrBuilderList();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueryOrBuilder getQueryOrBuilder(int index);
        }

        /**
         * <pre>
         * deprecated in 0.10.6
         * </pre>
         *
         * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.OldQueriesByType}
         */
        public static final class OldQueriesByType extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Aggregate.OldQueriesByType)
        OldQueriesByTypeOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use OldQueriesByType.newBuilder() to construct.
            private OldQueriesByType(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.type_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private OldQueriesByType() {
                type_ = "";
                query_ = java.util.Collections.emptyList();
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.type_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new OldQueriesByType();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType this) {
                return this.unknownFields;
            }

            private OldQueriesByType(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    type_ = s;
                                    break;
                                }
                            case 18:
                                {
                                    if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                        query_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery>();
                                        mutable_bitField0_ |= 0x00000001;
                                    }
                                    query_.add(input.readMessage(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery.parser(), extensionRegistry));
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    if (((mutable_bitField0_ & 0x00000001) != 0)) {
                        query_ = java.util.Collections.unmodifiableList(query_);
                    }
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldQueriesByType_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType this) {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldQueriesByType_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType.Builder.class);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TYPE_FIELD_NUMBER = 1;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object type_;

            /**
             * <pre>
             * e.g. "SQL", "CQL"
             * </pre>
             *
             * <code>string type = 1;</code>
             * @return The type.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getType(@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType this) {
                java.lang.Object ref = type_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    type_ = s;
                    return s;
                }
            }

            /**
             * <pre>
             * e.g. "SQL", "CQL"
             * </pre>
             *
             * <code>string type = 1;</code>
             * @return The bytes for type.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTypeBytes(@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType this) {
                java.lang.Object ref = type_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    type_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int QUERY_FIELD_NUMBER = 2;

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery> query_;

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery> getQueryList(@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType this) {
                return query_;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueryOrBuilder> getQueryOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType this) {
                return query_;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted int getQueryCount(@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType this) {
                return query_.size();
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery getQuery(@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return query_.get(index);
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueryOrBuilder getQueryOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return query_.get(index);
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
                }
                for (int i = 0; i < query_.size(); i++) {
                    output.writeMessage(2, query_.get(i));
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
                }
                for (int i = 0; i < query_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, query_.get(i));
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType other = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType) obj;
                if (!getType().equals(other.getType()))
                    return false;
                if (!getQueryList().equals(other.getQueryList()))
                    return false;
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + TYPE_FIELD_NUMBER;
                hash = (53 * hash) + getType().hashCode();
                if (getQueryCount() > 0) {
                    hash = (37 * hash) + QUERY_FIELD_NUMBER;
                    hash = (53 * hash) + getQueryList().hashCode();
                }
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.OldQueriesByType}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Aggregate.OldQueriesByType)
            org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByTypeOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldQueriesByType_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldQueriesByType_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                        getQueryFieldBuilder();
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    type_ = "";
                    if (queryBuilder_ == null) {
                        query_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        queryBuilder_.clear();
                    }
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldQueriesByType_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType result = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType(this);
                    int from_bitField0_ = bitField0_;
                    result.type_ = type_;
                    if (queryBuilder_ == null) {
                        if (((bitField0_ & 0x00000001) != 0)) {
                            query_ = java.util.Collections.unmodifiableList(query_);
                            bitField0_ = (bitField0_ & ~0x00000001);
                        }
                        result.query_ = query_;
                    } else {
                        result.query_ = queryBuilder_.build();
                    }
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType) {
                        return mergeFrom((org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType other) {
                    if (other == org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType.getDefaultInstance())
                        return this;
                    if (!other.getType().isEmpty()) {
                        type_ = other.type_;
                        onChanged();
                    }
                    if (queryBuilder_ == null) {
                        if (!other.query_.isEmpty()) {
                            if (query_.isEmpty()) {
                                query_ = other.query_;
                                bitField0_ = (bitField0_ & ~0x00000001);
                            } else {
                                ensureQueryIsMutable();
                                query_.addAll(other.query_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.query_.isEmpty()) {
                            if (queryBuilder_.isEmpty()) {
                                queryBuilder_.dispose();
                                queryBuilder_ = null;
                                query_ = other.query_;
                                bitField0_ = (bitField0_ & ~0x00000001);
                                queryBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getQueryFieldBuilder() : null;
                            } else {
                                queryBuilder_.addAllMessages(other.query_);
                            }
                        }
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted int bitField0_;

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object type_ = "";

                /**
                 * <pre>
                 * e.g. "SQL", "CQL"
                 * </pre>
                 *
                 * <code>string type = 1;</code>
                 * @return The type.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = type_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        type_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <pre>
                 * e.g. "SQL", "CQL"
                 * </pre>
                 *
                 * <code>string type = 1;</code>
                 * @return The bytes for type.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTypeBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = type_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        type_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <pre>
                 * e.g. "SQL", "CQL"
                 * </pre>
                 *
                 * <code>string type = 1;</code>
                 * @param value The type to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setType(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * e.g. "SQL", "CQL"
                 * </pre>
                 *
                 * <code>string type = 1;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearType() {
                    type_ = getDefaultInstance().getType();
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * e.g. "SQL", "CQL"
                 * </pre>
                 *
                 * <code>string type = 1;</code>
                 * @param value The bytes for type to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTypeBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    type_ = value;
                    onChanged();
                    return this;
                }

                private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery> query_ = java.util.Collections.emptyList();

                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.queryBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                private void ensureQueryIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (!((bitField0_ & 0x00000001) != 0)) {
                        query_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery>(query_);
                        bitField0_ |= 0x00000001;
                    }
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueryOrBuilder> queryBuilder_;

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery> getQueryList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (queryBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(query_);
                    } else {
                        return queryBuilder_.getMessageList();
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
                 */
                public  @org.checkerframework.checker.tainting.qual.Tainted int getQueryCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (queryBuilder_ == null) {
                        return query_.size();
                    } else {
                        return queryBuilder_.getCount();
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
                 */
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery getQuery(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (queryBuilder_ == null) {
                        return query_.get(index);
                    } else {
                        return queryBuilder_.getMessage(index);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setQuery(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery value) {
                    if (queryBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureQueryIsMutable();
                        query_.set(index, value);
                        onChanged();
                    } else {
                        queryBuilder_.setMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setQuery(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery.Builder builderForValue) {
                    if (queryBuilder_ == null) {
                        ensureQueryIsMutable();
                        query_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        queryBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addQuery(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery value) {
                    if (queryBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureQueryIsMutable();
                        query_.add(value);
                        onChanged();
                    } else {
                        queryBuilder_.addMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addQuery(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery value) {
                    if (queryBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureQueryIsMutable();
                        query_.add(index, value);
                        onChanged();
                    } else {
                        queryBuilder_.addMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addQuery(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery.Builder builderForValue) {
                    if (queryBuilder_ == null) {
                        ensureQueryIsMutable();
                        query_.add(builderForValue.build());
                        onChanged();
                    } else {
                        queryBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addQuery(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery.Builder builderForValue) {
                    if (queryBuilder_ == null) {
                        ensureQueryIsMutable();
                        query_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        queryBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllQuery(java.lang.Iterable<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery> values) {
                    if (queryBuilder_ == null) {
                        ensureQueryIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, query_);
                        onChanged();
                    } else {
                        queryBuilder_.addAllMessages(values);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearQuery() {
                    if (queryBuilder_ == null) {
                        query_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000001);
                        onChanged();
                    } else {
                        queryBuilder_.clear();
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder removeQuery(int index) {
                    if (queryBuilder_ == null) {
                        ensureQueryIsMutable();
                        query_.remove(index);
                        onChanged();
                    } else {
                        queryBuilder_.remove(index);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
                 */
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery.@org.checkerframework.checker.tainting.qual.Tainted Builder getQueryBuilder(int index) {
                    return getQueryFieldBuilder().getBuilder(index);
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
                 */
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueryOrBuilder getQueryOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (queryBuilder_ == null) {
                        return query_.get(index);
                    } else {
                        return queryBuilder_.getMessageOrBuilder(index);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueryOrBuilder> getQueryOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (queryBuilder_ != null) {
                        return queryBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(query_);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
                 */
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery.@org.checkerframework.checker.tainting.qual.Tainted Builder addQueryBuilder() {
                    return getQueryFieldBuilder().addBuilder(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery.getDefaultInstance());
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
                 */
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery.@org.checkerframework.checker.tainting.qual.Tainted Builder addQueryBuilder(int index) {
                    return getQueryFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery.getDefaultInstance());
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQuery query = 2;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery.Builder> getQueryBuilderList() {
                    return getQueryFieldBuilder().getBuilderList();
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueryOrBuilder> getQueryFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (queryBuilder_ == null) {
                        queryBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueryOrBuilder>(query_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
                        query_ = null;
                    }
                    return queryBuilder_;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Aggregate.OldQueriesByType)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Aggregate.OldQueriesByType)
            private static final org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldQueriesByType> PARSER = new com.google.protobuf.AbstractParser<OldQueriesByType>() {

                public OldQueriesByType parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new OldQueriesByType(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldQueriesByType> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldQueriesByType> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType this) {
                return DEFAULT_INSTANCE;
            }
        }

        public interface OldQueryOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Aggregate.OldQuery)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             * introduced in 0.9.1, replacing full_text attribute
             * </pre>
             *
             * <code>int32 shared_query_text_index = 5;</code>
             * @return The sharedQueryTextIndex.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted int getSharedQueryTextIndex();

            /**
             * <code>double total_duration_nanos = 2;</code>
             * @return The totalDurationNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted double getTotalDurationNanos();

            /**
             * <code>int64 execution_count = 3;</code>
             * @return The executionCount.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted long getExecutionCount();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 4;</code>
             * @return Whether the totalRows field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasTotalRows();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 4;</code>
             * @return The totalRows.
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 getTotalRows();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 4;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64OrBuilder getTotalRowsOrBuilder();
        }

        /**
         * <pre>
         * deprecated in 0.10.6
         * </pre>
         *
         * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.OldQuery}
         */
        public static final class OldQuery extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Aggregate.OldQuery)
        OldQueryOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use OldQuery.newBuilder() to construct.
            private OldQuery(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            private OldQuery() {
            }

            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted OldQuery this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new OldQuery();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted OldQuery this) {
                return this.unknownFields;
            }

            private OldQuery(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 17:
                                {
                                    totalDurationNanos_ = input.readDouble();
                                    break;
                                }
                            case 24:
                                {
                                    executionCount_ = input.readInt64();
                                    break;
                                }
                            case 34:
                                {
                                    org.glowroot.wire.api.model.Proto.OptionalInt64.Builder subBuilder = null;
                                    if (totalRows_ != null) {
                                        subBuilder = totalRows_.toBuilder();
                                    }
                                    totalRows_ = input.readMessage(org.glowroot.wire.api.model.Proto.OptionalInt64.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom(totalRows_);
                                        totalRows_ = subBuilder.buildPartial();
                                    }
                                    break;
                                }
                            case 40:
                                {
                                    sharedQueryTextIndex_ = input.readInt32();
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldQuery_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted OldQuery this) {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldQuery_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery.Builder.class);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int SHARED_QUERY_TEXT_INDEX_FIELD_NUMBER = 5;

            private  @org.checkerframework.checker.tainting.qual.Tainted int sharedQueryTextIndex_;

            /**
             * <pre>
             * introduced in 0.9.1, replacing full_text attribute
             * </pre>
             *
             * <code>int32 shared_query_text_index = 5;</code>
             * @return The sharedQueryTextIndex.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted int getSharedQueryTextIndex(@org.checkerframework.checker.tainting.qual.Tainted OldQuery this) {
                return sharedQueryTextIndex_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TOTAL_DURATION_NANOS_FIELD_NUMBER = 2;

            private  @org.checkerframework.checker.tainting.qual.Tainted double totalDurationNanos_;

            /**
             * <code>double total_duration_nanos = 2;</code>
             * @return The totalDurationNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted double getTotalDurationNanos(@org.checkerframework.checker.tainting.qual.Tainted OldQuery this) {
                return totalDurationNanos_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int EXECUTION_COUNT_FIELD_NUMBER = 3;

            private  @org.checkerframework.checker.tainting.qual.Tainted long executionCount_;

            /**
             * <code>int64 execution_count = 3;</code>
             * @return The executionCount.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getExecutionCount(@org.checkerframework.checker.tainting.qual.Tainted OldQuery this) {
                return executionCount_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TOTAL_ROWS_FIELD_NUMBER = 4;

            private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 totalRows_;

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 4;</code>
             * @return Whether the totalRows field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasTotalRows(@org.checkerframework.checker.tainting.qual.Tainted OldQuery this) {
                return totalRows_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 4;</code>
             * @return The totalRows.
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 getTotalRows(@org.checkerframework.checker.tainting.qual.Tainted OldQuery this) {
                return totalRows_ == null ? org.glowroot.wire.api.model.Proto.OptionalInt64.getDefaultInstance() : totalRows_;
            }

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 4;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64OrBuilder getTotalRowsOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldQuery this) {
                return getTotalRows();
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted OldQuery this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted OldQuery this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                if (java.lang.Double.doubleToRawLongBits(totalDurationNanos_) != 0) {
                    output.writeDouble(2, totalDurationNanos_);
                }
                if (executionCount_ != 0L) {
                    output.writeInt64(3, executionCount_);
                }
                if (totalRows_ != null) {
                    output.writeMessage(4, getTotalRows());
                }
                if (sharedQueryTextIndex_ != 0) {
                    output.writeInt32(5, sharedQueryTextIndex_);
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted OldQuery this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if (java.lang.Double.doubleToRawLongBits(totalDurationNanos_) != 0) {
                    size += com.google.protobuf.CodedOutputStream.computeDoubleSize(2, totalDurationNanos_);
                }
                if (executionCount_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream.computeInt64Size(3, executionCount_);
                }
                if (totalRows_ != null) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, getTotalRows());
                }
                if (sharedQueryTextIndex_ != 0) {
                    size += com.google.protobuf.CodedOutputStream.computeInt32Size(5, sharedQueryTextIndex_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted OldQuery this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery other = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery) obj;
                if (getSharedQueryTextIndex() != other.getSharedQueryTextIndex())
                    return false;
                if (java.lang.Double.doubleToLongBits(getTotalDurationNanos()) != java.lang.Double.doubleToLongBits(other.getTotalDurationNanos()))
                    return false;
                if (getExecutionCount() != other.getExecutionCount())
                    return false;
                if (hasTotalRows() != other.hasTotalRows())
                    return false;
                if (hasTotalRows()) {
                    if (!getTotalRows().equals(other.getTotalRows()))
                        return false;
                }
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted OldQuery this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + SHARED_QUERY_TEXT_INDEX_FIELD_NUMBER;
                hash = (53 * hash) + getSharedQueryTextIndex();
                hash = (37 * hash) + TOTAL_DURATION_NANOS_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(java.lang.Double.doubleToLongBits(getTotalDurationNanos()));
                hash = (37 * hash) + EXECUTION_COUNT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getExecutionCount());
                if (hasTotalRows()) {
                    hash = (37 * hash) + TOTAL_ROWS_FIELD_NUMBER;
                    hash = (53 * hash) + getTotalRows().hashCode();
                }
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted OldQuery this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldQuery this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted OldQuery this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.OldQuery}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Aggregate.OldQuery)
            org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueryOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldQuery_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldQuery_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                @org.checkerframework.dataflow.qual.Pure
                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                    }
                }

                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.totalRowsBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.totalRows_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    sharedQueryTextIndex_ = 0;
                    totalDurationNanos_ = 0D;
                    executionCount_ = 0L;
                    if (totalRowsBuilder_ == null) {
                        totalRows_ = null;
                    } else {
                        totalRows_ = null;
                        totalRowsBuilder_ = null;
                    }
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldQuery_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery result = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery(this);
                    result.sharedQueryTextIndex_ = sharedQueryTextIndex_;
                    result.totalDurationNanos_ = totalDurationNanos_;
                    result.executionCount_ = executionCount_;
                    if (totalRowsBuilder_ == null) {
                        result.totalRows_ = totalRows_;
                    } else {
                        result.totalRows_ = totalRowsBuilder_.build();
                    }
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery) {
                        return mergeFrom((org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery other) {
                    if (other == org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery.getDefaultInstance())
                        return this;
                    if (other.getSharedQueryTextIndex() != 0) {
                        setSharedQueryTextIndex(other.getSharedQueryTextIndex());
                    }
                    if (other.getTotalDurationNanos() != 0D) {
                        setTotalDurationNanos(other.getTotalDurationNanos());
                    }
                    if (other.getExecutionCount() != 0L) {
                        setExecutionCount(other.getExecutionCount());
                    }
                    if (other.hasTotalRows()) {
                        mergeTotalRows(other.getTotalRows());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted int sharedQueryTextIndex_;

                /**
                 * <pre>
                 * introduced in 0.9.1, replacing full_text attribute
                 * </pre>
                 *
                 * <code>int32 shared_query_text_index = 5;</code>
                 * @return The sharedQueryTextIndex.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted int getSharedQueryTextIndex(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return sharedQueryTextIndex_;
                }

                /**
                 * <pre>
                 * introduced in 0.9.1, replacing full_text attribute
                 * </pre>
                 *
                 * <code>int32 shared_query_text_index = 5;</code>
                 * @param value The sharedQueryTextIndex to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setSharedQueryTextIndex(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int value) {
                    sharedQueryTextIndex_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * introduced in 0.9.1, replacing full_text attribute
                 * </pre>
                 *
                 * <code>int32 shared_query_text_index = 5;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearSharedQueryTextIndex() {
                    sharedQueryTextIndex_ = 0;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted double totalDurationNanos_;

                /**
                 * <code>double total_duration_nanos = 2;</code>
                 * @return The totalDurationNanos.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted double getTotalDurationNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return totalDurationNanos_;
                }

                /**
                 * <code>double total_duration_nanos = 2;</code>
                 * @param value The totalDurationNanos to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalDurationNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted double value) {
                    totalDurationNanos_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>double total_duration_nanos = 2;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTotalDurationNanos() {
                    totalDurationNanos_ = 0D;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted long executionCount_;

                /**
                 * <code>int64 execution_count = 3;</code>
                 * @return The executionCount.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted long getExecutionCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return executionCount_;
                }

                /**
                 * <code>int64 execution_count = 3;</code>
                 * @param value The executionCount to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setExecutionCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                    executionCount_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>int64 execution_count = 3;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearExecutionCount() {
                    executionCount_ = 0L;
                    onChanged();
                    return this;
                }

                private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 totalRows_;

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalInt64, org.glowroot.wire.api.model.Proto.OptionalInt64.Builder, org.glowroot.wire.api.model.Proto.OptionalInt64OrBuilder> totalRowsBuilder_;

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 4;</code>
                 * @return Whether the totalRows field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasTotalRows(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return totalRowsBuilder_ != null || totalRows_ != null;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 4;</code>
                 * @return The totalRows.
                 */
                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.totalRowsBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 getTotalRows(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (totalRowsBuilder_ == null) {
                        return totalRows_ == null ? org.glowroot.wire.api.model.Proto.OptionalInt64.getDefaultInstance() : totalRows_;
                    } else {
                        return totalRowsBuilder_.getMessage();
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 4;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalRows(org.glowroot.wire.api.model.Proto.OptionalInt64 value) {
                    if (totalRowsBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        totalRows_ = value;
                        onChanged();
                    } else {
                        totalRowsBuilder_.setMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 4;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalRows(org.glowroot.wire.api.model.Proto.OptionalInt64.Builder builderForValue) {
                    if (totalRowsBuilder_ == null) {
                        totalRows_ = builderForValue.build();
                        onChanged();
                    } else {
                        totalRowsBuilder_.setMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 4;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeTotalRows(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 value) {
                    if (totalRowsBuilder_ == null) {
                        if (totalRows_ != null) {
                            totalRows_ = org.glowroot.wire.api.model.Proto.OptionalInt64.newBuilder(totalRows_).mergeFrom(value).buildPartial();
                        } else {
                            totalRows_ = value;
                        }
                        onChanged();
                    } else {
                        totalRowsBuilder_.mergeFrom(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 4;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTotalRows() {
                    if (totalRowsBuilder_ == null) {
                        totalRows_ = null;
                        onChanged();
                    } else {
                        totalRows_ = null;
                        totalRowsBuilder_ = null;
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 4;</code>
                 */
                public org.glowroot.wire.api.model.Proto.OptionalInt64.@org.checkerframework.checker.tainting.qual.Tainted Builder getTotalRowsBuilder() {
                    onChanged();
                    return getTotalRowsFieldBuilder().getBuilder();
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 4;</code>
                 */
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64OrBuilder getTotalRowsOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (totalRowsBuilder_ != null) {
                        return totalRowsBuilder_.getMessageOrBuilder();
                    } else {
                        return totalRows_ == null ? org.glowroot.wire.api.model.Proto.OptionalInt64.getDefaultInstance() : totalRows_;
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 4;</code>
                 */
                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalInt64, org.glowroot.wire.api.model.Proto.OptionalInt64.Builder, org.glowroot.wire.api.model.Proto.OptionalInt64OrBuilder> getTotalRowsFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (totalRowsBuilder_ == null) {
                        totalRowsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalInt64, org.glowroot.wire.api.model.Proto.OptionalInt64.Builder, org.glowroot.wire.api.model.Proto.OptionalInt64OrBuilder>(getTotalRows(), getParentForChildren(), isClean());
                        totalRows_ = null;
                    }
                    return totalRowsBuilder_;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Aggregate.OldQuery)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Aggregate.OldQuery)
            private static final org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQuery();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldQuery> PARSER = new com.google.protobuf.AbstractParser<OldQuery>() {

                public OldQuery parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new OldQuery(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldQuery> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldQuery> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted OldQuery this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQuery getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted OldQuery this) {
                return DEFAULT_INSTANCE;
            }
        }

        public interface QueryOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Aggregate.Query)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             * e.g. "SQL", "CQL"
             * </pre>
             *
             * <code>string type = 1;</code>
             * @return The type.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getType();

            /**
             * <pre>
             * e.g. "SQL", "CQL"
             * </pre>
             *
             * <code>string type = 1;</code>
             * @return The bytes for type.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTypeBytes();

            /**
             * <code>int32 shared_query_text_index = 2;</code>
             * @return The sharedQueryTextIndex.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted int getSharedQueryTextIndex();

            /**
             * <code>double total_duration_nanos = 3;</code>
             * @return The totalDurationNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted double getTotalDurationNanos();

            /**
             * <code>int64 execution_count = 4;</code>
             * @return The executionCount.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted long getExecutionCount();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 5;</code>
             * @return Whether the totalRows field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean hasTotalRows();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 5;</code>
             * @return The totalRows.
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 getTotalRows();

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 5;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64OrBuilder getTotalRowsOrBuilder();

            /**
             * <pre>
             * only used for trace specific queries
             * </pre>
             *
             * <code>bool active = 6;</code>
             * @return The active.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted boolean getActive();
        }

        /**
         * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.Query}
         */
        public static final class Query extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Aggregate.Query)
        QueryOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use Query.newBuilder() to construct.
            private Query(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.type_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private Query() {
                type_ = "";
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.type_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted Query this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new Query();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Query this) {
                return this.unknownFields;
            }

            private Query(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    type_ = s;
                                    break;
                                }
                            case 16:
                                {
                                    sharedQueryTextIndex_ = input.readInt32();
                                    break;
                                }
                            case 25:
                                {
                                    totalDurationNanos_ = input.readDouble();
                                    break;
                                }
                            case 32:
                                {
                                    executionCount_ = input.readInt64();
                                    break;
                                }
                            case 42:
                                {
                                    org.glowroot.wire.api.model.Proto.OptionalInt64.Builder subBuilder = null;
                                    if (totalRows_ != null) {
                                        subBuilder = totalRows_.toBuilder();
                                    }
                                    totalRows_ = input.readMessage(org.glowroot.wire.api.model.Proto.OptionalInt64.parser(), extensionRegistry);
                                    if (subBuilder != null) {
                                        subBuilder.mergeFrom(totalRows_);
                                        totalRows_ = subBuilder.buildPartial();
                                    }
                                    break;
                                }
                            case 48:
                                {
                                    active_ = input.readBool();
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_Query_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Query this) {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_Query_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.Builder.class);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TYPE_FIELD_NUMBER = 1;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object type_;

            /**
             * <pre>
             * e.g. "SQL", "CQL"
             * </pre>
             *
             * <code>string type = 1;</code>
             * @return The type.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getType(@org.checkerframework.checker.tainting.qual.Tainted Query this) {
                java.lang.Object ref = type_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    type_ = s;
                    return s;
                }
            }

            /**
             * <pre>
             * e.g. "SQL", "CQL"
             * </pre>
             *
             * <code>string type = 1;</code>
             * @return The bytes for type.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTypeBytes(@org.checkerframework.checker.tainting.qual.Tainted Query this) {
                java.lang.Object ref = type_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    type_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int SHARED_QUERY_TEXT_INDEX_FIELD_NUMBER = 2;

            private  @org.checkerframework.checker.tainting.qual.Tainted int sharedQueryTextIndex_;

            /**
             * <code>int32 shared_query_text_index = 2;</code>
             * @return The sharedQueryTextIndex.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted int getSharedQueryTextIndex(@org.checkerframework.checker.tainting.qual.Tainted Query this) {
                return sharedQueryTextIndex_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TOTAL_DURATION_NANOS_FIELD_NUMBER = 3;

            private  @org.checkerframework.checker.tainting.qual.Tainted double totalDurationNanos_;

            /**
             * <code>double total_duration_nanos = 3;</code>
             * @return The totalDurationNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted double getTotalDurationNanos(@org.checkerframework.checker.tainting.qual.Tainted Query this) {
                return totalDurationNanos_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int EXECUTION_COUNT_FIELD_NUMBER = 4;

            private  @org.checkerframework.checker.tainting.qual.Tainted long executionCount_;

            /**
             * <code>int64 execution_count = 4;</code>
             * @return The executionCount.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getExecutionCount(@org.checkerframework.checker.tainting.qual.Tainted Query this) {
                return executionCount_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TOTAL_ROWS_FIELD_NUMBER = 5;

            private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 totalRows_;

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 5;</code>
             * @return Whether the totalRows field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasTotalRows(@org.checkerframework.checker.tainting.qual.Tainted Query this) {
                return totalRows_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 5;</code>
             * @return The totalRows.
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 getTotalRows(@org.checkerframework.checker.tainting.qual.Tainted Query this) {
                return totalRows_ == null ? org.glowroot.wire.api.model.Proto.OptionalInt64.getDefaultInstance() : totalRows_;
            }

            /**
             * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 5;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64OrBuilder getTotalRowsOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Query this) {
                return getTotalRows();
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int ACTIVE_FIELD_NUMBER = 6;

            private  @org.checkerframework.checker.tainting.qual.Tainted boolean active_;

            /**
             * <pre>
             * only used for trace specific queries
             * </pre>
             *
             * <code>bool active = 6;</code>
             * @return The active.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean getActive(@org.checkerframework.checker.tainting.qual.Tainted Query this) {
                return active_;
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Query this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted Query this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
                }
                if (sharedQueryTextIndex_ != 0) {
                    output.writeInt32(2, sharedQueryTextIndex_);
                }
                if (java.lang.Double.doubleToRawLongBits(totalDurationNanos_) != 0) {
                    output.writeDouble(3, totalDurationNanos_);
                }
                if (executionCount_ != 0L) {
                    output.writeInt64(4, executionCount_);
                }
                if (totalRows_ != null) {
                    output.writeMessage(5, getTotalRows());
                }
                if (active_ != false) {
                    output.writeBool(6, active_);
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted Query this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
                }
                if (sharedQueryTextIndex_ != 0) {
                    size += com.google.protobuf.CodedOutputStream.computeInt32Size(2, sharedQueryTextIndex_);
                }
                if (java.lang.Double.doubleToRawLongBits(totalDurationNanos_) != 0) {
                    size += com.google.protobuf.CodedOutputStream.computeDoubleSize(3, totalDurationNanos_);
                }
                if (executionCount_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream.computeInt64Size(4, executionCount_);
                }
                if (totalRows_ != null) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, getTotalRows());
                }
                if (active_ != false) {
                    size += com.google.protobuf.CodedOutputStream.computeBoolSize(6, active_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted Query this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query other = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query) obj;
                if (!getType().equals(other.getType()))
                    return false;
                if (getSharedQueryTextIndex() != other.getSharedQueryTextIndex())
                    return false;
                if (java.lang.Double.doubleToLongBits(getTotalDurationNanos()) != java.lang.Double.doubleToLongBits(other.getTotalDurationNanos()))
                    return false;
                if (getExecutionCount() != other.getExecutionCount())
                    return false;
                if (hasTotalRows() != other.hasTotalRows())
                    return false;
                if (hasTotalRows()) {
                    if (!getTotalRows().equals(other.getTotalRows()))
                        return false;
                }
                if (getActive() != other.getActive())
                    return false;
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted Query this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + TYPE_FIELD_NUMBER;
                hash = (53 * hash) + getType().hashCode();
                hash = (37 * hash) + SHARED_QUERY_TEXT_INDEX_FIELD_NUMBER;
                hash = (53 * hash) + getSharedQueryTextIndex();
                hash = (37 * hash) + TOTAL_DURATION_NANOS_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(java.lang.Double.doubleToLongBits(getTotalDurationNanos()));
                hash = (37 * hash) + EXECUTION_COUNT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getExecutionCount());
                if (hasTotalRows()) {
                    hash = (37 * hash) + TOTAL_ROWS_FIELD_NUMBER;
                    hash = (53 * hash) + getTotalRows().hashCode();
                }
                hash = (37 * hash) + ACTIVE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getActive());
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted Query this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted Query this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted Query this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.Query}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Aggregate.Query)
            org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.QueryOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_Query_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_Query_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                @org.checkerframework.dataflow.qual.Pure
                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                    }
                }

                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.totalRowsBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.totalRows_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.type_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    type_ = "";
                    sharedQueryTextIndex_ = 0;
                    totalDurationNanos_ = 0D;
                    executionCount_ = 0L;
                    if (totalRowsBuilder_ == null) {
                        totalRows_ = null;
                    } else {
                        totalRows_ = null;
                        totalRowsBuilder_ = null;
                    }
                    active_ = false;
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_Query_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query result = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query(this);
                    result.type_ = type_;
                    result.sharedQueryTextIndex_ = sharedQueryTextIndex_;
                    result.totalDurationNanos_ = totalDurationNanos_;
                    result.executionCount_ = executionCount_;
                    if (totalRowsBuilder_ == null) {
                        result.totalRows_ = totalRows_;
                    } else {
                        result.totalRows_ = totalRowsBuilder_.build();
                    }
                    result.active_ = active_;
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query) {
                        return mergeFrom((org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query other) {
                    if (other == org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.getDefaultInstance())
                        return this;
                    if (!other.getType().isEmpty()) {
                        type_ = other.type_;
                        onChanged();
                    }
                    if (other.getSharedQueryTextIndex() != 0) {
                        setSharedQueryTextIndex(other.getSharedQueryTextIndex());
                    }
                    if (other.getTotalDurationNanos() != 0D) {
                        setTotalDurationNanos(other.getTotalDurationNanos());
                    }
                    if (other.getExecutionCount() != 0L) {
                        setExecutionCount(other.getExecutionCount());
                    }
                    if (other.hasTotalRows()) {
                        mergeTotalRows(other.getTotalRows());
                    }
                    if (other.getActive() != false) {
                        setActive(other.getActive());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object type_ = "";

                /**
                 * <pre>
                 * e.g. "SQL", "CQL"
                 * </pre>
                 *
                 * <code>string type = 1;</code>
                 * @return The type.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = type_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        type_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <pre>
                 * e.g. "SQL", "CQL"
                 * </pre>
                 *
                 * <code>string type = 1;</code>
                 * @return The bytes for type.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTypeBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = type_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        type_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <pre>
                 * e.g. "SQL", "CQL"
                 * </pre>
                 *
                 * <code>string type = 1;</code>
                 * @param value The type to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setType(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * e.g. "SQL", "CQL"
                 * </pre>
                 *
                 * <code>string type = 1;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearType() {
                    type_ = getDefaultInstance().getType();
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * e.g. "SQL", "CQL"
                 * </pre>
                 *
                 * <code>string type = 1;</code>
                 * @param value The bytes for type to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTypeBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    type_ = value;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted int sharedQueryTextIndex_;

                /**
                 * <code>int32 shared_query_text_index = 2;</code>
                 * @return The sharedQueryTextIndex.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted int getSharedQueryTextIndex(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return sharedQueryTextIndex_;
                }

                /**
                 * <code>int32 shared_query_text_index = 2;</code>
                 * @param value The sharedQueryTextIndex to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setSharedQueryTextIndex(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int value) {
                    sharedQueryTextIndex_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>int32 shared_query_text_index = 2;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearSharedQueryTextIndex() {
                    sharedQueryTextIndex_ = 0;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted double totalDurationNanos_;

                /**
                 * <code>double total_duration_nanos = 3;</code>
                 * @return The totalDurationNanos.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted double getTotalDurationNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return totalDurationNanos_;
                }

                /**
                 * <code>double total_duration_nanos = 3;</code>
                 * @param value The totalDurationNanos to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalDurationNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted double value) {
                    totalDurationNanos_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>double total_duration_nanos = 3;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTotalDurationNanos() {
                    totalDurationNanos_ = 0D;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted long executionCount_;

                /**
                 * <code>int64 execution_count = 4;</code>
                 * @return The executionCount.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted long getExecutionCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return executionCount_;
                }

                /**
                 * <code>int64 execution_count = 4;</code>
                 * @param value The executionCount to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setExecutionCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                    executionCount_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>int64 execution_count = 4;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearExecutionCount() {
                    executionCount_ = 0L;
                    onChanged();
                    return this;
                }

                private org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 totalRows_;

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalInt64, org.glowroot.wire.api.model.Proto.OptionalInt64.Builder, org.glowroot.wire.api.model.Proto.OptionalInt64OrBuilder> totalRowsBuilder_;

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 5;</code>
                 * @return Whether the totalRows field is set.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasTotalRows(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return totalRowsBuilder_ != null || totalRows_ != null;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 5;</code>
                 * @return The totalRows.
                 */
                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.totalRowsBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 getTotalRows(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (totalRowsBuilder_ == null) {
                        return totalRows_ == null ? org.glowroot.wire.api.model.Proto.OptionalInt64.getDefaultInstance() : totalRows_;
                    } else {
                        return totalRowsBuilder_.getMessage();
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 5;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalRows(org.glowroot.wire.api.model.Proto.OptionalInt64 value) {
                    if (totalRowsBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        totalRows_ = value;
                        onChanged();
                    } else {
                        totalRowsBuilder_.setMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 5;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalRows(org.glowroot.wire.api.model.Proto.OptionalInt64.Builder builderForValue) {
                    if (totalRowsBuilder_ == null) {
                        totalRows_ = builderForValue.build();
                        onChanged();
                    } else {
                        totalRowsBuilder_.setMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 5;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeTotalRows(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64 value) {
                    if (totalRowsBuilder_ == null) {
                        if (totalRows_ != null) {
                            totalRows_ = org.glowroot.wire.api.model.Proto.OptionalInt64.newBuilder(totalRows_).mergeFrom(value).buildPartial();
                        } else {
                            totalRows_ = value;
                        }
                        onChanged();
                    } else {
                        totalRowsBuilder_.mergeFrom(value);
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 5;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTotalRows() {
                    if (totalRowsBuilder_ == null) {
                        totalRows_ = null;
                        onChanged();
                    } else {
                        totalRows_ = null;
                        totalRowsBuilder_ = null;
                    }
                    return this;
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 5;</code>
                 */
                public org.glowroot.wire.api.model.Proto.OptionalInt64.@org.checkerframework.checker.tainting.qual.Tainted Builder getTotalRowsBuilder() {
                    onChanged();
                    return getTotalRowsFieldBuilder().getBuilder();
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 5;</code>
                 */
                public org.glowroot.wire.api.model.Proto.@org.checkerframework.checker.tainting.qual.Tainted OptionalInt64OrBuilder getTotalRowsOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (totalRowsBuilder_ != null) {
                        return totalRowsBuilder_.getMessageOrBuilder();
                    } else {
                        return totalRows_ == null ? org.glowroot.wire.api.model.Proto.OptionalInt64.getDefaultInstance() : totalRows_;
                    }
                }

                /**
                 * <code>.org_glowroot_wire_api_model.OptionalInt64 total_rows = 5;</code>
                 */
                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalInt64, org.glowroot.wire.api.model.Proto.OptionalInt64.Builder, org.glowroot.wire.api.model.Proto.OptionalInt64OrBuilder> getTotalRowsFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (totalRowsBuilder_ == null) {
                        totalRowsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.Proto.OptionalInt64, org.glowroot.wire.api.model.Proto.OptionalInt64.Builder, org.glowroot.wire.api.model.Proto.OptionalInt64OrBuilder>(getTotalRows(), getParentForChildren(), isClean());
                        totalRows_ = null;
                    }
                    return totalRowsBuilder_;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted boolean active_;

                /**
                 * <pre>
                 * only used for trace specific queries
                 * </pre>
                 *
                 * <code>bool active = 6;</code>
                 * @return The active.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted boolean getActive(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return active_;
                }

                /**
                 * <pre>
                 * only used for trace specific queries
                 * </pre>
                 *
                 * <code>bool active = 6;</code>
                 * @param value The active to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setActive(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted boolean value) {
                    active_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * only used for trace specific queries
                 * </pre>
                 *
                 * <code>bool active = 6;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearActive() {
                    active_ = false;
                    onChanged();
                    return this;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Aggregate.Query)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Aggregate.Query)
            private static final org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Query> PARSER = new com.google.protobuf.AbstractParser<Query>() {

                public Query parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new Query(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Query> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Query> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted Query this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Query this) {
                return DEFAULT_INSTANCE;
            }
        }

        public interface OldServiceCallsByTypeOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             * e.g. "HTTP"
             * </pre>
             *
             * <code>string type = 1;</code>
             * @return The type.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getType();

            /**
             * <pre>
             * e.g. "HTTP"
             * </pre>
             *
             * <code>string type = 1;</code>
             * @return The bytes for type.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTypeBytes();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall> getServiceCallList();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall getServiceCall(int index);

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted int getServiceCallCount();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallOrBuilder> getServiceCallOrBuilderList();

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallOrBuilder getServiceCallOrBuilder(int index);
        }

        /**
         * <pre>
         * deprecated in 0.10.6
         * </pre>
         *
         * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType}
         */
        public static final class OldServiceCallsByType extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType)
        OldServiceCallsByTypeOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use OldServiceCallsByType.newBuilder() to construct.
            private OldServiceCallsByType(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.type_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private OldServiceCallsByType() {
                type_ = "";
                serviceCall_ = java.util.Collections.emptyList();
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.type_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new OldServiceCallsByType();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType this) {
                return this.unknownFields;
            }

            private OldServiceCallsByType(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    type_ = s;
                                    break;
                                }
                            case 18:
                                {
                                    if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                        serviceCall_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall>();
                                        mutable_bitField0_ |= 0x00000001;
                                    }
                                    serviceCall_.add(input.readMessage(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall.parser(), extensionRegistry));
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    if (((mutable_bitField0_ & 0x00000001) != 0)) {
                        serviceCall_ = java.util.Collections.unmodifiableList(serviceCall_);
                    }
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldServiceCallsByType_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType this) {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldServiceCallsByType_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType.Builder.class);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TYPE_FIELD_NUMBER = 1;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object type_;

            /**
             * <pre>
             * e.g. "HTTP"
             * </pre>
             *
             * <code>string type = 1;</code>
             * @return The type.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getType(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType this) {
                java.lang.Object ref = type_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    type_ = s;
                    return s;
                }
            }

            /**
             * <pre>
             * e.g. "HTTP"
             * </pre>
             *
             * <code>string type = 1;</code>
             * @return The bytes for type.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTypeBytes(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType this) {
                java.lang.Object ref = type_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    type_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int SERVICE_CALL_FIELD_NUMBER = 2;

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall> serviceCall_;

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall> getServiceCallList(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType this) {
                return serviceCall_;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallOrBuilder> getServiceCallOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType this) {
                return serviceCall_;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted int getServiceCallCount(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType this) {
                return serviceCall_.size();
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall getServiceCall(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return serviceCall_.get(index);
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
             */
            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallOrBuilder getServiceCallOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                return serviceCall_.get(index);
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
                }
                for (int i = 0; i < serviceCall_.size(); i++) {
                    output.writeMessage(2, serviceCall_.get(i));
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
                }
                for (int i = 0; i < serviceCall_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, serviceCall_.get(i));
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType other = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType) obj;
                if (!getType().equals(other.getType()))
                    return false;
                if (!getServiceCallList().equals(other.getServiceCallList()))
                    return false;
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + TYPE_FIELD_NUMBER;
                hash = (53 * hash) + getType().hashCode();
                if (getServiceCallCount() > 0) {
                    hash = (37 * hash) + SERVICE_CALL_FIELD_NUMBER;
                    hash = (53 * hash) + getServiceCallList().hashCode();
                }
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType)
            org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByTypeOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldServiceCallsByType_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldServiceCallsByType_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                        getServiceCallFieldBuilder();
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    type_ = "";
                    if (serviceCallBuilder_ == null) {
                        serviceCall_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        serviceCallBuilder_.clear();
                    }
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldServiceCallsByType_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType result = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType(this);
                    int from_bitField0_ = bitField0_;
                    result.type_ = type_;
                    if (serviceCallBuilder_ == null) {
                        if (((bitField0_ & 0x00000001) != 0)) {
                            serviceCall_ = java.util.Collections.unmodifiableList(serviceCall_);
                            bitField0_ = (bitField0_ & ~0x00000001);
                        }
                        result.serviceCall_ = serviceCall_;
                    } else {
                        result.serviceCall_ = serviceCallBuilder_.build();
                    }
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType) {
                        return mergeFrom((org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType other) {
                    if (other == org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType.getDefaultInstance())
                        return this;
                    if (!other.getType().isEmpty()) {
                        type_ = other.type_;
                        onChanged();
                    }
                    if (serviceCallBuilder_ == null) {
                        if (!other.serviceCall_.isEmpty()) {
                            if (serviceCall_.isEmpty()) {
                                serviceCall_ = other.serviceCall_;
                                bitField0_ = (bitField0_ & ~0x00000001);
                            } else {
                                ensureServiceCallIsMutable();
                                serviceCall_.addAll(other.serviceCall_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.serviceCall_.isEmpty()) {
                            if (serviceCallBuilder_.isEmpty()) {
                                serviceCallBuilder_.dispose();
                                serviceCallBuilder_ = null;
                                serviceCall_ = other.serviceCall_;
                                bitField0_ = (bitField0_ & ~0x00000001);
                                serviceCallBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getServiceCallFieldBuilder() : null;
                            } else {
                                serviceCallBuilder_.addAllMessages(other.serviceCall_);
                            }
                        }
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted int bitField0_;

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object type_ = "";

                /**
                 * <pre>
                 * e.g. "HTTP"
                 * </pre>
                 *
                 * <code>string type = 1;</code>
                 * @return The type.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = type_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        type_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <pre>
                 * e.g. "HTTP"
                 * </pre>
                 *
                 * <code>string type = 1;</code>
                 * @return The bytes for type.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTypeBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = type_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        type_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <pre>
                 * e.g. "HTTP"
                 * </pre>
                 *
                 * <code>string type = 1;</code>
                 * @param value The type to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setType(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * e.g. "HTTP"
                 * </pre>
                 *
                 * <code>string type = 1;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearType() {
                    type_ = getDefaultInstance().getType();
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * e.g. "HTTP"
                 * </pre>
                 *
                 * <code>string type = 1;</code>
                 * @param value The bytes for type to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTypeBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    type_ = value;
                    onChanged();
                    return this;
                }

                private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall> serviceCall_ = java.util.Collections.emptyList();

                @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.serviceCallBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                private void ensureServiceCallIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (!((bitField0_ & 0x00000001) != 0)) {
                        serviceCall_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall>(serviceCall_);
                        bitField0_ |= 0x00000001;
                    }
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallOrBuilder> serviceCallBuilder_;

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall> getServiceCallList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (serviceCallBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(serviceCall_);
                    } else {
                        return serviceCallBuilder_.getMessageList();
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
                 */
                public  @org.checkerframework.checker.tainting.qual.Tainted int getServiceCallCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (serviceCallBuilder_ == null) {
                        return serviceCall_.size();
                    } else {
                        return serviceCallBuilder_.getCount();
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
                 */
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall getServiceCall(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (serviceCallBuilder_ == null) {
                        return serviceCall_.get(index);
                    } else {
                        return serviceCallBuilder_.getMessage(index);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setServiceCall(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall value) {
                    if (serviceCallBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureServiceCallIsMutable();
                        serviceCall_.set(index, value);
                        onChanged();
                    } else {
                        serviceCallBuilder_.setMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setServiceCall(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall.Builder builderForValue) {
                    if (serviceCallBuilder_ == null) {
                        ensureServiceCallIsMutable();
                        serviceCall_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        serviceCallBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addServiceCall(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall value) {
                    if (serviceCallBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureServiceCallIsMutable();
                        serviceCall_.add(value);
                        onChanged();
                    } else {
                        serviceCallBuilder_.addMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addServiceCall(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall value) {
                    if (serviceCallBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureServiceCallIsMutable();
                        serviceCall_.add(index, value);
                        onChanged();
                    } else {
                        serviceCallBuilder_.addMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addServiceCall(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall.Builder builderForValue) {
                    if (serviceCallBuilder_ == null) {
                        ensureServiceCallIsMutable();
                        serviceCall_.add(builderForValue.build());
                        onChanged();
                    } else {
                        serviceCallBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addServiceCall(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall.Builder builderForValue) {
                    if (serviceCallBuilder_ == null) {
                        ensureServiceCallIsMutable();
                        serviceCall_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        serviceCallBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllServiceCall(java.lang.Iterable<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall> values) {
                    if (serviceCallBuilder_ == null) {
                        ensureServiceCallIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, serviceCall_);
                        onChanged();
                    } else {
                        serviceCallBuilder_.addAllMessages(values);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearServiceCall() {
                    if (serviceCallBuilder_ == null) {
                        serviceCall_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000001);
                        onChanged();
                    } else {
                        serviceCallBuilder_.clear();
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder removeServiceCall(int index) {
                    if (serviceCallBuilder_ == null) {
                        ensureServiceCallIsMutable();
                        serviceCall_.remove(index);
                        onChanged();
                    } else {
                        serviceCallBuilder_.remove(index);
                    }
                    return this;
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
                 */
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall.@org.checkerframework.checker.tainting.qual.Tainted Builder getServiceCallBuilder(int index) {
                    return getServiceCallFieldBuilder().getBuilder(index);
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
                 */
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallOrBuilder getServiceCallOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                    if (serviceCallBuilder_ == null) {
                        return serviceCall_.get(index);
                    } else {
                        return serviceCallBuilder_.getMessageOrBuilder(index);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallOrBuilder> getServiceCallOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (serviceCallBuilder_ != null) {
                        return serviceCallBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(serviceCall_);
                    }
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
                 */
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall.@org.checkerframework.checker.tainting.qual.Tainted Builder addServiceCallBuilder() {
                    return getServiceCallFieldBuilder().addBuilder(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall.getDefaultInstance());
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
                 */
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall.@org.checkerframework.checker.tainting.qual.Tainted Builder addServiceCallBuilder(int index) {
                    return getServiceCallFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall.getDefaultInstance());
                }

                /**
                 * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCall service_call = 2;</code>
                 */
                public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall.Builder> getServiceCallBuilderList() {
                    return getServiceCallFieldBuilder().getBuilderList();
                }

                private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallOrBuilder> getServiceCallFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (serviceCallBuilder_ == null) {
                        serviceCallBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallOrBuilder>(serviceCall_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
                        serviceCall_ = null;
                    }
                    return serviceCallBuilder_;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType)
            private static final org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldServiceCallsByType> PARSER = new com.google.protobuf.AbstractParser<OldServiceCallsByType>() {

                public OldServiceCallsByType parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new OldServiceCallsByType(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldServiceCallsByType> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldServiceCallsByType> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType this) {
                return DEFAULT_INSTANCE;
            }
        }

        public interface OldServiceCallOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Aggregate.OldServiceCall)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <code>string text = 1;</code>
             * @return The text.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getText();

            /**
             * <code>string text = 1;</code>
             * @return The bytes for text.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTextBytes();

            /**
             * <code>double total_duration_nanos = 2;</code>
             * @return The totalDurationNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted double getTotalDurationNanos();

            /**
             * <code>int64 execution_count = 3;</code>
             * @return The executionCount.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted long getExecutionCount();
        }

        /**
         * <pre>
         * deprecated in 0.10.6
         * </pre>
         *
         * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.OldServiceCall}
         */
        public static final class OldServiceCall extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Aggregate.OldServiceCall)
        OldServiceCallOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use OldServiceCall.newBuilder() to construct.
            private OldServiceCall(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.text_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private OldServiceCall() {
                text_ = "";
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.text_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new OldServiceCall();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall this) {
                return this.unknownFields;
            }

            private OldServiceCall(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    text_ = s;
                                    break;
                                }
                            case 17:
                                {
                                    totalDurationNanos_ = input.readDouble();
                                    break;
                                }
                            case 24:
                                {
                                    executionCount_ = input.readInt64();
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldServiceCall_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall this) {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldServiceCall_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall.Builder.class);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TEXT_FIELD_NUMBER = 1;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object text_;

            /**
             * <code>string text = 1;</code>
             * @return The text.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getText(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall this) {
                java.lang.Object ref = text_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    text_ = s;
                    return s;
                }
            }

            /**
             * <code>string text = 1;</code>
             * @return The bytes for text.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTextBytes(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall this) {
                java.lang.Object ref = text_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    text_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TOTAL_DURATION_NANOS_FIELD_NUMBER = 2;

            private  @org.checkerframework.checker.tainting.qual.Tainted double totalDurationNanos_;

            /**
             * <code>double total_duration_nanos = 2;</code>
             * @return The totalDurationNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted double getTotalDurationNanos(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall this) {
                return totalDurationNanos_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int EXECUTION_COUNT_FIELD_NUMBER = 3;

            private  @org.checkerframework.checker.tainting.qual.Tainted long executionCount_;

            /**
             * <code>int64 execution_count = 3;</code>
             * @return The executionCount.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getExecutionCount(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall this) {
                return executionCount_;
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(text_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 1, text_);
                }
                if (java.lang.Double.doubleToRawLongBits(totalDurationNanos_) != 0) {
                    output.writeDouble(2, totalDurationNanos_);
                }
                if (executionCount_ != 0L) {
                    output.writeInt64(3, executionCount_);
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(text_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, text_);
                }
                if (java.lang.Double.doubleToRawLongBits(totalDurationNanos_) != 0) {
                    size += com.google.protobuf.CodedOutputStream.computeDoubleSize(2, totalDurationNanos_);
                }
                if (executionCount_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream.computeInt64Size(3, executionCount_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall other = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall) obj;
                if (!getText().equals(other.getText()))
                    return false;
                if (java.lang.Double.doubleToLongBits(getTotalDurationNanos()) != java.lang.Double.doubleToLongBits(other.getTotalDurationNanos()))
                    return false;
                if (getExecutionCount() != other.getExecutionCount())
                    return false;
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + TEXT_FIELD_NUMBER;
                hash = (53 * hash) + getText().hashCode();
                hash = (37 * hash) + TOTAL_DURATION_NANOS_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(java.lang.Double.doubleToLongBits(getTotalDurationNanos()));
                hash = (37 * hash) + EXECUTION_COUNT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getExecutionCount());
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.OldServiceCall}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Aggregate.OldServiceCall)
            org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldServiceCall_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldServiceCall_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                @org.checkerframework.dataflow.qual.Pure
                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                    }
                }

                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.text_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    text_ = "";
                    totalDurationNanos_ = 0D;
                    executionCount_ = 0L;
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_OldServiceCall_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall result = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall(this);
                    result.text_ = text_;
                    result.totalDurationNanos_ = totalDurationNanos_;
                    result.executionCount_ = executionCount_;
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall) {
                        return mergeFrom((org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall other) {
                    if (other == org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall.getDefaultInstance())
                        return this;
                    if (!other.getText().isEmpty()) {
                        text_ = other.text_;
                        onChanged();
                    }
                    if (other.getTotalDurationNanos() != 0D) {
                        setTotalDurationNanos(other.getTotalDurationNanos());
                    }
                    if (other.getExecutionCount() != 0L) {
                        setExecutionCount(other.getExecutionCount());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object text_ = "";

                /**
                 * <code>string text = 1;</code>
                 * @return The text.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getText(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = text_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        text_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <code>string text = 1;</code>
                 * @return The bytes for text.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTextBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = text_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        text_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>string text = 1;</code>
                 * @param value The text to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setText(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    text_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>string text = 1;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearText() {
                    text_ = getDefaultInstance().getText();
                    onChanged();
                    return this;
                }

                /**
                 * <code>string text = 1;</code>
                 * @param value The bytes for text to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTextBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    text_ = value;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted double totalDurationNanos_;

                /**
                 * <code>double total_duration_nanos = 2;</code>
                 * @return The totalDurationNanos.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted double getTotalDurationNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return totalDurationNanos_;
                }

                /**
                 * <code>double total_duration_nanos = 2;</code>
                 * @param value The totalDurationNanos to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalDurationNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted double value) {
                    totalDurationNanos_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>double total_duration_nanos = 2;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTotalDurationNanos() {
                    totalDurationNanos_ = 0D;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted long executionCount_;

                /**
                 * <code>int64 execution_count = 3;</code>
                 * @return The executionCount.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted long getExecutionCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return executionCount_;
                }

                /**
                 * <code>int64 execution_count = 3;</code>
                 * @param value The executionCount to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setExecutionCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                    executionCount_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>int64 execution_count = 3;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearExecutionCount() {
                    executionCount_ = 0L;
                    onChanged();
                    return this;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Aggregate.OldServiceCall)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Aggregate.OldServiceCall)
            private static final org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCall();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldServiceCall> PARSER = new com.google.protobuf.AbstractParser<OldServiceCall>() {

                public OldServiceCall parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new OldServiceCall(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldServiceCall> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<OldServiceCall> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted OldServiceCall this) {
                return DEFAULT_INSTANCE;
            }
        }

        public interface ServiceCallOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Aggregate.ServiceCall)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             * e.g. "HTTP"
             * </pre>
             *
             * <code>string type = 1;</code>
             * @return The type.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getType();

            /**
             * <pre>
             * e.g. "HTTP"
             * </pre>
             *
             * <code>string type = 1;</code>
             * @return The bytes for type.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTypeBytes();

            /**
             * <code>string text = 2;</code>
             * @return The text.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getText();

            /**
             * <code>string text = 2;</code>
             * @return The bytes for text.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTextBytes();

            /**
             * <code>double total_duration_nanos = 3;</code>
             * @return The totalDurationNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted double getTotalDurationNanos();

            /**
             * <code>int64 execution_count = 4;</code>
             * @return The executionCount.
             */
            @org.checkerframework.dataflow.qual.Pure
             @org.checkerframework.checker.tainting.qual.Tainted long getExecutionCount();
        }

        /**
         * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.ServiceCall}
         */
        public static final class ServiceCall extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Aggregate.ServiceCall)
        ServiceCallOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use ServiceCall.newBuilder() to construct.
            private ServiceCall(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.text_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.type_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private ServiceCall() {
                type_ = "";
                text_ = "";
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.text_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted ServiceCall this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new ServiceCall();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted ServiceCall this) {
                return this.unknownFields;
            }

            private ServiceCall(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    type_ = s;
                                    break;
                                }
                            case 18:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    text_ = s;
                                    break;
                                }
                            case 25:
                                {
                                    totalDurationNanos_ = input.readDouble();
                                    break;
                                }
                            case 32:
                                {
                                    executionCount_ = input.readInt64();
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_ServiceCall_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted ServiceCall this) {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_ServiceCall_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall.Builder.class);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TYPE_FIELD_NUMBER = 1;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object type_;

            /**
             * <pre>
             * e.g. "HTTP"
             * </pre>
             *
             * <code>string type = 1;</code>
             * @return The type.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getType(@org.checkerframework.checker.tainting.qual.Tainted ServiceCall this) {
                java.lang.Object ref = type_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    type_ = s;
                    return s;
                }
            }

            /**
             * <pre>
             * e.g. "HTTP"
             * </pre>
             *
             * <code>string type = 1;</code>
             * @return The bytes for type.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTypeBytes(@org.checkerframework.checker.tainting.qual.Tainted ServiceCall this) {
                java.lang.Object ref = type_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    type_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TEXT_FIELD_NUMBER = 2;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object text_;

            /**
             * <code>string text = 2;</code>
             * @return The text.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getText(@org.checkerframework.checker.tainting.qual.Tainted ServiceCall this) {
                java.lang.Object ref = text_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    text_ = s;
                    return s;
                }
            }

            /**
             * <code>string text = 2;</code>
             * @return The bytes for text.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTextBytes(@org.checkerframework.checker.tainting.qual.Tainted ServiceCall this) {
                java.lang.Object ref = text_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    text_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TOTAL_DURATION_NANOS_FIELD_NUMBER = 3;

            private  @org.checkerframework.checker.tainting.qual.Tainted double totalDurationNanos_;

            /**
             * <code>double total_duration_nanos = 3;</code>
             * @return The totalDurationNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted double getTotalDurationNanos(@org.checkerframework.checker.tainting.qual.Tainted ServiceCall this) {
                return totalDurationNanos_;
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int EXECUTION_COUNT_FIELD_NUMBER = 4;

            private  @org.checkerframework.checker.tainting.qual.Tainted long executionCount_;

            /**
             * <code>int64 execution_count = 4;</code>
             * @return The executionCount.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getExecutionCount(@org.checkerframework.checker.tainting.qual.Tainted ServiceCall this) {
                return executionCount_;
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted ServiceCall this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted ServiceCall this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(text_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 2, text_);
                }
                if (java.lang.Double.doubleToRawLongBits(totalDurationNanos_) != 0) {
                    output.writeDouble(3, totalDurationNanos_);
                }
                if (executionCount_ != 0L) {
                    output.writeInt64(4, executionCount_);
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted ServiceCall this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(text_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, text_);
                }
                if (java.lang.Double.doubleToRawLongBits(totalDurationNanos_) != 0) {
                    size += com.google.protobuf.CodedOutputStream.computeDoubleSize(3, totalDurationNanos_);
                }
                if (executionCount_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream.computeInt64Size(4, executionCount_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted ServiceCall this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall other = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall) obj;
                if (!getType().equals(other.getType()))
                    return false;
                if (!getText().equals(other.getText()))
                    return false;
                if (java.lang.Double.doubleToLongBits(getTotalDurationNanos()) != java.lang.Double.doubleToLongBits(other.getTotalDurationNanos()))
                    return false;
                if (getExecutionCount() != other.getExecutionCount())
                    return false;
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted ServiceCall this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + TYPE_FIELD_NUMBER;
                hash = (53 * hash) + getType().hashCode();
                hash = (37 * hash) + TEXT_FIELD_NUMBER;
                hash = (53 * hash) + getText().hashCode();
                hash = (37 * hash) + TOTAL_DURATION_NANOS_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(java.lang.Double.doubleToLongBits(getTotalDurationNanos()));
                hash = (37 * hash) + EXECUTION_COUNT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getExecutionCount());
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted ServiceCall this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted ServiceCall this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted ServiceCall this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.ServiceCall}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Aggregate.ServiceCall)
            org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCallOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_ServiceCall_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_ServiceCall_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                @org.checkerframework.dataflow.qual.Pure
                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                    }
                }

                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.text_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.type_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    type_ = "";
                    text_ = "";
                    totalDurationNanos_ = 0D;
                    executionCount_ = 0L;
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_ServiceCall_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall result = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall(this);
                    result.type_ = type_;
                    result.text_ = text_;
                    result.totalDurationNanos_ = totalDurationNanos_;
                    result.executionCount_ = executionCount_;
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall) {
                        return mergeFrom((org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall other) {
                    if (other == org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall.getDefaultInstance())
                        return this;
                    if (!other.getType().isEmpty()) {
                        type_ = other.type_;
                        onChanged();
                    }
                    if (!other.getText().isEmpty()) {
                        text_ = other.text_;
                        onChanged();
                    }
                    if (other.getTotalDurationNanos() != 0D) {
                        setTotalDurationNanos(other.getTotalDurationNanos());
                    }
                    if (other.getExecutionCount() != 0L) {
                        setExecutionCount(other.getExecutionCount());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object type_ = "";

                /**
                 * <pre>
                 * e.g. "HTTP"
                 * </pre>
                 *
                 * <code>string type = 1;</code>
                 * @return The type.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = type_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        type_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <pre>
                 * e.g. "HTTP"
                 * </pre>
                 *
                 * <code>string type = 1;</code>
                 * @return The bytes for type.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTypeBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = type_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        type_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <pre>
                 * e.g. "HTTP"
                 * </pre>
                 *
                 * <code>string type = 1;</code>
                 * @param value The type to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setType(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    type_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * e.g. "HTTP"
                 * </pre>
                 *
                 * <code>string type = 1;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearType() {
                    type_ = getDefaultInstance().getType();
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * e.g. "HTTP"
                 * </pre>
                 *
                 * <code>string type = 1;</code>
                 * @param value The bytes for type to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTypeBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    type_ = value;
                    onChanged();
                    return this;
                }

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object text_ = "";

                /**
                 * <code>string text = 2;</code>
                 * @return The text.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getText(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = text_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        text_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <code>string text = 2;</code>
                 * @return The bytes for text.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTextBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = text_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        text_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>string text = 2;</code>
                 * @param value The text to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setText(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    text_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>string text = 2;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearText() {
                    text_ = getDefaultInstance().getText();
                    onChanged();
                    return this;
                }

                /**
                 * <code>string text = 2;</code>
                 * @param value The bytes for text to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTextBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    text_ = value;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted double totalDurationNanos_;

                /**
                 * <code>double total_duration_nanos = 3;</code>
                 * @return The totalDurationNanos.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted double getTotalDurationNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return totalDurationNanos_;
                }

                /**
                 * <code>double total_duration_nanos = 3;</code>
                 * @param value The totalDurationNanos to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalDurationNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted double value) {
                    totalDurationNanos_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>double total_duration_nanos = 3;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTotalDurationNanos() {
                    totalDurationNanos_ = 0D;
                    onChanged();
                    return this;
                }

                private  @org.checkerframework.checker.tainting.qual.Tainted long executionCount_;

                /**
                 * <code>int64 execution_count = 4;</code>
                 * @return The executionCount.
                 */
                @org.checkerframework.dataflow.qual.Pure
                public  @org.checkerframework.checker.tainting.qual.Tainted long getExecutionCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return executionCount_;
                }

                /**
                 * <code>int64 execution_count = 4;</code>
                 * @param value The executionCount to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setExecutionCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                    executionCount_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>int64 execution_count = 4;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearExecutionCount() {
                    executionCount_ = 0L;
                    onChanged();
                    return this;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Aggregate.ServiceCall)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Aggregate.ServiceCall)
            private static final org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<ServiceCall> PARSER = new com.google.protobuf.AbstractParser<ServiceCall>() {

                public ServiceCall parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new ServiceCall(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<ServiceCall> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<ServiceCall> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted ServiceCall this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted ServiceCall this) {
                return DEFAULT_INSTANCE;
            }
        }

        public interface SharedQueryTextOrBuilder extends // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.Aggregate.SharedQueryText)
        com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             * sent when query text &lt;= 120 characters
             * </pre>
             *
             * <code>string full_text = 1;</code>
             * @return The fullText.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getFullText();

            /**
             * <pre>
             * sent when query text &lt;= 120 characters
             * </pre>
             *
             * <code>string full_text = 1;</code>
             * @return The bytes for fullText.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getFullTextBytes();

            /**
             * <pre>
             * sent when query text &gt; 120 characters
             * </pre>
             *
             * <code>string truncated_text = 2;</code>
             * @return The truncatedText.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getTruncatedText();

            /**
             * <pre>
             * sent when query text &gt; 120 characters
             * </pre>
             *
             * <code>string truncated_text = 2;</code>
             * @return The bytes for truncatedText.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTruncatedTextBytes();

            /**
             * <pre>
             * sent when query text &gt; 120 characters
             * </pre>
             *
             * <code>string full_text_sha1 = 3;</code>
             * @return The fullTextSha1.
             */
            @org.checkerframework.dataflow.qual.Pure
            java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getFullTextSha1();

            /**
             * <pre>
             * sent when query text &gt; 120 characters
             * </pre>
             *
             * <code>string full_text_sha1 = 3;</code>
             * @return The bytes for fullTextSha1.
             */
            @org.checkerframework.dataflow.qual.Pure
            com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getFullTextSha1Bytes();
        }

        /**
         * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.SharedQueryText}
         */
        public static final class SharedQueryText extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.Aggregate.SharedQueryText)
        SharedQueryTextOrBuilder {

            private static final  @org.checkerframework.checker.tainting.qual.Tainted long serialVersionUID = 0L;

            // Use SharedQueryText.newBuilder() to construct.
            private SharedQueryText(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted Builder<?> builder) {
                super(builder);
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.fullTextSha1_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.fullText_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.truncatedText_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private SharedQueryText() {
                fullText_ = "";
                truncatedText_ = "";
                fullTextSha1_ = "";
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.fullTextSha1_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            protected java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object newInstance(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this, @org.checkerframework.checker.tainting.qual.Tainted UnusedPrivateParameter unused) {
                return new SharedQueryText();
            }

            @org.checkerframework.dataflow.qual.Pure
            public final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet getUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                return this.unknownFields;
            }

            private SharedQueryText(com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    fullText_ = s;
                                    break;
                                }
                            case 18:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    truncatedText_ = s;
                                    break;
                                }
                            case 26:
                                {
                                    java.lang.String s = input.readStringRequireUtf8();
                                    fullTextSha1_ = s;
                                    break;
                                }
                            default:
                                {
                                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_SharedQueryText_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_SharedQueryText_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.SharedQueryText.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.SharedQueryText.Builder.class);
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int FULL_TEXT_FIELD_NUMBER = 1;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object fullText_;

            /**
             * <pre>
             * sent when query text &lt;= 120 characters
             * </pre>
             *
             * <code>string full_text = 1;</code>
             * @return The fullText.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getFullText(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                java.lang.Object ref = fullText_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    fullText_ = s;
                    return s;
                }
            }

            /**
             * <pre>
             * sent when query text &lt;= 120 characters
             * </pre>
             *
             * <code>string full_text = 1;</code>
             * @return The bytes for fullText.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getFullTextBytes(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                java.lang.Object ref = fullText_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    fullText_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int TRUNCATED_TEXT_FIELD_NUMBER = 2;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object truncatedText_;

            /**
             * <pre>
             * sent when query text &gt; 120 characters
             * </pre>
             *
             * <code>string truncated_text = 2;</code>
             * @return The truncatedText.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getTruncatedText(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                java.lang.Object ref = truncatedText_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    truncatedText_ = s;
                    return s;
                }
            }

            /**
             * <pre>
             * sent when query text &gt; 120 characters
             * </pre>
             *
             * <code>string truncated_text = 2;</code>
             * @return The bytes for truncatedText.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTruncatedTextBytes(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                java.lang.Object ref = truncatedText_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    truncatedText_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final  @org.checkerframework.checker.tainting.qual.Tainted int FULL_TEXT_SHA1_FIELD_NUMBER = 3;

            private volatile java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object fullTextSha1_;

            /**
             * <pre>
             * sent when query text &gt; 120 characters
             * </pre>
             *
             * <code>string full_text_sha1 = 3;</code>
             * @return The fullTextSha1.
             */
            public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getFullTextSha1(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                java.lang.Object ref = fullTextSha1_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    fullTextSha1_ = s;
                    return s;
                }
            }

            /**
             * <pre>
             * sent when query text &gt; 120 characters
             * </pre>
             *
             * <code>string full_text_sha1 = 3;</code>
             * @return The bytes for fullTextSha1.
             */
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getFullTextSha1Bytes(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                java.lang.Object ref = fullTextSha1_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    fullTextSha1_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fullText_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 1, fullText_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(truncatedText_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 2, truncatedText_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fullTextSha1_)) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 3, fullTextSha1_);
                }
                unknownFields.writeTo(output);
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                int size = memoizedSize;
                if (size != -1)
                    return size;
                size = 0;
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fullText_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, fullText_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(truncatedText_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, truncatedText_);
                }
                if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fullTextSha1_)) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, fullTextSha1_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.SharedQueryText)) {
                    return super.equals(obj);
                }
                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.SharedQueryText other = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.SharedQueryText) obj;
                if (!getFullText().equals(other.getFullText()))
                    return false;
                if (!getTruncatedText().equals(other.getTruncatedText()))
                    return false;
                if (!getFullTextSha1().equals(other.getFullTextSha1()))
                    return false;
                if (!unknownFields.equals(other.unknownFields))
                    return false;
                return true;
            }

            public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + FULL_TEXT_FIELD_NUMBER;
                hash = (53 * hash) + getFullText().hashCode();
                hash = (37 * hash) + TRUNCATED_TEXT_FIELD_NUMBER;
                hash = (53 * hash) + getTruncatedText().hashCode();
                hash = (37 * hash) + FULL_TEXT_SHA1_FIELD_NUMBER;
                hash = (53 * hash) + getFullTextSha1().hashCode();
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
            }

            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                return newBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
            }

            protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code org_glowroot_wire_api_model.Aggregate.SharedQueryText}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Aggregate.SharedQueryText)
            org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.SharedQueryTextOrBuilder {

                @org.checkerframework.dataflow.qual.Pure
                public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_SharedQueryText_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_SharedQueryText_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.SharedQueryText.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.SharedQueryText.Builder.class);
                }

                // Construct using org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.SharedQueryText.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                @org.checkerframework.dataflow.qual.Pure
                private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                    }
                }

                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.fullTextSha1_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.fullText_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.truncatedText_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    super.clear();
                    fullText_ = "";
                    truncatedText_ = "";
                    fullTextSha1_ = "";
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_SharedQueryText_descriptor;
                }

                @org.checkerframework.dataflow.qual.Pure
                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.SharedQueryText.getDefaultInstance();
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.SharedQueryText result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.SharedQueryText result = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.SharedQueryText(this);
                    result.fullText_ = fullText_;
                    result.truncatedText_ = truncatedText_;
                    result.fullTextSha1_ = fullTextSha1_;
                    onBuilt();
                    return result;
                }

                @org.checkerframework.dataflow.qual.SideEffectFree
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return super.clone();
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                    return super.clearField(field);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                    return super.clearOneof(oneof);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.setRepeatedField(field, index, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                    return super.addRepeatedField(field, value);
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                    if (other instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.SharedQueryText) {
                        return mergeFrom((org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.SharedQueryText) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText other) {
                    if (other == org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.SharedQueryText.getDefaultInstance())
                        return this;
                    if (!other.getFullText().isEmpty()) {
                        fullText_ = other.fullText_;
                        onChanged();
                    }
                    if (!other.getTruncatedText().isEmpty()) {
                        truncatedText_ = other.truncatedText_;
                        onChanged();
                    }
                    if (!other.getFullTextSha1().isEmpty()) {
                        fullTextSha1_ = other.fullTextSha1_;
                        onChanged();
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                @org.checkerframework.dataflow.qual.Pure
                public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    return true;
                }

                public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.SharedQueryText parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.SharedQueryText) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object fullText_ = "";

                /**
                 * <pre>
                 * sent when query text &lt;= 120 characters
                 * </pre>
                 *
                 * <code>string full_text = 1;</code>
                 * @return The fullText.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getFullText(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = fullText_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        fullText_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <pre>
                 * sent when query text &lt;= 120 characters
                 * </pre>
                 *
                 * <code>string full_text = 1;</code>
                 * @return The bytes for fullText.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getFullTextBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = fullText_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        fullText_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <pre>
                 * sent when query text &lt;= 120 characters
                 * </pre>
                 *
                 * <code>string full_text = 1;</code>
                 * @param value The fullText to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setFullText(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    fullText_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * sent when query text &lt;= 120 characters
                 * </pre>
                 *
                 * <code>string full_text = 1;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearFullText() {
                    fullText_ = getDefaultInstance().getFullText();
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * sent when query text &lt;= 120 characters
                 * </pre>
                 *
                 * <code>string full_text = 1;</code>
                 * @param value The bytes for fullText to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setFullTextBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    fullText_ = value;
                    onChanged();
                    return this;
                }

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object truncatedText_ = "";

                /**
                 * <pre>
                 * sent when query text &gt; 120 characters
                 * </pre>
                 *
                 * <code>string truncated_text = 2;</code>
                 * @return The truncatedText.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getTruncatedText(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = truncatedText_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        truncatedText_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <pre>
                 * sent when query text &gt; 120 characters
                 * </pre>
                 *
                 * <code>string truncated_text = 2;</code>
                 * @return The bytes for truncatedText.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getTruncatedTextBytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = truncatedText_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        truncatedText_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <pre>
                 * sent when query text &gt; 120 characters
                 * </pre>
                 *
                 * <code>string truncated_text = 2;</code>
                 * @param value The truncatedText to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTruncatedText(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    truncatedText_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * sent when query text &gt; 120 characters
                 * </pre>
                 *
                 * <code>string truncated_text = 2;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTruncatedText() {
                    truncatedText_ = getDefaultInstance().getTruncatedText();
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * sent when query text &gt; 120 characters
                 * </pre>
                 *
                 * <code>string truncated_text = 2;</code>
                 * @param value The bytes for truncatedText to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setTruncatedTextBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    truncatedText_ = value;
                    onChanged();
                    return this;
                }

                private java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object fullTextSha1_ = "";

                /**
                 * <pre>
                 * sent when query text &gt; 120 characters
                 * </pre>
                 *
                 * <code>string full_text_sha1 = 3;</code>
                 * @return The fullTextSha1.
                 */
                public java.lang.@org.checkerframework.checker.tainting.qual.Tainted String getFullTextSha1(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = fullTextSha1_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        fullTextSha1_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <pre>
                 * sent when query text &gt; 120 characters
                 * </pre>
                 *
                 * <code>string full_text_sha1 = 3;</code>
                 * @return The bytes for fullTextSha1.
                 */
                public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ByteString getFullTextSha1Bytes(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                    java.lang.Object ref = fullTextSha1_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        fullTextSha1_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <pre>
                 * sent when query text &gt; 120 characters
                 * </pre>
                 *
                 * <code>string full_text_sha1 = 3;</code>
                 * @param value The fullTextSha1 to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setFullTextSha1(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    fullTextSha1_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * sent when query text &gt; 120 characters
                 * </pre>
                 *
                 * <code>string full_text_sha1 = 3;</code>
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder clearFullTextSha1() {
                    fullTextSha1_ = getDefaultInstance().getFullTextSha1();
                    onChanged();
                    return this;
                }

                /**
                 * <pre>
                 * sent when query text &gt; 120 characters
                 * </pre>
                 *
                 * <code>string full_text_sha1 = 3;</code>
                 * @param value The bytes for fullTextSha1 to set.
                 * @return This builder for chaining.
                 */
                public @org.checkerframework.checker.tainting.qual.Tainted Builder setFullTextSha1Bytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);
                    fullTextSha1_ = value;
                    onChanged();
                    return this;
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.setUnknownFields(unknownFields);
                }

                public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }
                // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Aggregate.SharedQueryText)
            }

            // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Aggregate.SharedQueryText)
            private static final org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.SharedQueryText();
            }

            @org.checkerframework.dataflow.qual.Pure
            public static org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<SharedQueryText> PARSER = new com.google.protobuf.AbstractParser<SharedQueryText>() {

                public SharedQueryText parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                    return new SharedQueryText(input, extensionRegistry);
                }
            };

            @org.checkerframework.dataflow.qual.Pure
            public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<SharedQueryText> parser() {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<SharedQueryText> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                return PARSER;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted SharedQueryText this) {
                return DEFAULT_INSTANCE;
            }
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int TOTAL_DURATION_NANOS_FIELD_NUMBER = 1;

        private  @org.checkerframework.checker.tainting.qual.Tainted double totalDurationNanos_;

        /**
         * <code>double total_duration_nanos = 1;</code>
         * @return The totalDurationNanos.
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted double getTotalDurationNanos(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return totalDurationNanos_;
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int TRANSACTION_COUNT_FIELD_NUMBER = 2;

        private  @org.checkerframework.checker.tainting.qual.Tainted long transactionCount_;

        /**
         * <code>int64 transaction_count = 2;</code>
         * @return The transactionCount.
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted long getTransactionCount(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return transactionCount_;
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int ERROR_COUNT_FIELD_NUMBER = 3;

        private  @org.checkerframework.checker.tainting.qual.Tainted long errorCount_;

        /**
         * <code>int64 error_count = 3;</code>
         * @return The errorCount.
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted long getErrorCount(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return errorCount_;
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int ASYNC_TRANSACTIONS_FIELD_NUMBER = 4;

        private  @org.checkerframework.checker.tainting.qual.Tainted boolean asyncTransactions_;

        /**
         * <pre>
         * true if there was at least one async transaction in aggregate
         * </pre>
         *
         * <code>bool async_transactions = 4;</code>
         * @return The asyncTransactions.
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted boolean getAsyncTransactions(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return asyncTransactions_;
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int MAIN_THREAD_ROOT_TIMER_FIELD_NUMBER = 5;

        private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer> mainThreadRootTimer_;

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer> getMainThreadRootTimerList(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return mainThreadRootTimer_;
        }

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder> getMainThreadRootTimerOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return mainThreadRootTimer_;
        }

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted int getMainThreadRootTimerCount(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return mainThreadRootTimer_.size();
        }

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer getMainThreadRootTimer(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
            return mainThreadRootTimer_.get(index);
        }

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getMainThreadRootTimerOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
            return mainThreadRootTimer_.get(index);
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int AUX_THREAD_ROOT_TIMER_FIELD_NUMBER = 6;

        private org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer auxThreadRootTimer_;

        /**
         * <pre>
         * aux thread root timer is always "auxiliary thread"
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.Timer aux_thread_root_timer = 6;</code>
         * @return Whether the auxThreadRootTimer field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasAuxThreadRootTimer(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return auxThreadRootTimer_ != null;
        }

        /**
         * <pre>
         * aux thread root timer is always "auxiliary thread"
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.Timer aux_thread_root_timer = 6;</code>
         * @return The auxThreadRootTimer.
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer getAuxThreadRootTimer(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return auxThreadRootTimer_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.getDefaultInstance() : auxThreadRootTimer_;
        }

        /**
         * <pre>
         * aux thread root timer is always "auxiliary thread"
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.Timer aux_thread_root_timer = 6;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getAuxThreadRootTimerOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return getAuxThreadRootTimer();
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int ASYNC_TIMER_FIELD_NUMBER = 7;

        private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer> asyncTimer_;

        /**
         * <pre>
         * async timers have no child timers
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer> getAsyncTimerList(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return asyncTimer_;
        }

        /**
         * <pre>
         * async timers have no child timers
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder> getAsyncTimerOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return asyncTimer_;
        }

        /**
         * <pre>
         * async timers have no child timers
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted int getAsyncTimerCount(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return asyncTimer_.size();
        }

        /**
         * <pre>
         * async timers have no child timers
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer getAsyncTimer(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
            return asyncTimer_.get(index);
        }

        /**
         * <pre>
         * async timers have no child timers
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getAsyncTimerOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
            return asyncTimer_.get(index);
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int OLD_MAIN_THREAD_STATS_FIELD_NUMBER = 8;

        private org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats oldMainThreadStats_;

        /**
         * <pre>
         * deprecated in 0.10.9
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_main_thread_stats = 8;</code>
         * @return Whether the oldMainThreadStats field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasOldMainThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return oldMainThreadStats_ != null;
        }

        /**
         * <pre>
         * deprecated in 0.10.9
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_main_thread_stats = 8;</code>
         * @return The oldMainThreadStats.
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats getOldMainThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return oldMainThreadStats_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.getDefaultInstance() : oldMainThreadStats_;
        }

        /**
         * <pre>
         * deprecated in 0.10.9
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_main_thread_stats = 8;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStatsOrBuilder getOldMainThreadStatsOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return getOldMainThreadStats();
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int OLD_AUX_THREAD_STATS_FIELD_NUMBER = 9;

        private org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats oldAuxThreadStats_;

        /**
         * <pre>
         * deprecated in 0.10.9
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_aux_thread_stats = 9;</code>
         * @return Whether the oldAuxThreadStats field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasOldAuxThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return oldAuxThreadStats_ != null;
        }

        /**
         * <pre>
         * deprecated in 0.10.9
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_aux_thread_stats = 9;</code>
         * @return The oldAuxThreadStats.
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats getOldAuxThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return oldAuxThreadStats_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.getDefaultInstance() : oldAuxThreadStats_;
        }

        /**
         * <pre>
         * deprecated in 0.10.9
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_aux_thread_stats = 9;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStatsOrBuilder getOldAuxThreadStatsOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return getOldAuxThreadStats();
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int MAIN_THREAD_STATS_FIELD_NUMBER = 17;

        private org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats mainThreadStats_;

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats main_thread_stats = 17;</code>
         * @return Whether the mainThreadStats field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasMainThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return mainThreadStats_ != null;
        }

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats main_thread_stats = 17;</code>
         * @return The mainThreadStats.
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats getMainThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return mainThreadStats_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.getDefaultInstance() : mainThreadStats_;
        }

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats main_thread_stats = 17;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStatsOrBuilder getMainThreadStatsOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return getMainThreadStats();
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int AUX_THREAD_STATS_FIELD_NUMBER = 18;

        private org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats auxThreadStats_;

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats aux_thread_stats = 18;</code>
         * @return Whether the auxThreadStats field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasAuxThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return auxThreadStats_ != null;
        }

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats aux_thread_stats = 18;</code>
         * @return The auxThreadStats.
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats getAuxThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return auxThreadStats_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.getDefaultInstance() : auxThreadStats_;
        }

        /**
         * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats aux_thread_stats = 18;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStatsOrBuilder getAuxThreadStatsOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return getAuxThreadStats();
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int DURATION_NANOS_HISTOGRAM_FIELD_NUMBER = 10;

        private org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram durationNanosHistogram_;

        /**
         * <pre>
         * histogram values are in nanoseconds with microsecond
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.Histogram duration_nanos_histogram = 10;</code>
         * @return Whether the durationNanosHistogram field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasDurationNanosHistogram(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return durationNanosHistogram_ != null;
        }

        /**
         * <pre>
         * histogram values are in nanoseconds with microsecond
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.Histogram duration_nanos_histogram = 10;</code>
         * @return The durationNanosHistogram.
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram getDurationNanosHistogram(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return durationNanosHistogram_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram.getDefaultInstance() : durationNanosHistogram_;
        }

        /**
         * <pre>
         * histogram values are in nanoseconds with microsecond
         * </pre>
         *
         * <code>.org_glowroot_wire_api_model.Aggregate.Histogram duration_nanos_histogram = 10;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted HistogramOrBuilder getDurationNanosHistogramOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return getDurationNanosHistogram();
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int OLD_QUERIES_BY_TYPE_FIELD_NUMBER = 11;

        private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType> oldQueriesByType_;

        /**
         * <pre>
         * precision
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType> getOldQueriesByTypeList(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return oldQueriesByType_;
        }

        /**
         * <pre>
         * precision
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByTypeOrBuilder> getOldQueriesByTypeOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return oldQueriesByType_;
        }

        /**
         * <pre>
         * precision
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted int getOldQueriesByTypeCount(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return oldQueriesByType_.size();
        }

        /**
         * <pre>
         * precision
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType getOldQueriesByType(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
            return oldQueriesByType_.get(index);
        }

        /**
         * <pre>
         * precision
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByTypeOrBuilder getOldQueriesByTypeOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
            return oldQueriesByType_.get(index);
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int OLD_SERVICE_CALLS_BY_TYPE_FIELD_NUMBER = 12;

        private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType> oldServiceCallsByType_;

        /**
         * <pre>
         * deprecated in 0.10.6
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType> getOldServiceCallsByTypeList(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return oldServiceCallsByType_;
        }

        /**
         * <pre>
         * deprecated in 0.10.6
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByTypeOrBuilder> getOldServiceCallsByTypeOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return oldServiceCallsByType_;
        }

        /**
         * <pre>
         * deprecated in 0.10.6
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted int getOldServiceCallsByTypeCount(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return oldServiceCallsByType_.size();
        }

        /**
         * <pre>
         * deprecated in 0.10.6
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType getOldServiceCallsByType(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
            return oldServiceCallsByType_.get(index);
        }

        /**
         * <pre>
         * deprecated in 0.10.6
         * </pre>
         *
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByTypeOrBuilder getOldServiceCallsByTypeOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
            return oldServiceCallsByType_.get(index);
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int QUERY_FIELD_NUMBER = 15;

        private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query> query_;

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query> getQueryList(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return query_;
        }

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.QueryOrBuilder> getQueryOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return query_;
        }

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted int getQueryCount(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return query_.size();
        }

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query getQuery(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
            return query_.get(index);
        }

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted QueryOrBuilder getQueryOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
            return query_.get(index);
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int SERVICE_CALL_FIELD_NUMBER = 16;

        private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall> serviceCall_;

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall> getServiceCallList(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return serviceCall_;
        }

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCallOrBuilder> getServiceCallOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return serviceCall_;
        }

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted int getServiceCallCount(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return serviceCall_.size();
        }

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall getServiceCall(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
            return serviceCall_.get(index);
        }

        /**
         * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCallOrBuilder getServiceCallOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
            return serviceCall_.get(index);
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int MAIN_THREAD_PROFILE_FIELD_NUMBER = 13;

        private org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile mainThreadProfile_;

        /**
         * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 13;</code>
         * @return Whether the mainThreadProfile field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasMainThreadProfile(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return mainThreadProfile_ != null;
        }

        /**
         * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 13;</code>
         * @return The mainThreadProfile.
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile getMainThreadProfile(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return mainThreadProfile_ == null ? org.glowroot.wire.api.model.ProfileOuterClass.Profile.getDefaultInstance() : mainThreadProfile_;
        }

        /**
         * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 13;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted ProfileOrBuilder getMainThreadProfileOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return getMainThreadProfile();
        }

        public static final  @org.checkerframework.checker.tainting.qual.Tainted int AUX_THREAD_PROFILE_FIELD_NUMBER = 14;

        private org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile auxThreadProfile_;

        /**
         * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 14;</code>
         * @return Whether the auxThreadProfile field is set.
         */
        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasAuxThreadProfile(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return auxThreadProfile_ != null;
        }

        /**
         * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 14;</code>
         * @return The auxThreadProfile.
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile getAuxThreadProfile(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return auxThreadProfile_ == null ? org.glowroot.wire.api.model.ProfileOuterClass.Profile.getDefaultInstance() : auxThreadProfile_;
        }

        /**
         * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 14;</code>
         */
        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted ProfileOrBuilder getAuxThreadProfileOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return getAuxThreadProfile();
        }

        private  @org.checkerframework.checker.tainting.qual.Tainted byte memoizedIsInitialized = -1;

        public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedOutputStream output) throws java.io.IOException {
            if (java.lang.Double.doubleToRawLongBits(totalDurationNanos_) != 0) {
                output.writeDouble(1, totalDurationNanos_);
            }
            if (transactionCount_ != 0L) {
                output.writeInt64(2, transactionCount_);
            }
            if (errorCount_ != 0L) {
                output.writeInt64(3, errorCount_);
            }
            if (asyncTransactions_ != false) {
                output.writeBool(4, asyncTransactions_);
            }
            for (int i = 0; i < mainThreadRootTimer_.size(); i++) {
                output.writeMessage(5, mainThreadRootTimer_.get(i));
            }
            if (auxThreadRootTimer_ != null) {
                output.writeMessage(6, getAuxThreadRootTimer());
            }
            for (int i = 0; i < asyncTimer_.size(); i++) {
                output.writeMessage(7, asyncTimer_.get(i));
            }
            if (oldMainThreadStats_ != null) {
                output.writeMessage(8, getOldMainThreadStats());
            }
            if (oldAuxThreadStats_ != null) {
                output.writeMessage(9, getOldAuxThreadStats());
            }
            if (durationNanosHistogram_ != null) {
                output.writeMessage(10, getDurationNanosHistogram());
            }
            for (int i = 0; i < oldQueriesByType_.size(); i++) {
                output.writeMessage(11, oldQueriesByType_.get(i));
            }
            for (int i = 0; i < oldServiceCallsByType_.size(); i++) {
                output.writeMessage(12, oldServiceCallsByType_.get(i));
            }
            if (mainThreadProfile_ != null) {
                output.writeMessage(13, getMainThreadProfile());
            }
            if (auxThreadProfile_ != null) {
                output.writeMessage(14, getAuxThreadProfile());
            }
            for (int i = 0; i < query_.size(); i++) {
                output.writeMessage(15, query_.get(i));
            }
            for (int i = 0; i < serviceCall_.size(); i++) {
                output.writeMessage(16, serviceCall_.get(i));
            }
            if (mainThreadStats_ != null) {
                output.writeMessage(17, getMainThreadStats());
            }
            if (auxThreadStats_ != null) {
                output.writeMessage(18, getAuxThreadStats());
            }
            unknownFields.writeTo(output);
        }

        public  @org.checkerframework.checker.tainting.qual.Tainted int getSerializedSize(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            int size = memoizedSize;
            if (size != -1)
                return size;
            size = 0;
            if (java.lang.Double.doubleToRawLongBits(totalDurationNanos_) != 0) {
                size += com.google.protobuf.CodedOutputStream.computeDoubleSize(1, totalDurationNanos_);
            }
            if (transactionCount_ != 0L) {
                size += com.google.protobuf.CodedOutputStream.computeInt64Size(2, transactionCount_);
            }
            if (errorCount_ != 0L) {
                size += com.google.protobuf.CodedOutputStream.computeInt64Size(3, errorCount_);
            }
            if (asyncTransactions_ != false) {
                size += com.google.protobuf.CodedOutputStream.computeBoolSize(4, asyncTransactions_);
            }
            for (int i = 0; i < mainThreadRootTimer_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, mainThreadRootTimer_.get(i));
            }
            if (auxThreadRootTimer_ != null) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, getAuxThreadRootTimer());
            }
            for (int i = 0; i < asyncTimer_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(7, asyncTimer_.get(i));
            }
            if (oldMainThreadStats_ != null) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(8, getOldMainThreadStats());
            }
            if (oldAuxThreadStats_ != null) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(9, getOldAuxThreadStats());
            }
            if (durationNanosHistogram_ != null) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(10, getDurationNanosHistogram());
            }
            for (int i = 0; i < oldQueriesByType_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(11, oldQueriesByType_.get(i));
            }
            for (int i = 0; i < oldServiceCallsByType_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(12, oldServiceCallsByType_.get(i));
            }
            if (mainThreadProfile_ != null) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(13, getMainThreadProfile());
            }
            if (auxThreadProfile_ != null) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(14, getAuxThreadProfile());
            }
            for (int i = 0; i < query_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(15, query_.get(i));
            }
            for (int i = 0; i < serviceCall_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(16, serviceCall_.get(i));
            }
            if (mainThreadStats_ != null) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(17, getMainThreadStats());
            }
            if (auxThreadStats_ != null) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(18, getAuxThreadStats());
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @org.checkerframework.dataflow.qual.Pure
        public  @org.checkerframework.checker.tainting.qual.Tainted boolean equals(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this, final java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate)) {
                return super.equals(obj);
            }
            org.glowroot.wire.api.model.AggregateOuterClass.Aggregate other = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate) obj;
            if (java.lang.Double.doubleToLongBits(getTotalDurationNanos()) != java.lang.Double.doubleToLongBits(other.getTotalDurationNanos()))
                return false;
            if (getTransactionCount() != other.getTransactionCount())
                return false;
            if (getErrorCount() != other.getErrorCount())
                return false;
            if (getAsyncTransactions() != other.getAsyncTransactions())
                return false;
            if (!getMainThreadRootTimerList().equals(other.getMainThreadRootTimerList()))
                return false;
            if (hasAuxThreadRootTimer() != other.hasAuxThreadRootTimer())
                return false;
            if (hasAuxThreadRootTimer()) {
                if (!getAuxThreadRootTimer().equals(other.getAuxThreadRootTimer()))
                    return false;
            }
            if (!getAsyncTimerList().equals(other.getAsyncTimerList()))
                return false;
            if (hasOldMainThreadStats() != other.hasOldMainThreadStats())
                return false;
            if (hasOldMainThreadStats()) {
                if (!getOldMainThreadStats().equals(other.getOldMainThreadStats()))
                    return false;
            }
            if (hasOldAuxThreadStats() != other.hasOldAuxThreadStats())
                return false;
            if (hasOldAuxThreadStats()) {
                if (!getOldAuxThreadStats().equals(other.getOldAuxThreadStats()))
                    return false;
            }
            if (hasMainThreadStats() != other.hasMainThreadStats())
                return false;
            if (hasMainThreadStats()) {
                if (!getMainThreadStats().equals(other.getMainThreadStats()))
                    return false;
            }
            if (hasAuxThreadStats() != other.hasAuxThreadStats())
                return false;
            if (hasAuxThreadStats()) {
                if (!getAuxThreadStats().equals(other.getAuxThreadStats()))
                    return false;
            }
            if (hasDurationNanosHistogram() != other.hasDurationNanosHistogram())
                return false;
            if (hasDurationNanosHistogram()) {
                if (!getDurationNanosHistogram().equals(other.getDurationNanosHistogram()))
                    return false;
            }
            if (!getOldQueriesByTypeList().equals(other.getOldQueriesByTypeList()))
                return false;
            if (!getOldServiceCallsByTypeList().equals(other.getOldServiceCallsByTypeList()))
                return false;
            if (!getQueryList().equals(other.getQueryList()))
                return false;
            if (!getServiceCallList().equals(other.getServiceCallList()))
                return false;
            if (hasMainThreadProfile() != other.hasMainThreadProfile())
                return false;
            if (hasMainThreadProfile()) {
                if (!getMainThreadProfile().equals(other.getMainThreadProfile()))
                    return false;
            }
            if (hasAuxThreadProfile() != other.hasAuxThreadProfile())
                return false;
            if (hasAuxThreadProfile()) {
                if (!getAuxThreadProfile().equals(other.getAuxThreadProfile()))
                    return false;
            }
            if (!unknownFields.equals(other.unknownFields))
                return false;
            return true;
        }

        public  @org.checkerframework.checker.tainting.qual.Tainted int hashCode(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + TOTAL_DURATION_NANOS_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(java.lang.Double.doubleToLongBits(getTotalDurationNanos()));
            hash = (37 * hash) + TRANSACTION_COUNT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getTransactionCount());
            hash = (37 * hash) + ERROR_COUNT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getErrorCount());
            hash = (37 * hash) + ASYNC_TRANSACTIONS_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getAsyncTransactions());
            if (getMainThreadRootTimerCount() > 0) {
                hash = (37 * hash) + MAIN_THREAD_ROOT_TIMER_FIELD_NUMBER;
                hash = (53 * hash) + getMainThreadRootTimerList().hashCode();
            }
            if (hasAuxThreadRootTimer()) {
                hash = (37 * hash) + AUX_THREAD_ROOT_TIMER_FIELD_NUMBER;
                hash = (53 * hash) + getAuxThreadRootTimer().hashCode();
            }
            if (getAsyncTimerCount() > 0) {
                hash = (37 * hash) + ASYNC_TIMER_FIELD_NUMBER;
                hash = (53 * hash) + getAsyncTimerList().hashCode();
            }
            if (hasOldMainThreadStats()) {
                hash = (37 * hash) + OLD_MAIN_THREAD_STATS_FIELD_NUMBER;
                hash = (53 * hash) + getOldMainThreadStats().hashCode();
            }
            if (hasOldAuxThreadStats()) {
                hash = (37 * hash) + OLD_AUX_THREAD_STATS_FIELD_NUMBER;
                hash = (53 * hash) + getOldAuxThreadStats().hashCode();
            }
            if (hasMainThreadStats()) {
                hash = (37 * hash) + MAIN_THREAD_STATS_FIELD_NUMBER;
                hash = (53 * hash) + getMainThreadStats().hashCode();
            }
            if (hasAuxThreadStats()) {
                hash = (37 * hash) + AUX_THREAD_STATS_FIELD_NUMBER;
                hash = (53 * hash) + getAuxThreadStats().hashCode();
            }
            if (hasDurationNanosHistogram()) {
                hash = (37 * hash) + DURATION_NANOS_HISTOGRAM_FIELD_NUMBER;
                hash = (53 * hash) + getDurationNanosHistogram().hashCode();
            }
            if (getOldQueriesByTypeCount() > 0) {
                hash = (37 * hash) + OLD_QUERIES_BY_TYPE_FIELD_NUMBER;
                hash = (53 * hash) + getOldQueriesByTypeList().hashCode();
            }
            if (getOldServiceCallsByTypeCount() > 0) {
                hash = (37 * hash) + OLD_SERVICE_CALLS_BY_TYPE_FIELD_NUMBER;
                hash = (53 * hash) + getOldServiceCallsByTypeList().hashCode();
            }
            if (getQueryCount() > 0) {
                hash = (37 * hash) + QUERY_FIELD_NUMBER;
                hash = (53 * hash) + getQueryList().hashCode();
            }
            if (getServiceCallCount() > 0) {
                hash = (37 * hash) + SERVICE_CALL_FIELD_NUMBER;
                hash = (53 * hash) + getServiceCallList().hashCode();
            }
            if (hasMainThreadProfile()) {
                hash = (37 * hash) + MAIN_THREAD_PROFILE_FIELD_NUMBER;
                hash = (53 * hash) + getMainThreadProfile().hashCode();
            }
            if (hasAuxThreadProfile()) {
                hash = (37 * hash) + AUX_THREAD_PROFILE_FIELD_NUMBER;
                hash = (53 * hash) + getAuxThreadProfile().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate parseFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return newBuilder();
        }

        public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilder(org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public @org.checkerframework.checker.tainting.qual.Tainted Builder toBuilder(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        protected @org.checkerframework.checker.tainting.qual.Tainted Builder newBuilderForType(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this, com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * aggregate uses double instead of int64 to avoid (unlikely) 292 year nanosecond rollover
         * </pre>
         *
         * Protobuf type {@code org_glowroot_wire_api_model.Aggregate}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.Aggregate)
        org.glowroot.wire.api.model.AggregateOuterClass.AggregateOrBuilder {

            @org.checkerframework.dataflow.qual.Pure
            public static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptor() {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internalGetFieldAccessorTable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_fieldAccessorTable.ensureFieldAccessorsInitialized(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.class, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Builder.class);
            }

            // Construct using org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
                    getMainThreadRootTimerFieldBuilder();
                    getAsyncTimerFieldBuilder();
                    getOldQueriesByTypeFieldBuilder();
                    getOldServiceCallsByTypeFieldBuilder();
                    getQueryFieldBuilder();
                    getServiceCallFieldBuilder();
                }
            }

            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.auxThreadProfileBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.auxThreadProfile_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.mainThreadProfileBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            @org.checkerframework.framework.qual.EnsuresQualifier(expression = { "this.mainThreadProfile_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clear(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                super.clear();
                totalDurationNanos_ = 0D;
                transactionCount_ = 0L;
                errorCount_ = 0L;
                asyncTransactions_ = false;
                if (mainThreadRootTimerBuilder_ == null) {
                    mainThreadRootTimer_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    mainThreadRootTimerBuilder_.clear();
                }
                if (auxThreadRootTimerBuilder_ == null) {
                    auxThreadRootTimer_ = null;
                } else {
                    auxThreadRootTimer_ = null;
                    auxThreadRootTimerBuilder_ = null;
                }
                if (asyncTimerBuilder_ == null) {
                    asyncTimer_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                    asyncTimerBuilder_.clear();
                }
                if (oldMainThreadStatsBuilder_ == null) {
                    oldMainThreadStats_ = null;
                } else {
                    oldMainThreadStats_ = null;
                    oldMainThreadStatsBuilder_ = null;
                }
                if (oldAuxThreadStatsBuilder_ == null) {
                    oldAuxThreadStats_ = null;
                } else {
                    oldAuxThreadStats_ = null;
                    oldAuxThreadStatsBuilder_ = null;
                }
                if (mainThreadStatsBuilder_ == null) {
                    mainThreadStats_ = null;
                } else {
                    mainThreadStats_ = null;
                    mainThreadStatsBuilder_ = null;
                }
                if (auxThreadStatsBuilder_ == null) {
                    auxThreadStats_ = null;
                } else {
                    auxThreadStats_ = null;
                    auxThreadStatsBuilder_ = null;
                }
                if (durationNanosHistogramBuilder_ == null) {
                    durationNanosHistogram_ = null;
                } else {
                    durationNanosHistogram_ = null;
                    durationNanosHistogramBuilder_ = null;
                }
                if (oldQueriesByTypeBuilder_ == null) {
                    oldQueriesByType_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                } else {
                    oldQueriesByTypeBuilder_.clear();
                }
                if (oldServiceCallsByTypeBuilder_ == null) {
                    oldServiceCallsByType_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000008);
                } else {
                    oldServiceCallsByTypeBuilder_.clear();
                }
                if (queryBuilder_ == null) {
                    query_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000010);
                } else {
                    queryBuilder_.clear();
                }
                if (serviceCallBuilder_ == null) {
                    serviceCall_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000020);
                } else {
                    serviceCallBuilder_.clear();
                }
                if (mainThreadProfileBuilder_ == null) {
                    mainThreadProfile_ = null;
                } else {
                    mainThreadProfile_ = null;
                    mainThreadProfileBuilder_ = null;
                }
                if (auxThreadProfileBuilder_ == null) {
                    auxThreadProfile_ = null;
                } else {
                    auxThreadProfile_ = null;
                    auxThreadProfileBuilder_ = null;
                }
                return this;
            }

            @org.checkerframework.dataflow.qual.Pure
            public com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor getDescriptorForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return org.glowroot.wire.api.model.AggregateOuterClass.internal_static_org_glowroot_wire_api_model_Aggregate_descriptor;
            }

            @org.checkerframework.dataflow.qual.Pure
            public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.getDefaultInstance();
            }

            public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate build(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate buildPartial(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate result = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate(this);
                int from_bitField0_ = bitField0_;
                result.totalDurationNanos_ = totalDurationNanos_;
                result.transactionCount_ = transactionCount_;
                result.errorCount_ = errorCount_;
                result.asyncTransactions_ = asyncTransactions_;
                if (mainThreadRootTimerBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) != 0)) {
                        mainThreadRootTimer_ = java.util.Collections.unmodifiableList(mainThreadRootTimer_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.mainThreadRootTimer_ = mainThreadRootTimer_;
                } else {
                    result.mainThreadRootTimer_ = mainThreadRootTimerBuilder_.build();
                }
                if (auxThreadRootTimerBuilder_ == null) {
                    result.auxThreadRootTimer_ = auxThreadRootTimer_;
                } else {
                    result.auxThreadRootTimer_ = auxThreadRootTimerBuilder_.build();
                }
                if (asyncTimerBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) != 0)) {
                        asyncTimer_ = java.util.Collections.unmodifiableList(asyncTimer_);
                        bitField0_ = (bitField0_ & ~0x00000002);
                    }
                    result.asyncTimer_ = asyncTimer_;
                } else {
                    result.asyncTimer_ = asyncTimerBuilder_.build();
                }
                if (oldMainThreadStatsBuilder_ == null) {
                    result.oldMainThreadStats_ = oldMainThreadStats_;
                } else {
                    result.oldMainThreadStats_ = oldMainThreadStatsBuilder_.build();
                }
                if (oldAuxThreadStatsBuilder_ == null) {
                    result.oldAuxThreadStats_ = oldAuxThreadStats_;
                } else {
                    result.oldAuxThreadStats_ = oldAuxThreadStatsBuilder_.build();
                }
                if (mainThreadStatsBuilder_ == null) {
                    result.mainThreadStats_ = mainThreadStats_;
                } else {
                    result.mainThreadStats_ = mainThreadStatsBuilder_.build();
                }
                if (auxThreadStatsBuilder_ == null) {
                    result.auxThreadStats_ = auxThreadStats_;
                } else {
                    result.auxThreadStats_ = auxThreadStatsBuilder_.build();
                }
                if (durationNanosHistogramBuilder_ == null) {
                    result.durationNanosHistogram_ = durationNanosHistogram_;
                } else {
                    result.durationNanosHistogram_ = durationNanosHistogramBuilder_.build();
                }
                if (oldQueriesByTypeBuilder_ == null) {
                    if (((bitField0_ & 0x00000004) != 0)) {
                        oldQueriesByType_ = java.util.Collections.unmodifiableList(oldQueriesByType_);
                        bitField0_ = (bitField0_ & ~0x00000004);
                    }
                    result.oldQueriesByType_ = oldQueriesByType_;
                } else {
                    result.oldQueriesByType_ = oldQueriesByTypeBuilder_.build();
                }
                if (oldServiceCallsByTypeBuilder_ == null) {
                    if (((bitField0_ & 0x00000008) != 0)) {
                        oldServiceCallsByType_ = java.util.Collections.unmodifiableList(oldServiceCallsByType_);
                        bitField0_ = (bitField0_ & ~0x00000008);
                    }
                    result.oldServiceCallsByType_ = oldServiceCallsByType_;
                } else {
                    result.oldServiceCallsByType_ = oldServiceCallsByTypeBuilder_.build();
                }
                if (queryBuilder_ == null) {
                    if (((bitField0_ & 0x00000010) != 0)) {
                        query_ = java.util.Collections.unmodifiableList(query_);
                        bitField0_ = (bitField0_ & ~0x00000010);
                    }
                    result.query_ = query_;
                } else {
                    result.query_ = queryBuilder_.build();
                }
                if (serviceCallBuilder_ == null) {
                    if (((bitField0_ & 0x00000020) != 0)) {
                        serviceCall_ = java.util.Collections.unmodifiableList(serviceCall_);
                        bitField0_ = (bitField0_ & ~0x00000020);
                    }
                    result.serviceCall_ = serviceCall_;
                } else {
                    result.serviceCall_ = serviceCallBuilder_.build();
                }
                if (mainThreadProfileBuilder_ == null) {
                    result.mainThreadProfile_ = mainThreadProfile_;
                } else {
                    result.mainThreadProfile_ = mainThreadProfileBuilder_.build();
                }
                if (auxThreadProfileBuilder_ == null) {
                    result.auxThreadProfile_ = auxThreadProfile_;
                } else {
                    result.auxThreadProfile_ = auxThreadProfileBuilder_.build();
                }
                onBuilt();
                return result;
            }

            @org.checkerframework.dataflow.qual.SideEffectFree
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clone(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return super.clone();
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder setField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                return super.setField(field, value);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field) {
                return super.clearField(field);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOneof(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder setRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field,  @org.checkerframework.checker.tainting.qual.Tainted int index, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                return super.setRepeatedField(field, index, value);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder addRepeatedField(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FieldDescriptor field, java.lang.@org.checkerframework.checker.tainting.qual.Tainted Object value) {
                return super.addRepeatedField(field, value);
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Message other) {
                if (other instanceof org.glowroot.wire.api.model.AggregateOuterClass.Aggregate) {
                    return mergeFrom((org.glowroot.wire.api.model.AggregateOuterClass.Aggregate) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate other) {
                if (other == org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.getDefaultInstance())
                    return this;
                if (other.getTotalDurationNanos() != 0D) {
                    setTotalDurationNanos(other.getTotalDurationNanos());
                }
                if (other.getTransactionCount() != 0L) {
                    setTransactionCount(other.getTransactionCount());
                }
                if (other.getErrorCount() != 0L) {
                    setErrorCount(other.getErrorCount());
                }
                if (other.getAsyncTransactions() != false) {
                    setAsyncTransactions(other.getAsyncTransactions());
                }
                if (mainThreadRootTimerBuilder_ == null) {
                    if (!other.mainThreadRootTimer_.isEmpty()) {
                        if (mainThreadRootTimer_.isEmpty()) {
                            mainThreadRootTimer_ = other.mainThreadRootTimer_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensureMainThreadRootTimerIsMutable();
                            mainThreadRootTimer_.addAll(other.mainThreadRootTimer_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.mainThreadRootTimer_.isEmpty()) {
                        if (mainThreadRootTimerBuilder_.isEmpty()) {
                            mainThreadRootTimerBuilder_.dispose();
                            mainThreadRootTimerBuilder_ = null;
                            mainThreadRootTimer_ = other.mainThreadRootTimer_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            mainThreadRootTimerBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getMainThreadRootTimerFieldBuilder() : null;
                        } else {
                            mainThreadRootTimerBuilder_.addAllMessages(other.mainThreadRootTimer_);
                        }
                    }
                }
                if (other.hasAuxThreadRootTimer()) {
                    mergeAuxThreadRootTimer(other.getAuxThreadRootTimer());
                }
                if (asyncTimerBuilder_ == null) {
                    if (!other.asyncTimer_.isEmpty()) {
                        if (asyncTimer_.isEmpty()) {
                            asyncTimer_ = other.asyncTimer_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                        } else {
                            ensureAsyncTimerIsMutable();
                            asyncTimer_.addAll(other.asyncTimer_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.asyncTimer_.isEmpty()) {
                        if (asyncTimerBuilder_.isEmpty()) {
                            asyncTimerBuilder_.dispose();
                            asyncTimerBuilder_ = null;
                            asyncTimer_ = other.asyncTimer_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                            asyncTimerBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getAsyncTimerFieldBuilder() : null;
                        } else {
                            asyncTimerBuilder_.addAllMessages(other.asyncTimer_);
                        }
                    }
                }
                if (other.hasOldMainThreadStats()) {
                    mergeOldMainThreadStats(other.getOldMainThreadStats());
                }
                if (other.hasOldAuxThreadStats()) {
                    mergeOldAuxThreadStats(other.getOldAuxThreadStats());
                }
                if (other.hasMainThreadStats()) {
                    mergeMainThreadStats(other.getMainThreadStats());
                }
                if (other.hasAuxThreadStats()) {
                    mergeAuxThreadStats(other.getAuxThreadStats());
                }
                if (other.hasDurationNanosHistogram()) {
                    mergeDurationNanosHistogram(other.getDurationNanosHistogram());
                }
                if (oldQueriesByTypeBuilder_ == null) {
                    if (!other.oldQueriesByType_.isEmpty()) {
                        if (oldQueriesByType_.isEmpty()) {
                            oldQueriesByType_ = other.oldQueriesByType_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                        } else {
                            ensureOldQueriesByTypeIsMutable();
                            oldQueriesByType_.addAll(other.oldQueriesByType_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.oldQueriesByType_.isEmpty()) {
                        if (oldQueriesByTypeBuilder_.isEmpty()) {
                            oldQueriesByTypeBuilder_.dispose();
                            oldQueriesByTypeBuilder_ = null;
                            oldQueriesByType_ = other.oldQueriesByType_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                            oldQueriesByTypeBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getOldQueriesByTypeFieldBuilder() : null;
                        } else {
                            oldQueriesByTypeBuilder_.addAllMessages(other.oldQueriesByType_);
                        }
                    }
                }
                if (oldServiceCallsByTypeBuilder_ == null) {
                    if (!other.oldServiceCallsByType_.isEmpty()) {
                        if (oldServiceCallsByType_.isEmpty()) {
                            oldServiceCallsByType_ = other.oldServiceCallsByType_;
                            bitField0_ = (bitField0_ & ~0x00000008);
                        } else {
                            ensureOldServiceCallsByTypeIsMutable();
                            oldServiceCallsByType_.addAll(other.oldServiceCallsByType_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.oldServiceCallsByType_.isEmpty()) {
                        if (oldServiceCallsByTypeBuilder_.isEmpty()) {
                            oldServiceCallsByTypeBuilder_.dispose();
                            oldServiceCallsByTypeBuilder_ = null;
                            oldServiceCallsByType_ = other.oldServiceCallsByType_;
                            bitField0_ = (bitField0_ & ~0x00000008);
                            oldServiceCallsByTypeBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getOldServiceCallsByTypeFieldBuilder() : null;
                        } else {
                            oldServiceCallsByTypeBuilder_.addAllMessages(other.oldServiceCallsByType_);
                        }
                    }
                }
                if (queryBuilder_ == null) {
                    if (!other.query_.isEmpty()) {
                        if (query_.isEmpty()) {
                            query_ = other.query_;
                            bitField0_ = (bitField0_ & ~0x00000010);
                        } else {
                            ensureQueryIsMutable();
                            query_.addAll(other.query_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.query_.isEmpty()) {
                        if (queryBuilder_.isEmpty()) {
                            queryBuilder_.dispose();
                            queryBuilder_ = null;
                            query_ = other.query_;
                            bitField0_ = (bitField0_ & ~0x00000010);
                            queryBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getQueryFieldBuilder() : null;
                        } else {
                            queryBuilder_.addAllMessages(other.query_);
                        }
                    }
                }
                if (serviceCallBuilder_ == null) {
                    if (!other.serviceCall_.isEmpty()) {
                        if (serviceCall_.isEmpty()) {
                            serviceCall_ = other.serviceCall_;
                            bitField0_ = (bitField0_ & ~0x00000020);
                        } else {
                            ensureServiceCallIsMutable();
                            serviceCall_.addAll(other.serviceCall_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.serviceCall_.isEmpty()) {
                        if (serviceCallBuilder_.isEmpty()) {
                            serviceCallBuilder_.dispose();
                            serviceCallBuilder_ = null;
                            serviceCall_ = other.serviceCall_;
                            bitField0_ = (bitField0_ & ~0x00000020);
                            serviceCallBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getServiceCallFieldBuilder() : null;
                        } else {
                            serviceCallBuilder_.addAllMessages(other.serviceCall_);
                        }
                    }
                }
                if (other.hasMainThreadProfile()) {
                    mergeMainThreadProfile(other.getMainThreadProfile());
                }
                if (other.hasAuxThreadProfile()) {
                    mergeAuxThreadProfile(other.getAuxThreadProfile());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @org.checkerframework.dataflow.qual.Pure
            public final  @org.checkerframework.checker.tainting.qual.Tainted boolean isInitialized(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return true;
            }

            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeFrom(@org.checkerframework.checker.tainting.qual.Tainted Builder this, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted CodedInputStream input, com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                org.glowroot.wire.api.model.AggregateOuterClass.Aggregate parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (org.glowroot.wire.api.model.AggregateOuterClass.Aggregate) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted int bitField0_;

            private  @org.checkerframework.checker.tainting.qual.Tainted double totalDurationNanos_;

            /**
             * <code>double total_duration_nanos = 1;</code>
             * @return The totalDurationNanos.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted double getTotalDurationNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return totalDurationNanos_;
            }

            /**
             * <code>double total_duration_nanos = 1;</code>
             * @param value The totalDurationNanos to set.
             * @return This builder for chaining.
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setTotalDurationNanos(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted double value) {
                totalDurationNanos_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>double total_duration_nanos = 1;</code>
             * @return This builder for chaining.
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTotalDurationNanos() {
                totalDurationNanos_ = 0D;
                onChanged();
                return this;
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted long transactionCount_;

            /**
             * <code>int64 transaction_count = 2;</code>
             * @return The transactionCount.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getTransactionCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return transactionCount_;
            }

            /**
             * <code>int64 transaction_count = 2;</code>
             * @param value The transactionCount to set.
             * @return This builder for chaining.
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setTransactionCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                transactionCount_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>int64 transaction_count = 2;</code>
             * @return This builder for chaining.
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearTransactionCount() {
                transactionCount_ = 0L;
                onChanged();
                return this;
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted long errorCount_;

            /**
             * <code>int64 error_count = 3;</code>
             * @return The errorCount.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted long getErrorCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return errorCount_;
            }

            /**
             * <code>int64 error_count = 3;</code>
             * @param value The errorCount to set.
             * @return This builder for chaining.
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setErrorCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted long value) {
                errorCount_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>int64 error_count = 3;</code>
             * @return This builder for chaining.
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearErrorCount() {
                errorCount_ = 0L;
                onChanged();
                return this;
            }

            private  @org.checkerframework.checker.tainting.qual.Tainted boolean asyncTransactions_;

            /**
             * <pre>
             * true if there was at least one async transaction in aggregate
             * </pre>
             *
             * <code>bool async_transactions = 4;</code>
             * @return The asyncTransactions.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean getAsyncTransactions(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return asyncTransactions_;
            }

            /**
             * <pre>
             * true if there was at least one async transaction in aggregate
             * </pre>
             *
             * <code>bool async_transactions = 4;</code>
             * @param value The asyncTransactions to set.
             * @return This builder for chaining.
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setAsyncTransactions(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted boolean value) {
                asyncTransactions_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * true if there was at least one async transaction in aggregate
             * </pre>
             *
             * <code>bool async_transactions = 4;</code>
             * @return This builder for chaining.
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearAsyncTransactions() {
                asyncTransactions_ = false;
                onChanged();
                return this;
            }

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer> mainThreadRootTimer_ = java.util.Collections.emptyList();

            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.mainThreadRootTimerBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private void ensureMainThreadRootTimerIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (!((bitField0_ & 0x00000001) != 0)) {
                    mainThreadRootTimer_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer>(mainThreadRootTimer_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder> mainThreadRootTimerBuilder_;

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer> getMainThreadRootTimerList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (mainThreadRootTimerBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(mainThreadRootTimer_);
                } else {
                    return mainThreadRootTimerBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
             */
            public  @org.checkerframework.checker.tainting.qual.Tainted int getMainThreadRootTimerCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (mainThreadRootTimerBuilder_ == null) {
                    return mainThreadRootTimer_.size();
                } else {
                    return mainThreadRootTimerBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer getMainThreadRootTimer(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                if (mainThreadRootTimerBuilder_ == null) {
                    return mainThreadRootTimer_.get(index);
                } else {
                    return mainThreadRootTimerBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setMainThreadRootTimer(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer value) {
                if (mainThreadRootTimerBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureMainThreadRootTimerIsMutable();
                    mainThreadRootTimer_.set(index, value);
                    onChanged();
                } else {
                    mainThreadRootTimerBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setMainThreadRootTimer(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder builderForValue) {
                if (mainThreadRootTimerBuilder_ == null) {
                    ensureMainThreadRootTimerIsMutable();
                    mainThreadRootTimer_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    mainThreadRootTimerBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addMainThreadRootTimer(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer value) {
                if (mainThreadRootTimerBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureMainThreadRootTimerIsMutable();
                    mainThreadRootTimer_.add(value);
                    onChanged();
                } else {
                    mainThreadRootTimerBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addMainThreadRootTimer(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer value) {
                if (mainThreadRootTimerBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureMainThreadRootTimerIsMutable();
                    mainThreadRootTimer_.add(index, value);
                    onChanged();
                } else {
                    mainThreadRootTimerBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addMainThreadRootTimer(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder builderForValue) {
                if (mainThreadRootTimerBuilder_ == null) {
                    ensureMainThreadRootTimerIsMutable();
                    mainThreadRootTimer_.add(builderForValue.build());
                    onChanged();
                } else {
                    mainThreadRootTimerBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addMainThreadRootTimer(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder builderForValue) {
                if (mainThreadRootTimerBuilder_ == null) {
                    ensureMainThreadRootTimerIsMutable();
                    mainThreadRootTimer_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    mainThreadRootTimerBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllMainThreadRootTimer(java.lang.Iterable<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer> values) {
                if (mainThreadRootTimerBuilder_ == null) {
                    ensureMainThreadRootTimerIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, mainThreadRootTimer_);
                    onChanged();
                } else {
                    mainThreadRootTimerBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearMainThreadRootTimer() {
                if (mainThreadRootTimerBuilder_ == null) {
                    mainThreadRootTimer_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    mainThreadRootTimerBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder removeMainThreadRootTimer(int index) {
                if (mainThreadRootTimerBuilder_ == null) {
                    ensureMainThreadRootTimerIsMutable();
                    mainThreadRootTimer_.remove(index);
                    onChanged();
                } else {
                    mainThreadRootTimerBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.@org.checkerframework.checker.tainting.qual.Tainted Builder getMainThreadRootTimerBuilder(int index) {
                return getMainThreadRootTimerFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getMainThreadRootTimerOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                if (mainThreadRootTimerBuilder_ == null) {
                    return mainThreadRootTimer_.get(index);
                } else {
                    return mainThreadRootTimerBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder> getMainThreadRootTimerOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (mainThreadRootTimerBuilder_ != null) {
                    return mainThreadRootTimerBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(mainThreadRootTimer_);
                }
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.@org.checkerframework.checker.tainting.qual.Tainted Builder addMainThreadRootTimerBuilder() {
                return getMainThreadRootTimerFieldBuilder().addBuilder(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.getDefaultInstance());
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.@org.checkerframework.checker.tainting.qual.Tainted Builder addMainThreadRootTimerBuilder(int index) {
                return getMainThreadRootTimerFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.getDefaultInstance());
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer main_thread_root_timer = 5;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder> getMainThreadRootTimerBuilderList() {
                return getMainThreadRootTimerFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder> getMainThreadRootTimerFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (mainThreadRootTimerBuilder_ == null) {
                    mainThreadRootTimerBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder>(mainThreadRootTimer_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
                    mainThreadRootTimer_ = null;
                }
                return mainThreadRootTimerBuilder_;
            }

            private org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer auxThreadRootTimer_;

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder> auxThreadRootTimerBuilder_;

            /**
             * <pre>
             * aux thread root timer is always "auxiliary thread"
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.Timer aux_thread_root_timer = 6;</code>
             * @return Whether the auxThreadRootTimer field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasAuxThreadRootTimer(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return auxThreadRootTimerBuilder_ != null || auxThreadRootTimer_ != null;
            }

            /**
             * <pre>
             * aux thread root timer is always "auxiliary thread"
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.Timer aux_thread_root_timer = 6;</code>
             * @return The auxThreadRootTimer.
             */
            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.auxThreadRootTimerBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer getAuxThreadRootTimer(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (auxThreadRootTimerBuilder_ == null) {
                    return auxThreadRootTimer_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.getDefaultInstance() : auxThreadRootTimer_;
                } else {
                    return auxThreadRootTimerBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * aux thread root timer is always "auxiliary thread"
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.Timer aux_thread_root_timer = 6;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setAuxThreadRootTimer(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer value) {
                if (auxThreadRootTimerBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    auxThreadRootTimer_ = value;
                    onChanged();
                } else {
                    auxThreadRootTimerBuilder_.setMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * aux thread root timer is always "auxiliary thread"
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.Timer aux_thread_root_timer = 6;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setAuxThreadRootTimer(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder builderForValue) {
                if (auxThreadRootTimerBuilder_ == null) {
                    auxThreadRootTimer_ = builderForValue.build();
                    onChanged();
                } else {
                    auxThreadRootTimerBuilder_.setMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * aux thread root timer is always "auxiliary thread"
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.Timer aux_thread_root_timer = 6;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeAuxThreadRootTimer(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer value) {
                if (auxThreadRootTimerBuilder_ == null) {
                    if (auxThreadRootTimer_ != null) {
                        auxThreadRootTimer_ = org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.newBuilder(auxThreadRootTimer_).mergeFrom(value).buildPartial();
                    } else {
                        auxThreadRootTimer_ = value;
                    }
                    onChanged();
                } else {
                    auxThreadRootTimerBuilder_.mergeFrom(value);
                }
                return this;
            }

            /**
             * <pre>
             * aux thread root timer is always "auxiliary thread"
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.Timer aux_thread_root_timer = 6;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearAuxThreadRootTimer() {
                if (auxThreadRootTimerBuilder_ == null) {
                    auxThreadRootTimer_ = null;
                    onChanged();
                } else {
                    auxThreadRootTimer_ = null;
                    auxThreadRootTimerBuilder_ = null;
                }
                return this;
            }

            /**
             * <pre>
             * aux thread root timer is always "auxiliary thread"
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.Timer aux_thread_root_timer = 6;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.@org.checkerframework.checker.tainting.qual.Tainted Builder getAuxThreadRootTimerBuilder() {
                onChanged();
                return getAuxThreadRootTimerFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * aux thread root timer is always "auxiliary thread"
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.Timer aux_thread_root_timer = 6;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getAuxThreadRootTimerOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (auxThreadRootTimerBuilder_ != null) {
                    return auxThreadRootTimerBuilder_.getMessageOrBuilder();
                } else {
                    return auxThreadRootTimer_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.getDefaultInstance() : auxThreadRootTimer_;
                }
            }

            /**
             * <pre>
             * aux thread root timer is always "auxiliary thread"
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.Timer aux_thread_root_timer = 6;</code>
             */
            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder> getAuxThreadRootTimerFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (auxThreadRootTimerBuilder_ == null) {
                    auxThreadRootTimerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder>(getAuxThreadRootTimer(), getParentForChildren(), isClean());
                    auxThreadRootTimer_ = null;
                }
                return auxThreadRootTimerBuilder_;
            }

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer> asyncTimer_ = java.util.Collections.emptyList();

            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.asyncTimerBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private void ensureAsyncTimerIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (!((bitField0_ & 0x00000002) != 0)) {
                    asyncTimer_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer>(asyncTimer_);
                    bitField0_ |= 0x00000002;
                }
            }

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder> asyncTimerBuilder_;

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer> getAsyncTimerList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (asyncTimerBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(asyncTimer_);
                } else {
                    return asyncTimerBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
             */
            public  @org.checkerframework.checker.tainting.qual.Tainted int getAsyncTimerCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (asyncTimerBuilder_ == null) {
                    return asyncTimer_.size();
                } else {
                    return asyncTimerBuilder_.getCount();
                }
            }

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Timer getAsyncTimer(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                if (asyncTimerBuilder_ == null) {
                    return asyncTimer_.get(index);
                } else {
                    return asyncTimerBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setAsyncTimer(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer value) {
                if (asyncTimerBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureAsyncTimerIsMutable();
                    asyncTimer_.set(index, value);
                    onChanged();
                } else {
                    asyncTimerBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setAsyncTimer(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder builderForValue) {
                if (asyncTimerBuilder_ == null) {
                    ensureAsyncTimerIsMutable();
                    asyncTimer_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    asyncTimerBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addAsyncTimer(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer value) {
                if (asyncTimerBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureAsyncTimerIsMutable();
                    asyncTimer_.add(value);
                    onChanged();
                } else {
                    asyncTimerBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addAsyncTimer(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer value) {
                if (asyncTimerBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureAsyncTimerIsMutable();
                    asyncTimer_.add(index, value);
                    onChanged();
                } else {
                    asyncTimerBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addAsyncTimer(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder builderForValue) {
                if (asyncTimerBuilder_ == null) {
                    ensureAsyncTimerIsMutable();
                    asyncTimer_.add(builderForValue.build());
                    onChanged();
                } else {
                    asyncTimerBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addAsyncTimer(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder builderForValue) {
                if (asyncTimerBuilder_ == null) {
                    ensureAsyncTimerIsMutable();
                    asyncTimer_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    asyncTimerBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllAsyncTimer(java.lang.Iterable<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer> values) {
                if (asyncTimerBuilder_ == null) {
                    ensureAsyncTimerIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, asyncTimer_);
                    onChanged();
                } else {
                    asyncTimerBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearAsyncTimer() {
                if (asyncTimerBuilder_ == null) {
                    asyncTimer_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                    onChanged();
                } else {
                    asyncTimerBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder removeAsyncTimer(int index) {
                if (asyncTimerBuilder_ == null) {
                    ensureAsyncTimerIsMutable();
                    asyncTimer_.remove(index);
                    onChanged();
                } else {
                    asyncTimerBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.@org.checkerframework.checker.tainting.qual.Tainted Builder getAsyncTimerBuilder(int index) {
                return getAsyncTimerFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted TimerOrBuilder getAsyncTimerOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                if (asyncTimerBuilder_ == null) {
                    return asyncTimer_.get(index);
                } else {
                    return asyncTimerBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder> getAsyncTimerOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (asyncTimerBuilder_ != null) {
                    return asyncTimerBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(asyncTimer_);
                }
            }

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.@org.checkerframework.checker.tainting.qual.Tainted Builder addAsyncTimerBuilder() {
                return getAsyncTimerFieldBuilder().addBuilder(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.getDefaultInstance());
            }

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.@org.checkerframework.checker.tainting.qual.Tainted Builder addAsyncTimerBuilder(int index) {
                return getAsyncTimerFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.getDefaultInstance());
            }

            /**
             * <pre>
             * async timers have no child timers
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Timer async_timer = 7;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder> getAsyncTimerBuilderList() {
                return getAsyncTimerFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder> getAsyncTimerFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (asyncTimerBuilder_ == null) {
                    asyncTimerBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Timer.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.TimerOrBuilder>(asyncTimer_, ((bitField0_ & 0x00000002) != 0), getParentForChildren(), isClean());
                    asyncTimer_ = null;
                }
                return asyncTimerBuilder_;
            }

            private org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats oldMainThreadStats_;

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStatsOrBuilder> oldMainThreadStatsBuilder_;

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_main_thread_stats = 8;</code>
             * @return Whether the oldMainThreadStats field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasOldMainThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return oldMainThreadStatsBuilder_ != null || oldMainThreadStats_ != null;
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_main_thread_stats = 8;</code>
             * @return The oldMainThreadStats.
             */
            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.oldMainThreadStatsBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats getOldMainThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (oldMainThreadStatsBuilder_ == null) {
                    return oldMainThreadStats_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.getDefaultInstance() : oldMainThreadStats_;
                } else {
                    return oldMainThreadStatsBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_main_thread_stats = 8;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setOldMainThreadStats(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats value) {
                if (oldMainThreadStatsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    oldMainThreadStats_ = value;
                    onChanged();
                } else {
                    oldMainThreadStatsBuilder_.setMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_main_thread_stats = 8;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setOldMainThreadStats(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.Builder builderForValue) {
                if (oldMainThreadStatsBuilder_ == null) {
                    oldMainThreadStats_ = builderForValue.build();
                    onChanged();
                } else {
                    oldMainThreadStatsBuilder_.setMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_main_thread_stats = 8;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeOldMainThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats value) {
                if (oldMainThreadStatsBuilder_ == null) {
                    if (oldMainThreadStats_ != null) {
                        oldMainThreadStats_ = org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.newBuilder(oldMainThreadStats_).mergeFrom(value).buildPartial();
                    } else {
                        oldMainThreadStats_ = value;
                    }
                    onChanged();
                } else {
                    oldMainThreadStatsBuilder_.mergeFrom(value);
                }
                return this;
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_main_thread_stats = 8;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOldMainThreadStats() {
                if (oldMainThreadStatsBuilder_ == null) {
                    oldMainThreadStats_ = null;
                    onChanged();
                } else {
                    oldMainThreadStats_ = null;
                    oldMainThreadStatsBuilder_ = null;
                }
                return this;
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_main_thread_stats = 8;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.@org.checkerframework.checker.tainting.qual.Tainted Builder getOldMainThreadStatsBuilder() {
                onChanged();
                return getOldMainThreadStatsFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_main_thread_stats = 8;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStatsOrBuilder getOldMainThreadStatsOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (oldMainThreadStatsBuilder_ != null) {
                    return oldMainThreadStatsBuilder_.getMessageOrBuilder();
                } else {
                    return oldMainThreadStats_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.getDefaultInstance() : oldMainThreadStats_;
                }
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_main_thread_stats = 8;</code>
             */
            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStatsOrBuilder> getOldMainThreadStatsFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (oldMainThreadStatsBuilder_ == null) {
                    oldMainThreadStatsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStatsOrBuilder>(getOldMainThreadStats(), getParentForChildren(), isClean());
                    oldMainThreadStats_ = null;
                }
                return oldMainThreadStatsBuilder_;
            }

            private org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats oldAuxThreadStats_;

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStatsOrBuilder> oldAuxThreadStatsBuilder_;

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_aux_thread_stats = 9;</code>
             * @return Whether the oldAuxThreadStats field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasOldAuxThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return oldAuxThreadStatsBuilder_ != null || oldAuxThreadStats_ != null;
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_aux_thread_stats = 9;</code>
             * @return The oldAuxThreadStats.
             */
            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.oldAuxThreadStatsBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats getOldAuxThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (oldAuxThreadStatsBuilder_ == null) {
                    return oldAuxThreadStats_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.getDefaultInstance() : oldAuxThreadStats_;
                } else {
                    return oldAuxThreadStatsBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_aux_thread_stats = 9;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setOldAuxThreadStats(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats value) {
                if (oldAuxThreadStatsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    oldAuxThreadStats_ = value;
                    onChanged();
                } else {
                    oldAuxThreadStatsBuilder_.setMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_aux_thread_stats = 9;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setOldAuxThreadStats(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.Builder builderForValue) {
                if (oldAuxThreadStatsBuilder_ == null) {
                    oldAuxThreadStats_ = builderForValue.build();
                    onChanged();
                } else {
                    oldAuxThreadStatsBuilder_.setMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_aux_thread_stats = 9;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeOldAuxThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStats value) {
                if (oldAuxThreadStatsBuilder_ == null) {
                    if (oldAuxThreadStats_ != null) {
                        oldAuxThreadStats_ = org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.newBuilder(oldAuxThreadStats_).mergeFrom(value).buildPartial();
                    } else {
                        oldAuxThreadStats_ = value;
                    }
                    onChanged();
                } else {
                    oldAuxThreadStatsBuilder_.mergeFrom(value);
                }
                return this;
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_aux_thread_stats = 9;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOldAuxThreadStats() {
                if (oldAuxThreadStatsBuilder_ == null) {
                    oldAuxThreadStats_ = null;
                    onChanged();
                } else {
                    oldAuxThreadStats_ = null;
                    oldAuxThreadStatsBuilder_ = null;
                }
                return this;
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_aux_thread_stats = 9;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.@org.checkerframework.checker.tainting.qual.Tainted Builder getOldAuxThreadStatsBuilder() {
                onChanged();
                return getOldAuxThreadStatsFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_aux_thread_stats = 9;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldThreadStatsOrBuilder getOldAuxThreadStatsOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (oldAuxThreadStatsBuilder_ != null) {
                    return oldAuxThreadStatsBuilder_.getMessageOrBuilder();
                } else {
                    return oldAuxThreadStats_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.getDefaultInstance() : oldAuxThreadStats_;
                }
            }

            /**
             * <pre>
             * deprecated in 0.10.9
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.OldThreadStats old_aux_thread_stats = 9;</code>
             */
            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStatsOrBuilder> getOldAuxThreadStatsFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (oldAuxThreadStatsBuilder_ == null) {
                    oldAuxThreadStatsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStats.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldThreadStatsOrBuilder>(getOldAuxThreadStats(), getParentForChildren(), isClean());
                    oldAuxThreadStats_ = null;
                }
                return oldAuxThreadStatsBuilder_;
            }

            private org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats mainThreadStats_;

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStatsOrBuilder> mainThreadStatsBuilder_;

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats main_thread_stats = 17;</code>
             * @return Whether the mainThreadStats field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasMainThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return mainThreadStatsBuilder_ != null || mainThreadStats_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats main_thread_stats = 17;</code>
             * @return The mainThreadStats.
             */
            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.mainThreadStatsBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats getMainThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (mainThreadStatsBuilder_ == null) {
                    return mainThreadStats_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.getDefaultInstance() : mainThreadStats_;
                } else {
                    return mainThreadStatsBuilder_.getMessage();
                }
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats main_thread_stats = 17;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setMainThreadStats(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats value) {
                if (mainThreadStatsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    mainThreadStats_ = value;
                    onChanged();
                } else {
                    mainThreadStatsBuilder_.setMessage(value);
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats main_thread_stats = 17;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setMainThreadStats(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.Builder builderForValue) {
                if (mainThreadStatsBuilder_ == null) {
                    mainThreadStats_ = builderForValue.build();
                    onChanged();
                } else {
                    mainThreadStatsBuilder_.setMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats main_thread_stats = 17;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeMainThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats value) {
                if (mainThreadStatsBuilder_ == null) {
                    if (mainThreadStats_ != null) {
                        mainThreadStats_ = org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.newBuilder(mainThreadStats_).mergeFrom(value).buildPartial();
                    } else {
                        mainThreadStats_ = value;
                    }
                    onChanged();
                } else {
                    mainThreadStatsBuilder_.mergeFrom(value);
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats main_thread_stats = 17;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearMainThreadStats() {
                if (mainThreadStatsBuilder_ == null) {
                    mainThreadStats_ = null;
                    onChanged();
                } else {
                    mainThreadStats_ = null;
                    mainThreadStatsBuilder_ = null;
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats main_thread_stats = 17;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.@org.checkerframework.checker.tainting.qual.Tainted Builder getMainThreadStatsBuilder() {
                onChanged();
                return getMainThreadStatsFieldBuilder().getBuilder();
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats main_thread_stats = 17;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStatsOrBuilder getMainThreadStatsOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (mainThreadStatsBuilder_ != null) {
                    return mainThreadStatsBuilder_.getMessageOrBuilder();
                } else {
                    return mainThreadStats_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.getDefaultInstance() : mainThreadStats_;
                }
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats main_thread_stats = 17;</code>
             */
            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStatsOrBuilder> getMainThreadStatsFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (mainThreadStatsBuilder_ == null) {
                    mainThreadStatsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStatsOrBuilder>(getMainThreadStats(), getParentForChildren(), isClean());
                    mainThreadStats_ = null;
                }
                return mainThreadStatsBuilder_;
            }

            private org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats auxThreadStats_;

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStatsOrBuilder> auxThreadStatsBuilder_;

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats aux_thread_stats = 18;</code>
             * @return Whether the auxThreadStats field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasAuxThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return auxThreadStatsBuilder_ != null || auxThreadStats_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats aux_thread_stats = 18;</code>
             * @return The auxThreadStats.
             */
            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.auxThreadStatsBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats getAuxThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (auxThreadStatsBuilder_ == null) {
                    return auxThreadStats_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.getDefaultInstance() : auxThreadStats_;
                } else {
                    return auxThreadStatsBuilder_.getMessage();
                }
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats aux_thread_stats = 18;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setAuxThreadStats(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats value) {
                if (auxThreadStatsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    auxThreadStats_ = value;
                    onChanged();
                } else {
                    auxThreadStatsBuilder_.setMessage(value);
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats aux_thread_stats = 18;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setAuxThreadStats(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.Builder builderForValue) {
                if (auxThreadStatsBuilder_ == null) {
                    auxThreadStats_ = builderForValue.build();
                    onChanged();
                } else {
                    auxThreadStatsBuilder_.setMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats aux_thread_stats = 18;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeAuxThreadStats(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStats value) {
                if (auxThreadStatsBuilder_ == null) {
                    if (auxThreadStats_ != null) {
                        auxThreadStats_ = org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.newBuilder(auxThreadStats_).mergeFrom(value).buildPartial();
                    } else {
                        auxThreadStats_ = value;
                    }
                    onChanged();
                } else {
                    auxThreadStatsBuilder_.mergeFrom(value);
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats aux_thread_stats = 18;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearAuxThreadStats() {
                if (auxThreadStatsBuilder_ == null) {
                    auxThreadStats_ = null;
                    onChanged();
                } else {
                    auxThreadStats_ = null;
                    auxThreadStatsBuilder_ = null;
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats aux_thread_stats = 18;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.@org.checkerframework.checker.tainting.qual.Tainted Builder getAuxThreadStatsBuilder() {
                onChanged();
                return getAuxThreadStatsFieldBuilder().getBuilder();
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats aux_thread_stats = 18;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ThreadStatsOrBuilder getAuxThreadStatsOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (auxThreadStatsBuilder_ != null) {
                    return auxThreadStatsBuilder_.getMessageOrBuilder();
                } else {
                    return auxThreadStats_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.getDefaultInstance() : auxThreadStats_;
                }
            }

            /**
             * <code>.org_glowroot_wire_api_model.Aggregate.ThreadStats aux_thread_stats = 18;</code>
             */
            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStatsOrBuilder> getAuxThreadStatsFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (auxThreadStatsBuilder_ == null) {
                    auxThreadStatsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStats.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ThreadStatsOrBuilder>(getAuxThreadStats(), getParentForChildren(), isClean());
                    auxThreadStats_ = null;
                }
                return auxThreadStatsBuilder_;
            }

            private org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram durationNanosHistogram_;

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.HistogramOrBuilder> durationNanosHistogramBuilder_;

            /**
             * <pre>
             * histogram values are in nanoseconds with microsecond
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.Histogram duration_nanos_histogram = 10;</code>
             * @return Whether the durationNanosHistogram field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasDurationNanosHistogram(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return durationNanosHistogramBuilder_ != null || durationNanosHistogram_ != null;
            }

            /**
             * <pre>
             * histogram values are in nanoseconds with microsecond
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.Histogram duration_nanos_histogram = 10;</code>
             * @return The durationNanosHistogram.
             */
            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.durationNanosHistogramBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram getDurationNanosHistogram(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (durationNanosHistogramBuilder_ == null) {
                    return durationNanosHistogram_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram.getDefaultInstance() : durationNanosHistogram_;
                } else {
                    return durationNanosHistogramBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * histogram values are in nanoseconds with microsecond
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.Histogram duration_nanos_histogram = 10;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setDurationNanosHistogram(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram value) {
                if (durationNanosHistogramBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    durationNanosHistogram_ = value;
                    onChanged();
                } else {
                    durationNanosHistogramBuilder_.setMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * histogram values are in nanoseconds with microsecond
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.Histogram duration_nanos_histogram = 10;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setDurationNanosHistogram(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram.Builder builderForValue) {
                if (durationNanosHistogramBuilder_ == null) {
                    durationNanosHistogram_ = builderForValue.build();
                    onChanged();
                } else {
                    durationNanosHistogramBuilder_.setMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * histogram values are in nanoseconds with microsecond
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.Histogram duration_nanos_histogram = 10;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeDurationNanosHistogram(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Histogram value) {
                if (durationNanosHistogramBuilder_ == null) {
                    if (durationNanosHistogram_ != null) {
                        durationNanosHistogram_ = org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram.newBuilder(durationNanosHistogram_).mergeFrom(value).buildPartial();
                    } else {
                        durationNanosHistogram_ = value;
                    }
                    onChanged();
                } else {
                    durationNanosHistogramBuilder_.mergeFrom(value);
                }
                return this;
            }

            /**
             * <pre>
             * histogram values are in nanoseconds with microsecond
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.Histogram duration_nanos_histogram = 10;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearDurationNanosHistogram() {
                if (durationNanosHistogramBuilder_ == null) {
                    durationNanosHistogram_ = null;
                    onChanged();
                } else {
                    durationNanosHistogram_ = null;
                    durationNanosHistogramBuilder_ = null;
                }
                return this;
            }

            /**
             * <pre>
             * histogram values are in nanoseconds with microsecond
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.Histogram duration_nanos_histogram = 10;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram.@org.checkerframework.checker.tainting.qual.Tainted Builder getDurationNanosHistogramBuilder() {
                onChanged();
                return getDurationNanosHistogramFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * histogram values are in nanoseconds with microsecond
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.Histogram duration_nanos_histogram = 10;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted HistogramOrBuilder getDurationNanosHistogramOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (durationNanosHistogramBuilder_ != null) {
                    return durationNanosHistogramBuilder_.getMessageOrBuilder();
                } else {
                    return durationNanosHistogram_ == null ? org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram.getDefaultInstance() : durationNanosHistogram_;
                }
            }

            /**
             * <pre>
             * histogram values are in nanoseconds with microsecond
             * </pre>
             *
             * <code>.org_glowroot_wire_api_model.Aggregate.Histogram duration_nanos_histogram = 10;</code>
             */
            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.HistogramOrBuilder> getDurationNanosHistogramFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (durationNanosHistogramBuilder_ == null) {
                    durationNanosHistogramBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Histogram.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.HistogramOrBuilder>(getDurationNanosHistogram(), getParentForChildren(), isClean());
                    durationNanosHistogram_ = null;
                }
                return durationNanosHistogramBuilder_;
            }

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType> oldQueriesByType_ = java.util.Collections.emptyList();

            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.oldQueriesByTypeBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private void ensureOldQueriesByTypeIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (!((bitField0_ & 0x00000004) != 0)) {
                    oldQueriesByType_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType>(oldQueriesByType_);
                    bitField0_ |= 0x00000004;
                }
            }

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByTypeOrBuilder> oldQueriesByTypeBuilder_;

            /**
             * <pre>
             * precision
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType> getOldQueriesByTypeList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (oldQueriesByTypeBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(oldQueriesByType_);
                } else {
                    return oldQueriesByTypeBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             * precision
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
             */
            public  @org.checkerframework.checker.tainting.qual.Tainted int getOldQueriesByTypeCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (oldQueriesByTypeBuilder_ == null) {
                    return oldQueriesByType_.size();
                } else {
                    return oldQueriesByTypeBuilder_.getCount();
                }
            }

            /**
             * <pre>
             * precision
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByType getOldQueriesByType(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                if (oldQueriesByTypeBuilder_ == null) {
                    return oldQueriesByType_.get(index);
                } else {
                    return oldQueriesByTypeBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             * precision
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setOldQueriesByType(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType value) {
                if (oldQueriesByTypeBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureOldQueriesByTypeIsMutable();
                    oldQueriesByType_.set(index, value);
                    onChanged();
                } else {
                    oldQueriesByTypeBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * precision
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setOldQueriesByType(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType.Builder builderForValue) {
                if (oldQueriesByTypeBuilder_ == null) {
                    ensureOldQueriesByTypeIsMutable();
                    oldQueriesByType_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    oldQueriesByTypeBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * precision
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addOldQueriesByType(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType value) {
                if (oldQueriesByTypeBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureOldQueriesByTypeIsMutable();
                    oldQueriesByType_.add(value);
                    onChanged();
                } else {
                    oldQueriesByTypeBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * precision
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addOldQueriesByType(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType value) {
                if (oldQueriesByTypeBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureOldQueriesByTypeIsMutable();
                    oldQueriesByType_.add(index, value);
                    onChanged();
                } else {
                    oldQueriesByTypeBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * precision
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addOldQueriesByType(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType.Builder builderForValue) {
                if (oldQueriesByTypeBuilder_ == null) {
                    ensureOldQueriesByTypeIsMutable();
                    oldQueriesByType_.add(builderForValue.build());
                    onChanged();
                } else {
                    oldQueriesByTypeBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * precision
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addOldQueriesByType(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType.Builder builderForValue) {
                if (oldQueriesByTypeBuilder_ == null) {
                    ensureOldQueriesByTypeIsMutable();
                    oldQueriesByType_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    oldQueriesByTypeBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * precision
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllOldQueriesByType(java.lang.Iterable<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType> values) {
                if (oldQueriesByTypeBuilder_ == null) {
                    ensureOldQueriesByTypeIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, oldQueriesByType_);
                    onChanged();
                } else {
                    oldQueriesByTypeBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * precision
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOldQueriesByType() {
                if (oldQueriesByTypeBuilder_ == null) {
                    oldQueriesByType_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                    onChanged();
                } else {
                    oldQueriesByTypeBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * precision
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder removeOldQueriesByType(int index) {
                if (oldQueriesByTypeBuilder_ == null) {
                    ensureOldQueriesByTypeIsMutable();
                    oldQueriesByType_.remove(index);
                    onChanged();
                } else {
                    oldQueriesByTypeBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * precision
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType.@org.checkerframework.checker.tainting.qual.Tainted Builder getOldQueriesByTypeBuilder(int index) {
                return getOldQueriesByTypeFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * precision
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldQueriesByTypeOrBuilder getOldQueriesByTypeOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                if (oldQueriesByTypeBuilder_ == null) {
                    return oldQueriesByType_.get(index);
                } else {
                    return oldQueriesByTypeBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * precision
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByTypeOrBuilder> getOldQueriesByTypeOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (oldQueriesByTypeBuilder_ != null) {
                    return oldQueriesByTypeBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(oldQueriesByType_);
                }
            }

            /**
             * <pre>
             * precision
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType.@org.checkerframework.checker.tainting.qual.Tainted Builder addOldQueriesByTypeBuilder() {
                return getOldQueriesByTypeFieldBuilder().addBuilder(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType.getDefaultInstance());
            }

            /**
             * <pre>
             * precision
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType.@org.checkerframework.checker.tainting.qual.Tainted Builder addOldQueriesByTypeBuilder(int index) {
                return getOldQueriesByTypeFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType.getDefaultInstance());
            }

            /**
             * <pre>
             * precision
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldQueriesByType old_queries_by_type = 11;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType.Builder> getOldQueriesByTypeBuilderList() {
                return getOldQueriesByTypeFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByTypeOrBuilder> getOldQueriesByTypeFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (oldQueriesByTypeBuilder_ == null) {
                    oldQueriesByTypeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByType.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldQueriesByTypeOrBuilder>(oldQueriesByType_, ((bitField0_ & 0x00000004) != 0), getParentForChildren(), isClean());
                    oldQueriesByType_ = null;
                }
                return oldQueriesByTypeBuilder_;
            }

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType> oldServiceCallsByType_ = java.util.Collections.emptyList();

            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.oldServiceCallsByTypeBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private void ensureOldServiceCallsByTypeIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (!((bitField0_ & 0x00000008) != 0)) {
                    oldServiceCallsByType_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType>(oldServiceCallsByType_);
                    bitField0_ |= 0x00000008;
                }
            }

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByTypeOrBuilder> oldServiceCallsByTypeBuilder_;

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType> getOldServiceCallsByTypeList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (oldServiceCallsByTypeBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(oldServiceCallsByType_);
                } else {
                    return oldServiceCallsByTypeBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
             */
            public  @org.checkerframework.checker.tainting.qual.Tainted int getOldServiceCallsByTypeCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (oldServiceCallsByTypeBuilder_ == null) {
                    return oldServiceCallsByType_.size();
                } else {
                    return oldServiceCallsByTypeBuilder_.getCount();
                }
            }

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByType getOldServiceCallsByType(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                if (oldServiceCallsByTypeBuilder_ == null) {
                    return oldServiceCallsByType_.get(index);
                } else {
                    return oldServiceCallsByTypeBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setOldServiceCallsByType(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType value) {
                if (oldServiceCallsByTypeBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureOldServiceCallsByTypeIsMutable();
                    oldServiceCallsByType_.set(index, value);
                    onChanged();
                } else {
                    oldServiceCallsByTypeBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setOldServiceCallsByType(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType.Builder builderForValue) {
                if (oldServiceCallsByTypeBuilder_ == null) {
                    ensureOldServiceCallsByTypeIsMutable();
                    oldServiceCallsByType_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    oldServiceCallsByTypeBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addOldServiceCallsByType(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType value) {
                if (oldServiceCallsByTypeBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureOldServiceCallsByTypeIsMutable();
                    oldServiceCallsByType_.add(value);
                    onChanged();
                } else {
                    oldServiceCallsByTypeBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addOldServiceCallsByType(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType value) {
                if (oldServiceCallsByTypeBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureOldServiceCallsByTypeIsMutable();
                    oldServiceCallsByType_.add(index, value);
                    onChanged();
                } else {
                    oldServiceCallsByTypeBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addOldServiceCallsByType(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType.Builder builderForValue) {
                if (oldServiceCallsByTypeBuilder_ == null) {
                    ensureOldServiceCallsByTypeIsMutable();
                    oldServiceCallsByType_.add(builderForValue.build());
                    onChanged();
                } else {
                    oldServiceCallsByTypeBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addOldServiceCallsByType(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType.Builder builderForValue) {
                if (oldServiceCallsByTypeBuilder_ == null) {
                    ensureOldServiceCallsByTypeIsMutable();
                    oldServiceCallsByType_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    oldServiceCallsByTypeBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllOldServiceCallsByType(java.lang.Iterable<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType> values) {
                if (oldServiceCallsByTypeBuilder_ == null) {
                    ensureOldServiceCallsByTypeIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, oldServiceCallsByType_);
                    onChanged();
                } else {
                    oldServiceCallsByTypeBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearOldServiceCallsByType() {
                if (oldServiceCallsByTypeBuilder_ == null) {
                    oldServiceCallsByType_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000008);
                    onChanged();
                } else {
                    oldServiceCallsByTypeBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder removeOldServiceCallsByType(int index) {
                if (oldServiceCallsByTypeBuilder_ == null) {
                    ensureOldServiceCallsByTypeIsMutable();
                    oldServiceCallsByType_.remove(index);
                    onChanged();
                } else {
                    oldServiceCallsByTypeBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType.@org.checkerframework.checker.tainting.qual.Tainted Builder getOldServiceCallsByTypeBuilder(int index) {
                return getOldServiceCallsByTypeFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted OldServiceCallsByTypeOrBuilder getOldServiceCallsByTypeOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                if (oldServiceCallsByTypeBuilder_ == null) {
                    return oldServiceCallsByType_.get(index);
                } else {
                    return oldServiceCallsByTypeBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByTypeOrBuilder> getOldServiceCallsByTypeOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (oldServiceCallsByTypeBuilder_ != null) {
                    return oldServiceCallsByTypeBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(oldServiceCallsByType_);
                }
            }

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType.@org.checkerframework.checker.tainting.qual.Tainted Builder addOldServiceCallsByTypeBuilder() {
                return getOldServiceCallsByTypeFieldBuilder().addBuilder(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType.getDefaultInstance());
            }

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType.@org.checkerframework.checker.tainting.qual.Tainted Builder addOldServiceCallsByTypeBuilder(int index) {
                return getOldServiceCallsByTypeFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType.getDefaultInstance());
            }

            /**
             * <pre>
             * deprecated in 0.10.6
             * </pre>
             *
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType old_service_calls_by_type = 12;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType.Builder> getOldServiceCallsByTypeBuilderList() {
                return getOldServiceCallsByTypeFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByTypeOrBuilder> getOldServiceCallsByTypeFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (oldServiceCallsByTypeBuilder_ == null) {
                    oldServiceCallsByTypeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByType.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.OldServiceCallsByTypeOrBuilder>(oldServiceCallsByType_, ((bitField0_ & 0x00000008) != 0), getParentForChildren(), isClean());
                    oldServiceCallsByType_ = null;
                }
                return oldServiceCallsByTypeBuilder_;
            }

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query> query_ = java.util.Collections.emptyList();

            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.queryBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private void ensureQueryIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (!((bitField0_ & 0x00000010) != 0)) {
                    query_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query>(query_);
                    bitField0_ |= 0x00000010;
                }
            }

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.QueryOrBuilder> queryBuilder_;

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query> getQueryList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (queryBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(query_);
                } else {
                    return queryBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
             */
            public  @org.checkerframework.checker.tainting.qual.Tainted int getQueryCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (queryBuilder_ == null) {
                    return query_.size();
                } else {
                    return queryBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted Query getQuery(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                if (queryBuilder_ == null) {
                    return query_.get(index);
                } else {
                    return queryBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setQuery(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query value) {
                if (queryBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureQueryIsMutable();
                    query_.set(index, value);
                    onChanged();
                } else {
                    queryBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setQuery(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.Builder builderForValue) {
                if (queryBuilder_ == null) {
                    ensureQueryIsMutable();
                    query_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    queryBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addQuery(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query value) {
                if (queryBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureQueryIsMutable();
                    query_.add(value);
                    onChanged();
                } else {
                    queryBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addQuery(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query value) {
                if (queryBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureQueryIsMutable();
                    query_.add(index, value);
                    onChanged();
                } else {
                    queryBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addQuery(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.Builder builderForValue) {
                if (queryBuilder_ == null) {
                    ensureQueryIsMutable();
                    query_.add(builderForValue.build());
                    onChanged();
                } else {
                    queryBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addQuery(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.Builder builderForValue) {
                if (queryBuilder_ == null) {
                    ensureQueryIsMutable();
                    query_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    queryBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllQuery(java.lang.Iterable<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query> values) {
                if (queryBuilder_ == null) {
                    ensureQueryIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, query_);
                    onChanged();
                } else {
                    queryBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearQuery() {
                if (queryBuilder_ == null) {
                    query_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000010);
                    onChanged();
                } else {
                    queryBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder removeQuery(int index) {
                if (queryBuilder_ == null) {
                    ensureQueryIsMutable();
                    query_.remove(index);
                    onChanged();
                } else {
                    queryBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.@org.checkerframework.checker.tainting.qual.Tainted Builder getQueryBuilder(int index) {
                return getQueryFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted QueryOrBuilder getQueryOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                if (queryBuilder_ == null) {
                    return query_.get(index);
                } else {
                    return queryBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.QueryOrBuilder> getQueryOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (queryBuilder_ != null) {
                    return queryBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(query_);
                }
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.@org.checkerframework.checker.tainting.qual.Tainted Builder addQueryBuilder() {
                return getQueryFieldBuilder().addBuilder(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.getDefaultInstance());
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.@org.checkerframework.checker.tainting.qual.Tainted Builder addQueryBuilder(int index) {
                return getQueryFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.getDefaultInstance());
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.Query query = 15;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.Builder> getQueryBuilderList() {
                return getQueryFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.QueryOrBuilder> getQueryFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (queryBuilder_ == null) {
                    queryBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.Query.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.QueryOrBuilder>(query_, ((bitField0_ & 0x00000010) != 0), getParentForChildren(), isClean());
                    query_ = null;
                }
                return queryBuilder_;
            }

            private java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall> serviceCall_ = java.util.Collections.emptyList();

            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.serviceCallBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            private void ensureServiceCallIsMutable(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (!((bitField0_ & 0x00000020) != 0)) {
                    serviceCall_ = new java.util.ArrayList<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall>(serviceCall_);
                    bitField0_ |= 0x00000020;
                }
            }

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCallOrBuilder> serviceCallBuilder_;

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall> getServiceCallList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (serviceCallBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(serviceCall_);
                } else {
                    return serviceCallBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
             */
            public  @org.checkerframework.checker.tainting.qual.Tainted int getServiceCallCount(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (serviceCallBuilder_ == null) {
                    return serviceCall_.size();
                } else {
                    return serviceCallBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCall getServiceCall(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                if (serviceCallBuilder_ == null) {
                    return serviceCall_.get(index);
                } else {
                    return serviceCallBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setServiceCall(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall value) {
                if (serviceCallBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureServiceCallIsMutable();
                    serviceCall_.set(index, value);
                    onChanged();
                } else {
                    serviceCallBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setServiceCall(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall.Builder builderForValue) {
                if (serviceCallBuilder_ == null) {
                    ensureServiceCallIsMutable();
                    serviceCall_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    serviceCallBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addServiceCall(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall value) {
                if (serviceCallBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureServiceCallIsMutable();
                    serviceCall_.add(value);
                    onChanged();
                } else {
                    serviceCallBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addServiceCall(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall value) {
                if (serviceCallBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureServiceCallIsMutable();
                    serviceCall_.add(index, value);
                    onChanged();
                } else {
                    serviceCallBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addServiceCall(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall.Builder builderForValue) {
                if (serviceCallBuilder_ == null) {
                    ensureServiceCallIsMutable();
                    serviceCall_.add(builderForValue.build());
                    onChanged();
                } else {
                    serviceCallBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addServiceCall(int index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall.Builder builderForValue) {
                if (serviceCallBuilder_ == null) {
                    ensureServiceCallIsMutable();
                    serviceCall_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    serviceCallBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder addAllServiceCall(java.lang.Iterable<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall> values) {
                if (serviceCallBuilder_ == null) {
                    ensureServiceCallIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, serviceCall_);
                    onChanged();
                } else {
                    serviceCallBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearServiceCall() {
                if (serviceCallBuilder_ == null) {
                    serviceCall_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000020);
                    onChanged();
                } else {
                    serviceCallBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder removeServiceCall(int index) {
                if (serviceCallBuilder_ == null) {
                    ensureServiceCallIsMutable();
                    serviceCall_.remove(index);
                    onChanged();
                } else {
                    serviceCallBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall.@org.checkerframework.checker.tainting.qual.Tainted Builder getServiceCallBuilder(int index) {
                return getServiceCallFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.@org.checkerframework.checker.tainting.qual.Tainted ServiceCallOrBuilder getServiceCallOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this,  @org.checkerframework.checker.tainting.qual.Tainted int index) {
                if (serviceCallBuilder_ == null) {
                    return serviceCall_.get(index);
                } else {
                    return serviceCallBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<? extends org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCallOrBuilder> getServiceCallOrBuilderList(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (serviceCallBuilder_ != null) {
                    return serviceCallBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(serviceCall_);
                }
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall.@org.checkerframework.checker.tainting.qual.Tainted Builder addServiceCallBuilder() {
                return getServiceCallFieldBuilder().addBuilder(org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall.getDefaultInstance());
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
             */
            public org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall.@org.checkerframework.checker.tainting.qual.Tainted Builder addServiceCallBuilder(int index) {
                return getServiceCallFieldBuilder().addBuilder(index, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall.getDefaultInstance());
            }

            /**
             * <code>repeated .org_glowroot_wire_api_model.Aggregate.ServiceCall service_call = 16;</code>
             */
            public java.util.@org.checkerframework.checker.tainting.qual.Tainted List<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall.Builder> getServiceCallBuilderList() {
                return getServiceCallFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCallOrBuilder> getServiceCallFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (serviceCallBuilder_ == null) {
                    serviceCallBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCall.Builder, org.glowroot.wire.api.model.AggregateOuterClass.Aggregate.ServiceCallOrBuilder>(serviceCall_, ((bitField0_ & 0x00000020) != 0), getParentForChildren(), isClean());
                    serviceCall_ = null;
                }
                return serviceCallBuilder_;
            }

            private org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile mainThreadProfile_;

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.ProfileOuterClass.Profile, org.glowroot.wire.api.model.ProfileOuterClass.Profile.Builder, org.glowroot.wire.api.model.ProfileOuterClass.ProfileOrBuilder> mainThreadProfileBuilder_;

            /**
             * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 13;</code>
             * @return Whether the mainThreadProfile field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasMainThreadProfile(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return mainThreadProfileBuilder_ != null || mainThreadProfile_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 13;</code>
             * @return The mainThreadProfile.
             */
            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.mainThreadProfileBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            public org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile getMainThreadProfile(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (mainThreadProfileBuilder_ == null) {
                    return mainThreadProfile_ == null ? org.glowroot.wire.api.model.ProfileOuterClass.Profile.getDefaultInstance() : mainThreadProfile_;
                } else {
                    return mainThreadProfileBuilder_.getMessage();
                }
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 13;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setMainThreadProfile(org.glowroot.wire.api.model.ProfileOuterClass.Profile value) {
                if (mainThreadProfileBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    mainThreadProfile_ = value;
                    onChanged();
                } else {
                    mainThreadProfileBuilder_.setMessage(value);
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 13;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setMainThreadProfile(org.glowroot.wire.api.model.ProfileOuterClass.Profile.Builder builderForValue) {
                if (mainThreadProfileBuilder_ == null) {
                    mainThreadProfile_ = builderForValue.build();
                    onChanged();
                } else {
                    mainThreadProfileBuilder_.setMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 13;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeMainThreadProfile(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile value) {
                if (mainThreadProfileBuilder_ == null) {
                    if (mainThreadProfile_ != null) {
                        mainThreadProfile_ = org.glowroot.wire.api.model.ProfileOuterClass.Profile.newBuilder(mainThreadProfile_).mergeFrom(value).buildPartial();
                    } else {
                        mainThreadProfile_ = value;
                    }
                    onChanged();
                } else {
                    mainThreadProfileBuilder_.mergeFrom(value);
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 13;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearMainThreadProfile() {
                if (mainThreadProfileBuilder_ == null) {
                    mainThreadProfile_ = null;
                    onChanged();
                } else {
                    mainThreadProfile_ = null;
                    mainThreadProfileBuilder_ = null;
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 13;</code>
             */
            public org.glowroot.wire.api.model.ProfileOuterClass.Profile.@org.checkerframework.checker.tainting.qual.Tainted Builder getMainThreadProfileBuilder() {
                onChanged();
                return getMainThreadProfileFieldBuilder().getBuilder();
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 13;</code>
             */
            public org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted ProfileOrBuilder getMainThreadProfileOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (mainThreadProfileBuilder_ != null) {
                    return mainThreadProfileBuilder_.getMessageOrBuilder();
                } else {
                    return mainThreadProfile_ == null ? org.glowroot.wire.api.model.ProfileOuterClass.Profile.getDefaultInstance() : mainThreadProfile_;
                }
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile main_thread_profile = 13;</code>
             */
            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.ProfileOuterClass.Profile, org.glowroot.wire.api.model.ProfileOuterClass.Profile.Builder, org.glowroot.wire.api.model.ProfileOuterClass.ProfileOrBuilder> getMainThreadProfileFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (mainThreadProfileBuilder_ == null) {
                    mainThreadProfileBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.ProfileOuterClass.Profile, org.glowroot.wire.api.model.ProfileOuterClass.Profile.Builder, org.glowroot.wire.api.model.ProfileOuterClass.ProfileOrBuilder>(getMainThreadProfile(), getParentForChildren(), isClean());
                    mainThreadProfile_ = null;
                }
                return mainThreadProfileBuilder_;
            }

            private org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile auxThreadProfile_;

            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.ProfileOuterClass.Profile, org.glowroot.wire.api.model.ProfileOuterClass.Profile.Builder, org.glowroot.wire.api.model.ProfileOuterClass.ProfileOrBuilder> auxThreadProfileBuilder_;

            /**
             * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 14;</code>
             * @return Whether the auxThreadProfile field is set.
             */
            @org.checkerframework.dataflow.qual.Pure
            public  @org.checkerframework.checker.tainting.qual.Tainted boolean hasAuxThreadProfile(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                return auxThreadProfileBuilder_ != null || auxThreadProfile_ != null;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 14;</code>
             * @return The auxThreadProfile.
             */
            @org.checkerframework.framework.qual.RequiresQualifier(expression = { "this.auxThreadProfileBuilder_" }, qualifier = org.checkerframework.checker.tainting.qual.Untainted.class)
            public org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile getAuxThreadProfile(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (auxThreadProfileBuilder_ == null) {
                    return auxThreadProfile_ == null ? org.glowroot.wire.api.model.ProfileOuterClass.Profile.getDefaultInstance() : auxThreadProfile_;
                } else {
                    return auxThreadProfileBuilder_.getMessage();
                }
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 14;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setAuxThreadProfile(org.glowroot.wire.api.model.ProfileOuterClass.Profile value) {
                if (auxThreadProfileBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    auxThreadProfile_ = value;
                    onChanged();
                } else {
                    auxThreadProfileBuilder_.setMessage(value);
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 14;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder setAuxThreadProfile(org.glowroot.wire.api.model.ProfileOuterClass.Profile.Builder builderForValue) {
                if (auxThreadProfileBuilder_ == null) {
                    auxThreadProfile_ = builderForValue.build();
                    onChanged();
                } else {
                    auxThreadProfileBuilder_.setMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 14;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder mergeAuxThreadProfile(@org.checkerframework.checker.tainting.qual.Tainted Builder this, org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Profile value) {
                if (auxThreadProfileBuilder_ == null) {
                    if (auxThreadProfile_ != null) {
                        auxThreadProfile_ = org.glowroot.wire.api.model.ProfileOuterClass.Profile.newBuilder(auxThreadProfile_).mergeFrom(value).buildPartial();
                    } else {
                        auxThreadProfile_ = value;
                    }
                    onChanged();
                } else {
                    auxThreadProfileBuilder_.mergeFrom(value);
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 14;</code>
             */
            public @org.checkerframework.checker.tainting.qual.Tainted Builder clearAuxThreadProfile() {
                if (auxThreadProfileBuilder_ == null) {
                    auxThreadProfile_ = null;
                    onChanged();
                } else {
                    auxThreadProfile_ = null;
                    auxThreadProfileBuilder_ = null;
                }
                return this;
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 14;</code>
             */
            public org.glowroot.wire.api.model.ProfileOuterClass.Profile.@org.checkerframework.checker.tainting.qual.Tainted Builder getAuxThreadProfileBuilder() {
                onChanged();
                return getAuxThreadProfileFieldBuilder().getBuilder();
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 14;</code>
             */
            public org.glowroot.wire.api.model.ProfileOuterClass.@org.checkerframework.checker.tainting.qual.Tainted ProfileOrBuilder getAuxThreadProfileOrBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (auxThreadProfileBuilder_ != null) {
                    return auxThreadProfileBuilder_.getMessageOrBuilder();
                } else {
                    return auxThreadProfile_ == null ? org.glowroot.wire.api.model.ProfileOuterClass.Profile.getDefaultInstance() : auxThreadProfile_;
                }
            }

            /**
             * <code>.org_glowroot_wire_api_model.Profile aux_thread_profile = 14;</code>
             */
            private com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted SingleFieldBuilderV3<org.glowroot.wire.api.model.ProfileOuterClass.Profile, org.glowroot.wire.api.model.ProfileOuterClass.Profile.Builder, org.glowroot.wire.api.model.ProfileOuterClass.ProfileOrBuilder> getAuxThreadProfileFieldBuilder(@org.checkerframework.checker.tainting.qual.Tainted Builder this) {
                if (auxThreadProfileBuilder_ == null) {
                    auxThreadProfileBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<org.glowroot.wire.api.model.ProfileOuterClass.Profile, org.glowroot.wire.api.model.ProfileOuterClass.Profile.Builder, org.glowroot.wire.api.model.ProfileOuterClass.ProfileOrBuilder>(getAuxThreadProfile(), getParentForChildren(), isClean());
                    auxThreadProfile_ = null;
                }
                return auxThreadProfileBuilder_;
            }

            public final @org.checkerframework.checker.tainting.qual.Tainted Builder setUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            public final @org.checkerframework.checker.tainting.qual.Tainted Builder mergeUnknownFields(@org.checkerframework.checker.tainting.qual.Tainted Builder this, final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }
            // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.Aggregate)
        }

        // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.Aggregate)
        private static final org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new org.glowroot.wire.api.model.AggregateOuterClass.Aggregate();
        }

        @org.checkerframework.dataflow.qual.Pure
        public static org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Aggregate> PARSER = new com.google.protobuf.AbstractParser<Aggregate>() {

            public Aggregate parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return new Aggregate(input, extensionRegistry);
            }
        };

        @org.checkerframework.dataflow.qual.Pure
        public static com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Aggregate> parser() {
            return PARSER;
        }

        @org.checkerframework.dataflow.qual.Pure
        public com.google.protobuf.@org.checkerframework.checker.tainting.qual.Tainted Parser<Aggregate> getParserForType(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return PARSER;
        }

        @org.checkerframework.dataflow.qual.Pure
        public org.glowroot.wire.api.model.AggregateOuterClass.@org.checkerframework.checker.tainting.qual.Tainted Aggregate getDefaultInstanceForType(@org.checkerframework.checker.tainting.qual.Tainted Aggregate this) {
            return DEFAULT_INSTANCE;
        }
    }

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_OldAggregatesByType_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_OldAggregatesByType_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_OldTransactionAggregate_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_OldTransactionAggregate_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Aggregate_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Aggregate_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Aggregate_Histogram_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Aggregate_Histogram_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Aggregate_Timer_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Aggregate_Timer_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Aggregate_OldThreadStats_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Aggregate_OldThreadStats_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Aggregate_ThreadStats_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Aggregate_ThreadStats_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Aggregate_OldQueriesByType_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Aggregate_OldQueriesByType_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Aggregate_OldQuery_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Aggregate_OldQuery_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Aggregate_Query_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Aggregate_Query_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Aggregate_OldServiceCallsByType_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Aggregate_OldServiceCallsByType_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Aggregate_OldServiceCall_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Aggregate_OldServiceCall_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Aggregate_ServiceCall_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Aggregate_ServiceCall_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted Descriptor internal_static_org_glowroot_wire_api_model_Aggregate_SharedQueryText_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.@org.checkerframework.checker.tainting.qual.Tainted FieldAccessorTable internal_static_org_glowroot_wire_api_model_Aggregate_SharedQueryText_fieldAccessorTable;

    @org.checkerframework.dataflow.qual.Pure
    public static com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FileDescriptor getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.@org.checkerframework.checker.tainting.qual.Tainted FileDescriptor descriptor;

    static {
        java.lang.String[] descriptorData = { "\n\017Aggregate.proto\022\033org_glowroot_wire_api_model\032\rProfile.proto\032\014Common.proto\"\307\001\n\023OldAggregatesByType\022\030\n\020transaction_type\030\001 \001(\t\022A\n\021overall_aggregate\030\002 \001(\0132&.org_glowroot_wire_api_model.Aggregate\022S\n\025transaction_aggregate\030\003 \003(\01324.org_glowroot_wire_api_model.OldTransactionAggregate\"n\n\027OldTransactionAggregate\022\030\n\020transaction_name\030\002 \001(\t\0229\n\taggregate\030\003 \001(\0132&.org_glowroot_wire_api_model.Aggregate\"\204\025\n\tAggregate\022\034\n\024total_duration_nanos\030\001 \001(\001\022\031\n\021transaction_count\030\002 \001(\003\022\023\n\013error_count\030\003 \001(\003\022\032\n\022async_transactions\030\004 \001(\010\022L\n\026main_thread_root_timer\030\005 \003(\0132,.org_glowroot_wire_api_model.Aggregate.Timer\022K\n\025aux_thread_root_timer\030\006 \001(\0132,.org_glowroot_wire_api_model.Aggregate.Timer\022A\n\013async_timer\030\007 \003(\0132,.org_glowroot_wire_api_model.Aggregate.Timer\022T\n\025old_main_thread_stats\030\010 \001(\01325.org_glowroot_wire_api_model.Aggregate.OldThreadStats\022S\n\024old_aux_thread_stats\030\t \001(\01325.org_glowroot_wire_api_model.Aggregate.OldThreadStats\022M\n\021main_thread_stats\030\021 \001(\01322.org_glowroot_wire_api_model.Aggregate.ThreadStats\022L\n\020aux_thread_stats\030\022 \001(\01322.org_glowroot_wire_api_model.Aggregate.ThreadStats\022R\n\030duration_nanos_histogram\030\n \001(\01320.org_glowroot_wire_api_model.Aggregate.Histogram\022T\n\023old_queries_by_type\030\013 \003(\01327.org_glowroot_wire_api_model.Aggregate.OldQueriesByType\022_\n\031old_service_calls_by_type\030\014 \003(\0132<.org_glowroot_wire_api_model.Aggregate.OldServiceCallsByType\022;\n\005query\030\017 \003(\0132,.org_glowroot_wire_api_model.Aggregate.Query\022H\n\014service_call\030\020 \003(\01322.org_glowroot_wire_api_model.Aggregate.ServiceCall\022A\n\023main_thread_profile\030\r \001(\0132$.org_glowroot_wire_api_model.Profile\022@\n\022aux_thread_profile\030\016 \001(\0132$.org_glowroot_wire_api_model.Profile\032=\n\tHistogram\022\031\n\021ordered_raw_value\030\001 \003(\003\022\025\n\rencoded_bytes\030\002 \001(\014\032\216\001\n\005Timer\022\014\n\004name\030\001 \001(\t\022\020\n\010extended\030\002 \001(\010\022\023\n\013total_nanos\030\003 \001(\001\022\r\n\005count\030\004 \001(\003\022A\n\013child_timer\030\005 \003(\0132,.org_glowroot_wire_api_model.Aggregate.Timer\032\265\002\n\016OldThreadStats\022D\n\017total_cpu_nanos\030\001 \001(\0132+.org_glowroot_wire_api_model.OptionalDouble\022H\n\023total_blocked_nanos\030\002 \001(\0132+.org_glowroot_wire_api_model.OptionalDouble\022G\n\022total_waited_nanos\030\003 \001(\0132+.org_glowroot_wire_api_model.OptionalDouble\022J\n\025total_allocated_bytes\030\004 \001(\0132+.org_glowroot_wire_api_model.OptionalDouble\032~\n\013ThreadStats\022\027\n\017total_cpu_nanos\030\001 \001(\001\022\033\n\023total_blocked_nanos\030\002 \001(\001\022\032\n\022total_waited_nanos\030\003 \001(\001\022\035\n\025total_allocated_bytes\030\004 \001(\001\032`\n\020OldQueriesByType\022\014\n\004type\030\001 \001(\t\022>\n\005query\030\002 \003(\0132/.org_glowroot_wire_api_model.Aggregate.OldQuery\032\242\001\n\010OldQuery\022\037\n\027shared_query_text_index\030\005 \001(\005\022\034\n\024total_duration_nanos\030\002 \001(\001\022\027\n\017execution_count\030\003 \001(\003\022>\n\ntotal_rows\030\004 \001(\0132*.org_glowroot_wire_api_model.OptionalInt64\032\275\001\n\005Query\022\014\n\004type\030\001 \001(\t\022\037\n\027shared_query_text_index\030\002 \001(\005\022\034\n\024total_duration_nanos\030\003 \001(\001\022\027\n\017execution_count\030\004 \001(\003\022>\n\ntotal_rows\030\005 \001(\0132*.org_glowroot_wire_api_model.OptionalInt64\022\016\n\006active\030\006 \001(\010\032r\n\025OldServiceCallsByType\022\014\n\004type\030\001 \001(\t\022K\n\014service_call\030\002 \003(\01325.org_glowroot_wire_api_model.Aggregate.OldServiceCall\032U\n\016OldServiceCall\022\014\n\004text\030\001 \001(\t\022\034\n\024total_duration_nanos\030\002 \001(\001\022\027\n\017execution_count\030\003 \001(\003\032`\n\013ServiceCall\022\014\n\004type\030\001 \001(\t\022\014\n\004text\030\002 \001(\t\022\034\n\024total_duration_nanos\030\003 \001(\001\022\027\n\017execution_count\030\004 \001(\003\032T\n\017SharedQueryText\022\021\n\tfull_text\030\001 \001(\t\022\026\n\016truncated_text\030\002 \001(\t\022\026\n\016full_text_sha1\030\003 \001(\tB\035\n\033org.glowroot.wire.api.modelb\006proto3" };
        descriptor = com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData, new com.google.protobuf.Descriptors.FileDescriptor[] { org.glowroot.wire.api.model.ProfileOuterClass.getDescriptor(), org.glowroot.wire.api.model.Proto.getDescriptor() });
        internal_static_org_glowroot_wire_api_model_OldAggregatesByType_descriptor = getDescriptor().getMessageTypes().get(0);
        internal_static_org_glowroot_wire_api_model_OldAggregatesByType_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_OldAggregatesByType_descriptor, new java.lang.String[] { "TransactionType", "OverallAggregate", "TransactionAggregate" });
        internal_static_org_glowroot_wire_api_model_OldTransactionAggregate_descriptor = getDescriptor().getMessageTypes().get(1);
        internal_static_org_glowroot_wire_api_model_OldTransactionAggregate_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_OldTransactionAggregate_descriptor, new java.lang.String[] { "TransactionName", "Aggregate" });
        internal_static_org_glowroot_wire_api_model_Aggregate_descriptor = getDescriptor().getMessageTypes().get(2);
        internal_static_org_glowroot_wire_api_model_Aggregate_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Aggregate_descriptor, new java.lang.String[] { "TotalDurationNanos", "TransactionCount", "ErrorCount", "AsyncTransactions", "MainThreadRootTimer", "AuxThreadRootTimer", "AsyncTimer", "OldMainThreadStats", "OldAuxThreadStats", "MainThreadStats", "AuxThreadStats", "DurationNanosHistogram", "OldQueriesByType", "OldServiceCallsByType", "Query", "ServiceCall", "MainThreadProfile", "AuxThreadProfile" });
        internal_static_org_glowroot_wire_api_model_Aggregate_Histogram_descriptor = internal_static_org_glowroot_wire_api_model_Aggregate_descriptor.getNestedTypes().get(0);
        internal_static_org_glowroot_wire_api_model_Aggregate_Histogram_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Aggregate_Histogram_descriptor, new java.lang.String[] { "OrderedRawValue", "EncodedBytes" });
        internal_static_org_glowroot_wire_api_model_Aggregate_Timer_descriptor = internal_static_org_glowroot_wire_api_model_Aggregate_descriptor.getNestedTypes().get(1);
        internal_static_org_glowroot_wire_api_model_Aggregate_Timer_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Aggregate_Timer_descriptor, new java.lang.String[] { "Name", "Extended", "TotalNanos", "Count", "ChildTimer" });
        internal_static_org_glowroot_wire_api_model_Aggregate_OldThreadStats_descriptor = internal_static_org_glowroot_wire_api_model_Aggregate_descriptor.getNestedTypes().get(2);
        internal_static_org_glowroot_wire_api_model_Aggregate_OldThreadStats_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Aggregate_OldThreadStats_descriptor, new java.lang.String[] { "TotalCpuNanos", "TotalBlockedNanos", "TotalWaitedNanos", "TotalAllocatedBytes" });
        internal_static_org_glowroot_wire_api_model_Aggregate_ThreadStats_descriptor = internal_static_org_glowroot_wire_api_model_Aggregate_descriptor.getNestedTypes().get(3);
        internal_static_org_glowroot_wire_api_model_Aggregate_ThreadStats_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Aggregate_ThreadStats_descriptor, new java.lang.String[] { "TotalCpuNanos", "TotalBlockedNanos", "TotalWaitedNanos", "TotalAllocatedBytes" });
        internal_static_org_glowroot_wire_api_model_Aggregate_OldQueriesByType_descriptor = internal_static_org_glowroot_wire_api_model_Aggregate_descriptor.getNestedTypes().get(4);
        internal_static_org_glowroot_wire_api_model_Aggregate_OldQueriesByType_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Aggregate_OldQueriesByType_descriptor, new java.lang.String[] { "Type", "Query" });
        internal_static_org_glowroot_wire_api_model_Aggregate_OldQuery_descriptor = internal_static_org_glowroot_wire_api_model_Aggregate_descriptor.getNestedTypes().get(5);
        internal_static_org_glowroot_wire_api_model_Aggregate_OldQuery_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Aggregate_OldQuery_descriptor, new java.lang.String[] { "SharedQueryTextIndex", "TotalDurationNanos", "ExecutionCount", "TotalRows" });
        internal_static_org_glowroot_wire_api_model_Aggregate_Query_descriptor = internal_static_org_glowroot_wire_api_model_Aggregate_descriptor.getNestedTypes().get(6);
        internal_static_org_glowroot_wire_api_model_Aggregate_Query_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Aggregate_Query_descriptor, new java.lang.String[] { "Type", "SharedQueryTextIndex", "TotalDurationNanos", "ExecutionCount", "TotalRows", "Active" });
        internal_static_org_glowroot_wire_api_model_Aggregate_OldServiceCallsByType_descriptor = internal_static_org_glowroot_wire_api_model_Aggregate_descriptor.getNestedTypes().get(7);
        internal_static_org_glowroot_wire_api_model_Aggregate_OldServiceCallsByType_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Aggregate_OldServiceCallsByType_descriptor, new java.lang.String[] { "Type", "ServiceCall" });
        internal_static_org_glowroot_wire_api_model_Aggregate_OldServiceCall_descriptor = internal_static_org_glowroot_wire_api_model_Aggregate_descriptor.getNestedTypes().get(8);
        internal_static_org_glowroot_wire_api_model_Aggregate_OldServiceCall_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Aggregate_OldServiceCall_descriptor, new java.lang.String[] { "Text", "TotalDurationNanos", "ExecutionCount" });
        internal_static_org_glowroot_wire_api_model_Aggregate_ServiceCall_descriptor = internal_static_org_glowroot_wire_api_model_Aggregate_descriptor.getNestedTypes().get(9);
        internal_static_org_glowroot_wire_api_model_Aggregate_ServiceCall_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Aggregate_ServiceCall_descriptor, new java.lang.String[] { "Type", "Text", "TotalDurationNanos", "ExecutionCount" });
        internal_static_org_glowroot_wire_api_model_Aggregate_SharedQueryText_descriptor = internal_static_org_glowroot_wire_api_model_Aggregate_descriptor.getNestedTypes().get(10);
        internal_static_org_glowroot_wire_api_model_Aggregate_SharedQueryText_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_glowroot_wire_api_model_Aggregate_SharedQueryText_descriptor, new java.lang.String[] { "FullText", "TruncatedText", "FullTextSha1" });
        org.glowroot.wire.api.model.ProfileOuterClass.getDescriptor();
        org.glowroot.wire.api.model.Proto.getDescriptor();
    }
}
